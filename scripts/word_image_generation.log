2025-08-08 12:50:41,451 - DEBUG - Using proactor: IocpProactor
2025-08-08 12:50:42,959 - INFO - Word Image Service initialized
2025-08-08 12:50:43,229 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=30.0 socket_options=None
2025-08-08 12:50:43,501 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000014B0F6B1750>
2025-08-08 12:50:43,501 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 12:50:43,501 - DEBUG - send_request_headers.complete
2025-08-08 12:50:43,501 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 12:50:43,502 - DEBUG - send_request_body.complete
2025-08-08 12:50:43,502 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 12:50:43,557 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 08 Aug 2025 07:50:43 GMT'), (b'server', b'uvicorn'), (b'content-length', b'9467'), (b'content-type', b'application/json')])
2025-08-08 12:50:43,558 - INFO - HTTP Request: GET http://localhost:8000/words/without-images "HTTP/1.1 200 OK"
2025-08-08 12:50:43,558 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 12:50:43,558 - DEBUG - receive_response_body.complete
2025-08-08 12:50:43,558 - DEBUG - response_closed.started
2025-08-08 12:50:43,558 - DEBUG - response_closed.complete
2025-08-08 12:50:43,559 - INFO - Found 50 words without images
2025-08-08 12:50:43,559 - INFO - Processing 1 words without images
2025-08-08 12:50:43,559 - INFO - [1/1] Processing: ит (ID: 2)
2025-08-08 12:50:43,559 - INFO - Processing word 2: 'ит'
2025-08-08 12:50:43,559 - INFO - Category ID missing for word 2, fetching full details...
2025-08-08 12:50:43,559 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 12:50:43,559 - DEBUG - send_request_headers.complete
2025-08-08 12:50:43,559 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 12:50:43,559 - DEBUG - send_request_body.complete
2025-08-08 12:50:43,560 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 12:50:43,575 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 08 Aug 2025 07:50:43 GMT'), (b'server', b'uvicorn'), (b'content-length', b'1284'), (b'content-type', b'application/json')])
2025-08-08 12:50:43,575 - INFO - HTTP Request: GET http://localhost:8000/words/2 "HTTP/1.1 200 OK"
2025-08-08 12:50:43,575 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 12:50:43,576 - DEBUG - receive_response_body.complete
2025-08-08 12:50:43,576 - DEBUG - response_closed.started
2025-08-08 12:50:43,576 - DEBUG - response_closed.complete
2025-08-08 12:50:43,576 - DEBUG - Retrieved word details for ID 2
2025-08-08 12:50:43,585 - DEBUG - close.started
2025-08-08 12:50:43,585 - DEBUG - close.complete
2025-08-08 12:54:50,190 - DEBUG - Using proactor: IocpProactor
2025-08-08 12:54:51,633 - INFO - Word Image Service initialized
2025-08-08 12:54:51,906 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=30.0 socket_options=None
2025-08-08 12:54:52,168 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000198CABB17D0>
2025-08-08 12:54:52,168 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 12:54:52,169 - DEBUG - send_request_headers.complete
2025-08-08 12:54:52,169 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 12:54:52,169 - DEBUG - send_request_body.complete
2025-08-08 12:54:52,169 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 12:54:52,178 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 08 Aug 2025 07:54:51 GMT'), (b'server', b'uvicorn'), (b'content-length', b'9467'), (b'content-type', b'application/json')])
2025-08-08 12:54:52,179 - INFO - HTTP Request: GET http://localhost:8000/words/without-images "HTTP/1.1 200 OK"
2025-08-08 12:54:52,179 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 12:54:52,179 - DEBUG - receive_response_body.complete
2025-08-08 12:54:52,179 - DEBUG - response_closed.started
2025-08-08 12:54:52,180 - DEBUG - response_closed.complete
2025-08-08 12:54:52,180 - INFO - Found 50 words without images
2025-08-08 12:54:52,180 - INFO - Processing 1 words without images
2025-08-08 12:54:52,180 - INFO - [1/1] Processing: ит (ID: 2)
2025-08-08 12:54:52,180 - INFO - Processing word 2: 'ит'
2025-08-08 12:54:52,181 - INFO - Category ID missing for word 2, fetching full details...
2025-08-08 12:54:52,181 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 12:54:52,181 - DEBUG - send_request_headers.complete
2025-08-08 12:54:52,181 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 12:54:52,181 - DEBUG - send_request_body.complete
2025-08-08 12:54:52,181 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 12:54:52,202 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 08 Aug 2025 07:54:51 GMT'), (b'server', b'uvicorn'), (b'content-length', b'1284'), (b'content-type', b'application/json')])
2025-08-08 12:54:52,202 - INFO - HTTP Request: GET http://localhost:8000/words/2 "HTTP/1.1 200 OK"
2025-08-08 12:54:52,203 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 12:54:52,203 - DEBUG - receive_response_body.complete
2025-08-08 12:54:52,203 - DEBUG - response_closed.started
2025-08-08 12:54:52,203 - DEBUG - response_closed.complete
2025-08-08 12:54:52,203 - DEBUG - Retrieved word details for ID 2: {'id': 2, 'kazakh_word': 'ит', 'kazakh_cyrillic': 'ит', 'created_at': '2025-06-18T11:08:16.083614', 'word_type': {'type_name': 'noun', 'description': 'Noun - person, place, thing', 'is_active': True, 'id': 1, 'created_at': '2025-06-18T11:08:16.048383', 'translations': [{'id': 1, 'translated_name': 'Noun', 'translated_description': 'Person, place, thing, or idea', 'language_code': 'en'}]}, 'category': {'category_name': 'animals', 'description': 'Animals and wildlife', 'is_active': True, 'id': 1, 'created_at': '2025-06-18T11:08:16.025801', 'translations': [{'id': 1, 'translated_name': 'Animals', 'translated_description': 'Animals and wildlife', 'language_code': 'en'}]}, 'difficulty_level': {'level_number': 1, 'level_name': 'beginner', 'description': 'Basic words for beginners', 'is_active': True, 'id': 1, 'created_at': '2025-06-18T11:08:16.064455', 'translations': [{'id': 1, 'translated_name': 'Beginner', 'translated_description': 'Basic words for beginners', 'language_code': 'en'}]}, 'translations': [{'translation': 'dog', 'alternative_translations': None, 'id': 5, 'language_code': 'en', 'created_at': '2025-06-18T11:08:16.090719'}], 'pronunciations': [{'pronunciation': 'eet', 'pronunciation_system': 'IPA-simplified', 'audio_file_path': None, 'id': 2, 'language_code': 'en', 'created_at': '2025-06-18T11:08:16.090719'}], 'images': [], 'example_sentences': []}
2025-08-08 12:54:52,203 - INFO - Updated word data - category_id: 1, category: animals, translation: dog
2025-08-08 12:54:52,536 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert at creating visual image prompts for educational Kazakh language learning materials. \nCreate a detailed, culturally appropriate image description that will help learners associate the Kazakh word with its meaning.\n\nREQUIREMENTS:\n1. NO TEXT or letters should appear in the image\n2. Focus on visual representation only\n3. Use traditional Kazakh/Central Asian cultural elements when appropriate\n4. Style should be clean, educational, and suitable for language learning\n5. 300x300px square format\n6. Bright, clear, and easily recognizable imagery\n7. Incorporate Kazakh cultural aesthetics (traditional patterns, colors, landscapes) when relevant\n\nReturn only a concise image description prompt, no explanations.'}, {'role': 'user', 'content': 'Kazakh word: "ит"\nEnglish meaning: "dog"\nCategory: "animals"\n\nCreate a visual image prompt for this Kazakh word that shows its meaning without any text. Include Kazakh cultural elements where appropriate. If the meaning is unclear, create a generic educational illustration that could represent a Kazakh language concept.'}], 'model': 'gpt-4-turbo-preview', 'max_tokens': 200, 'temperature': 0.7}, 'idempotency_key': 'stainless-python-retry-0b0278e0-a7e9-46a4-97cb-8d137ad5bcfc'}
2025-08-08 12:54:52,537 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-08 12:54:52,537 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-08 12:54:52,644 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000198CAD25ED0>
2025-08-08 12:54:52,644 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000198CAAEB9B0> server_hostname='api.openai.com' timeout=5.0
2025-08-08 12:54:52,672 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000198CAC9D2D0>
2025-08-08 12:54:52,672 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 12:54:52,673 - DEBUG - send_request_headers.complete
2025-08-08 12:54:52,673 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 12:54:52,673 - DEBUG - send_request_body.complete
2025-08-08 12:54:52,673 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 12:54:59,056 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 08 Aug 2025 07:54:59 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-gsctgi4tenlap3rmegivomgp'), (b'openai-processing-ms', b'5815'), (b'openai-project', b'proj_9NM8y20aOry0NJNndUcO4kJt'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'5957'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29735'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'530ms'), (b'x-request-id', b'req_cce8c711f0a14616b69a0abddaa158ce'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=.HTHzBISzYuuVeeKNqAJl2FmdfNORFqCGyeCQmkSYJ0-1754639699-1.0.1.1-QgmgXZ.XIpMpwIX2D4wWxa1n2s5f_mMdseTD227gaL9TKydb7OvwOofX9qQXHEkQuEgt0p7zvmsLhSAchRGyxKn_2A052loT4Oo9CSONWcc; path=/; expires=Fri, 08-Aug-25 08:24:59 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=atSrnnWS7hk4VG7SiEHaoptgABXc1Lu5485RkXAOLCk-1754639699569-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'96bd72c28e64e4bd-AKX'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-08 12:54:59,057 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-08 12:54:59,057 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 12:54:59,059 - DEBUG - receive_response_body.complete
2025-08-08 12:54:59,059 - DEBUG - response_closed.started
2025-08-08 12:54:59,059 - DEBUG - response_closed.complete
2025-08-08 12:54:59,059 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Fri, 08 Aug 2025 07:54:59 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-gsctgi4tenlap3rmegivomgp'), ('openai-processing-ms', '5815'), ('openai-project', 'proj_9NM8y20aOry0NJNndUcO4kJt'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '5957'), ('x-ratelimit-limit-requests', '500'), ('x-ratelimit-limit-tokens', '30000'), ('x-ratelimit-remaining-requests', '499'), ('x-ratelimit-remaining-tokens', '29735'), ('x-ratelimit-reset-requests', '120ms'), ('x-ratelimit-reset-tokens', '530ms'), ('x-request-id', 'req_cce8c711f0a14616b69a0abddaa158ce'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=.HTHzBISzYuuVeeKNqAJl2FmdfNORFqCGyeCQmkSYJ0-1754639699-1.0.1.1-QgmgXZ.XIpMpwIX2D4wWxa1n2s5f_mMdseTD227gaL9TKydb7OvwOofX9qQXHEkQuEgt0p7zvmsLhSAchRGyxKn_2A052loT4Oo9CSONWcc; path=/; expires=Fri, 08-Aug-25 08:24:59 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=atSrnnWS7hk4VG7SiEHaoptgABXc1Lu5485RkXAOLCk-1754639699569-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '96bd72c28e64e4bd-AKX'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-08-08 12:54:59,059 - DEBUG - request_id: req_cce8c711f0a14616b69a0abddaa158ce
2025-08-08 12:54:59,064 - DEBUG - Generated image prompt for 'ит': The image shows a friendly-looking Alabai, a dog breed that is Central Asian and commonly associated with Kazakhstan, standing in a vast steppe with traditional Kazakh yurts in the background. The Alabai is depicted with a distinctive, fluffy white coat, looking attentive and loyal. The landscape captures the essence of the Kazakh steppe, featuring low grasses and a wide, open sky. Around the dog, subtle elements of Kazakh culture are integrated, such as a small, ornate saddle and a traditional Kazakh felt hat (kalpak) lying on the ground, suggesting the presence of a herder nearby. The overall color scheme uses earth tones with pops of bright blue and red from the patterns on the yurt and the felt hat, providing a vibrant yet harmonious look that is both educational and culturally rich.
2025-08-08 12:54:59,064 - DEBUG - Request options: {'method': 'post', 'url': '/images/generations', 'files': None, 'json_data': {'prompt': 'The image shows a friendly-looking Alabai, a dog breed that is Central Asian and commonly associated with Kazakhstan, standing in a vast steppe with traditional Kazakh yurts in the background. The Alabai is depicted with a distinctive, fluffy white coat, looking attentive and loyal. The landscape captures the essence of the Kazakh steppe, featuring low grasses and a wide, open sky. Around the dog, subtle elements of Kazakh culture are integrated, such as a small, ornate saddle and a traditional Kazakh felt hat (kalpak) lying on the ground, suggesting the presence of a herder nearby. The overall color scheme uses earth tones with pops of bright blue and red from the patterns on the yurt and the felt hat, providing a vibrant yet harmonious look that is both educational and culturally rich., digital art, clean educational illustration, square format, no text or words visible, bright and clear for language learning', 'model': 'dall-e-3', 'n': 1, 'quality': 'standard', 'size': '1024x1024'}, 'idempotency_key': 'stainless-python-retry-3547e860-d683-477c-a9b9-e7a05fe0ce2d'}
2025-08-08 12:54:59,065 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/images/generations
2025-08-08 12:54:59,065 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 12:54:59,065 - DEBUG - send_request_headers.complete
2025-08-08 12:54:59,065 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 12:54:59,066 - DEBUG - send_request_body.complete
2025-08-08 12:54:59,066 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 12:55:20,808 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 08 Aug 2025 07:55:21 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-gsctgi4tenlap3rmegivomgp'), (b'openai-project', b'proj_9NM8y20aOry0NJNndUcO4kJt'), (b'x-request-id', b'req_6b3873325adc1e27cf9102b6526d5717'), (b'openai-processing-ms', b'21451'), (b'x-envoy-upstream-service-time', b'21455'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'96bd72ea8bb8e4bd-AKX'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-08 12:55:20,808 - INFO - HTTP Request: POST https://api.openai.com/v1/images/generations "HTTP/1.1 200 OK"
2025-08-08 12:55:20,809 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 12:55:20,809 - DEBUG - receive_response_body.complete
2025-08-08 12:55:20,809 - DEBUG - response_closed.started
2025-08-08 12:55:20,809 - DEBUG - response_closed.complete
2025-08-08 12:55:20,809 - DEBUG - HTTP Response: POST https://api.openai.com/v1/images/generations "200 OK" Headers({'date': 'Fri, 08 Aug 2025 07:55:21 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'openai-version': '2020-10-01', 'openai-organization': 'user-gsctgi4tenlap3rmegivomgp', 'openai-project': 'proj_9NM8y20aOry0NJNndUcO4kJt', 'x-request-id': 'req_6b3873325adc1e27cf9102b6526d5717', 'openai-processing-ms': '21451', 'x-envoy-upstream-service-time': '21455', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '96bd72ea8bb8e4bd-AKX', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-08 12:55:20,809 - DEBUG - request_id: req_6b3873325adc1e27cf9102b6526d5717
2025-08-08 12:55:20,810 - INFO - Generated image for 'ит': https://oaidalleapiprodscus.blob.core.windows.net/private/org-QA1vw2bLx4mJJ3gO8vDB8703/user-GscTgi4teNlaP3rMEgIVoMgP/img-B1xnglMi1VOl23vYoRBxWIyK.png?st=2025-08-08T06%3A55%3A21Z&se=2025-08-08T08%3A55%3A21Z&sp=r&sv=2024-08-04&sr=b&rscd=inline&rsct=image/png&skoid=ed3ea2f9-5e38-44be-9a1b-7c1e65e4d54f&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2025-08-07T14%3A26%3A53Z&ske=2025-08-08T14%3A26%3A53Z&sks=b&skv=2024-08-04&sig=ad3hQEED066l4iMhNcJchTblagtal552DPJCXUHL3m4%3D
2025-08-08 12:55:21,079 - DEBUG - connect_tcp.started host='oaidalleapiprodscus.blob.core.windows.net' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-08 12:55:22,095 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000198CB0F6550>
2025-08-08 12:55:22,095 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000198CB045C70> server_hostname='oaidalleapiprodscus.blob.core.windows.net' timeout=5.0
2025-08-08 12:55:22,504 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000198CB111450>
2025-08-08 12:55:22,504 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 12:55:22,504 - DEBUG - send_request_headers.complete
2025-08-08 12:55:22,505 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 12:55:22,505 - DEBUG - send_request_body.complete
2025-08-08 12:55:22,505 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 12:55:23,114 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Content-Length', b'1973954'), (b'Content-Type', b'image/png'), (b'Content-MD5', b'WslZ5+mn6fRnLJXRW5aBuQ=='), (b'Last-Modified', b'Fri, 08 Aug 2025 07:55:21 GMT'), (b'Accept-Ranges', b'bytes'), (b'ETag', b'"0x8DDD650EC99F9A4"'), (b'Server', b'Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0'), (b'x-ms-request-id', b'af14a7cc-501e-00bc-2c39-0869ec000000'), (b'x-ms-version', b'2024-08-04'), (b'x-ms-creation-time', b'Fri, 08 Aug 2025 07:55:21 GMT'), (b'x-ms-lease-status', b'unlocked'), (b'x-ms-lease-state', b'available'), (b'x-ms-blob-type', b'BlockBlob'), (b'Content-Disposition', b'inline'), (b'x-ms-server-encrypted', b'true'), (b'x-ms-last-access-time', b'Fri, 08 Aug 2025 07:55:21 GMT'), (b'Date', b'Fri, 08 Aug 2025 07:55:23 GMT')])
2025-08-08 12:55:23,114 - INFO - HTTP Request: GET https://oaidalleapiprodscus.blob.core.windows.net/private/org-QA1vw2bLx4mJJ3gO8vDB8703/user-GscTgi4teNlaP3rMEgIVoMgP/img-B1xnglMi1VOl23vYoRBxWIyK.png?st=2025-08-08T06%3A55%3A21Z&se=2025-08-08T08%3A55%3A21Z&sp=r&sv=2024-08-04&sr=b&rscd=inline&rsct=image/png&skoid=ed3ea2f9-5e38-44be-9a1b-7c1e65e4d54f&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2025-08-07T14%3A26%3A53Z&ske=2025-08-08T14%3A26%3A53Z&sks=b&skv=2024-08-04&sig=ad3hQEED066l4iMhNcJchTblagtal552DPJCXUHL3m4%3D "HTTP/1.1 200 OK"
2025-08-08 12:55:23,114 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 12:55:24,727 - DEBUG - receive_response_body.complete
2025-08-08 12:55:24,727 - DEBUG - response_closed.started
2025-08-08 12:55:24,727 - DEBUG - response_closed.complete
2025-08-08 12:55:24,745 - DEBUG - STREAM b'IHDR' 16 13
2025-08-08 12:55:24,745 - DEBUG - STREAM b'caBX' 41 14086
2025-08-08 12:55:24,745 - DEBUG - b'caBX' 41 14086 (unknown)
2025-08-08 12:55:24,745 - DEBUG - STREAM b'IDAT' 14139 65536
2025-08-08 12:55:24,786 - INFO - Saved processed image for 'ит' to public\images\words\categories\1\2.png
2025-08-08 12:55:24,786 - DEBUG - close.started
2025-08-08 12:55:24,786 - DEBUG - close.complete
2025-08-08 12:55:24,786 - DEBUG - close.started
2025-08-08 12:55:24,787 - DEBUG - close.complete
2025-08-08 12:55:24,787 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=30.0 socket_options=None
2025-08-08 12:55:25,049 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000198CB1BE690>
2025-08-08 12:55:25,049 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 12:55:25,049 - DEBUG - send_request_headers.complete
2025-08-08 12:55:25,049 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 12:55:25,049 - DEBUG - send_request_body.complete
2025-08-08 12:55:25,049 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 12:55:25,147 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 201, b'Created', [(b'date', b'Fri, 08 Aug 2025 07:55:24 GMT'), (b'server', b'uvicorn'), (b'content-length', b'245'), (b'content-type', b'application/json')])
2025-08-08 12:55:25,147 - INFO - HTTP Request: POST http://localhost:8000/word-images/ "HTTP/1.1 201 Created"
2025-08-08 12:55:25,147 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 12:55:25,147 - DEBUG - receive_response_body.complete
2025-08-08 12:55:25,147 - DEBUG - response_closed.started
2025-08-08 12:55:25,147 - DEBUG - response_closed.complete
2025-08-08 12:55:25,147 - INFO - Created image record for word 2: /images/words/categories/1/2.png
2025-08-08 12:55:25,159 - DEBUG - close.started
2025-08-08 12:55:25,160 - DEBUG - close.complete
2025-08-08 12:57:52,511 - DEBUG - Using proactor: IocpProactor
2025-08-08 12:57:53,968 - INFO - Word Image Service initialized
2025-08-08 12:57:54,240 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=30.0 socket_options=None
2025-08-08 12:57:54,495 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000022A5242D690>
2025-08-08 12:57:54,495 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 12:57:54,496 - DEBUG - send_request_headers.complete
2025-08-08 12:57:54,496 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 12:57:54,496 - DEBUG - send_request_body.complete
2025-08-08 12:57:54,496 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 12:57:54,552 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 08 Aug 2025 07:57:53 GMT'), (b'server', b'uvicorn'), (b'content-length', b'9485'), (b'content-type', b'application/json')])
2025-08-08 12:57:54,553 - INFO - HTTP Request: GET http://localhost:8000/words/without-images "HTTP/1.1 200 OK"
2025-08-08 12:57:54,553 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 12:57:54,553 - DEBUG - receive_response_body.complete
2025-08-08 12:57:54,553 - DEBUG - response_closed.started
2025-08-08 12:57:54,553 - DEBUG - response_closed.complete
2025-08-08 12:57:54,554 - INFO - Found 50 words without images
2025-08-08 12:57:54,554 - INFO - Processing 1 words without images
2025-08-08 12:57:54,563 - INFO - Category ID missing for word 3, fetching full details...
2025-08-08 12:57:54,563 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 12:57:54,564 - DEBUG - send_request_headers.complete
2025-08-08 12:57:54,564 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 12:57:54,564 - DEBUG - send_request_body.complete
2025-08-08 12:57:54,564 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 12:57:54,582 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 08 Aug 2025 07:57:53 GMT'), (b'server', b'uvicorn'), (b'content-length', b'1305'), (b'content-type', b'application/json')])
2025-08-08 12:57:54,582 - INFO - HTTP Request: GET http://localhost:8000/words/3 "HTTP/1.1 200 OK"
2025-08-08 12:57:54,582 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 12:57:54,582 - DEBUG - receive_response_body.complete
2025-08-08 12:57:54,582 - DEBUG - response_closed.started
2025-08-08 12:57:54,582 - DEBUG - response_closed.complete
2025-08-08 12:57:54,584 - INFO - Updated word data - category_id: 1, category: animals, translation: horse
2025-08-08 12:57:54,924 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-08 12:57:54,924 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-08 12:57:54,999 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000022A54F8B910>
2025-08-08 12:57:55,000 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000022A548EF9B0> server_hostname='api.openai.com' timeout=5.0
2025-08-08 12:57:55,026 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000022A54FBBD50>
2025-08-08 12:57:55,026 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 12:57:55,026 - DEBUG - send_request_headers.complete
2025-08-08 12:57:55,026 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 12:57:55,026 - DEBUG - send_request_body.complete
2025-08-08 12:57:55,026 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 12:58:01,434 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 08 Aug 2025 07:58:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-gsctgi4tenlap3rmegivomgp'), (b'openai-processing-ms', b'5646'), (b'openai-project', b'proj_9NM8y20aOry0NJNndUcO4kJt'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'5776'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29733'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'534ms'), (b'x-request-id', b'req_b3949416fcd949778e26e1bd41251fb8'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=iAqDHmiS0NfmrTNZit2slxFlL25zfb9jU1bBJ45pJKc-1754639881-1.0.1.1-lkoIVJ_JuWNfvFmCo1cC1PGINzgqkx_5FgkhirJ9wkExKJAO1PXdWxWMcR8xSFHzQs93_764mvke1tjE9ZSsqJi0.uVSjPH82XTpKhDUUCU; path=/; expires=Fri, 08-Aug-25 08:28:01 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=apj8bS3_WWTdwQBuDzkg5ZWlDvbvwpFFlc6DuhgDImU-1754639881943-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'96bd77363d29e4c0-AKX'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-08 12:58:01,434 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-08 12:58:01,434 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 12:58:01,435 - DEBUG - receive_response_body.complete
2025-08-08 12:58:01,435 - DEBUG - response_closed.started
2025-08-08 12:58:01,435 - DEBUG - response_closed.complete
2025-08-08 12:58:01,435 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Fri, 08 Aug 2025 07:58:01 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-gsctgi4tenlap3rmegivomgp'), ('openai-processing-ms', '5646'), ('openai-project', 'proj_9NM8y20aOry0NJNndUcO4kJt'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '5776'), ('x-ratelimit-limit-requests', '500'), ('x-ratelimit-limit-tokens', '30000'), ('x-ratelimit-remaining-requests', '499'), ('x-ratelimit-remaining-tokens', '29733'), ('x-ratelimit-reset-requests', '120ms'), ('x-ratelimit-reset-tokens', '534ms'), ('x-request-id', 'req_b3949416fcd949778e26e1bd41251fb8'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=iAqDHmiS0NfmrTNZit2slxFlL25zfb9jU1bBJ45pJKc-1754639881-1.0.1.1-lkoIVJ_JuWNfvFmCo1cC1PGINzgqkx_5FgkhirJ9wkExKJAO1PXdWxWMcR8xSFHzQs93_764mvke1tjE9ZSsqJi0.uVSjPH82XTpKhDUUCU; path=/; expires=Fri, 08-Aug-25 08:28:01 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=apj8bS3_WWTdwQBuDzkg5ZWlDvbvwpFFlc6DuhgDImU-1754639881943-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '96bd77363d29e4c0-AKX'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-08-08 12:58:01,435 - DEBUG - request_id: req_b3949416fcd949778e26e1bd41251fb8
2025-08-08 12:58:01,444 - DEBUG - Request options: {'method': 'post', 'url': '/images/generations', 'files': None, 'json_data': {'prompt': 'An image of a majestic horse standing on a vast steppe under a wide, clear sky. The horse is adorned with traditional Kazakh ornamented tack, including a colorful saddle blanket and intricate bridle designs. In the background, a yurt is subtly visible, its white felt contrasting with the greens and yellows of the grassland. The horizon is decorated with distant mountains, adding depth and a sense of the vast landscapes of Kazakhstan. The overall color scheme features earth tones with splashes of vibrant reds, blues, and golds from the horse’s tack, reflecting the rich cultural heritage., digital art, clean educational illustration, square format, no text or words visible, bright and clear for language learning', 'model': 'dall-e-3', 'n': 1, 'quality': 'standard', 'size': '1024x1024'}, 'idempotency_key': 'stainless-python-retry-4fa072d6-cd0a-44e5-ae63-e092517d7ee4'}
2025-08-08 12:58:01,445 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/images/generations
2025-08-08 12:58:01,445 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 12:58:01,446 - DEBUG - send_request_headers.complete
2025-08-08 12:58:01,446 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 12:58:01,446 - DEBUG - send_request_body.complete
2025-08-08 12:58:01,446 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 12:58:17,463 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 08 Aug 2025 07:58:17 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-gsctgi4tenlap3rmegivomgp'), (b'openai-project', b'proj_9NM8y20aOry0NJNndUcO4kJt'), (b'x-request-id', b'req_c8085e930002ee9cd15e4bdfe4ad0451'), (b'openai-processing-ms', b'15504'), (b'x-envoy-upstream-service-time', b'15511'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'96bd775e5a91e4c0-AKX'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-08 12:58:17,463 - INFO - HTTP Request: POST https://api.openai.com/v1/images/generations "HTTP/1.1 200 OK"
2025-08-08 12:58:17,463 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 12:58:17,463 - DEBUG - receive_response_body.complete
2025-08-08 12:58:17,464 - DEBUG - response_closed.started
2025-08-08 12:58:17,464 - DEBUG - response_closed.complete
2025-08-08 12:58:17,464 - DEBUG - HTTP Response: POST https://api.openai.com/v1/images/generations "200 OK" Headers({'date': 'Fri, 08 Aug 2025 07:58:17 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'openai-version': '2020-10-01', 'openai-organization': 'user-gsctgi4tenlap3rmegivomgp', 'openai-project': 'proj_9NM8y20aOry0NJNndUcO4kJt', 'x-request-id': 'req_c8085e930002ee9cd15e4bdfe4ad0451', 'openai-processing-ms': '15504', 'x-envoy-upstream-service-time': '15511', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '96bd775e5a91e4c0-AKX', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-08 12:58:17,464 - DEBUG - request_id: req_c8085e930002ee9cd15e4bdfe4ad0451
2025-08-08 12:58:17,743 - DEBUG - connect_tcp.started host='oaidalleapiprodscus.blob.core.windows.net' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-08 12:58:18,618 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000022A54FBBFD0>
2025-08-08 12:58:18,618 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000022A54EE9640> server_hostname='oaidalleapiprodscus.blob.core.windows.net' timeout=5.0
2025-08-08 12:58:19,033 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000022A55009D90>
2025-08-08 12:58:19,033 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 12:58:19,033 - DEBUG - send_request_headers.complete
2025-08-08 12:58:19,033 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 12:58:19,033 - DEBUG - send_request_body.complete
2025-08-08 12:58:19,033 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 12:58:19,655 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Content-Length', b'2092464'), (b'Content-Type', b'image/png'), (b'Content-MD5', b'+iEmqHHZhV6RHnwPqlBdEg=='), (b'Last-Modified', b'Fri, 08 Aug 2025 07:58:17 GMT'), (b'Accept-Ranges', b'bytes'), (b'ETag', b'"0x8DDD65155E2BC65"'), (b'Server', b'Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0'), (b'x-ms-request-id', b'ff9196d5-201e-0099-513a-08c090000000'), (b'x-ms-version', b'2024-08-04'), (b'x-ms-creation-time', b'Fri, 08 Aug 2025 07:58:17 GMT'), (b'x-ms-lease-status', b'unlocked'), (b'x-ms-lease-state', b'available'), (b'x-ms-blob-type', b'BlockBlob'), (b'Content-Disposition', b'inline'), (b'x-ms-server-encrypted', b'true'), (b'x-ms-last-access-time', b'Fri, 08 Aug 2025 07:58:17 GMT'), (b'Date', b'Fri, 08 Aug 2025 07:58:19 GMT')])
2025-08-08 12:58:19,656 - INFO - HTTP Request: GET https://oaidalleapiprodscus.blob.core.windows.net/private/org-QA1vw2bLx4mJJ3gO8vDB8703/user-GscTgi4teNlaP3rMEgIVoMgP/img-Tnce1AnKzPYO2WRzohzU2JWz.png?st=2025-08-08T06%3A58%3A17Z&se=2025-08-08T08%3A58%3A17Z&sp=r&sv=2024-08-04&sr=b&rscd=inline&rsct=image/png&skoid=b1a0ae1f-618f-4548-84fd-8b16cacd5485&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2025-08-08T03%3A59%3A35Z&ske=2025-08-09T03%3A59%3A35Z&sks=b&skv=2024-08-04&sig=bRd/nFy5VX3A/elBVpHMSHU0bwrs7uBDctClRyM0vR8%3D "HTTP/1.1 200 OK"
2025-08-08 12:58:19,656 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 12:58:21,752 - DEBUG - receive_response_body.complete
2025-08-08 12:58:21,752 - DEBUG - response_closed.started
2025-08-08 12:58:21,752 - DEBUG - response_closed.complete
2025-08-08 12:58:21,770 - DEBUG - STREAM b'IHDR' 16 13
2025-08-08 12:58:21,770 - DEBUG - STREAM b'caBX' 41 14086
2025-08-08 12:58:21,770 - DEBUG - b'caBX' 41 14086 (unknown)
2025-08-08 12:58:21,770 - DEBUG - STREAM b'IDAT' 14139 65536
2025-08-08 12:58:21,815 - DEBUG - close.started
2025-08-08 12:58:21,815 - DEBUG - close.complete
2025-08-08 12:58:21,819 - ERROR - Full traceback: Traceback (most recent call last):
  File "D:\python\myNew\services\word_image_service.py", line 395, in process_single_word
    success = await self.update_word_image_url(word_id, image_path)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\myNew\services\word_image_service.py", line 265, in update_word_image_url
    relative_path = image_path.relative_to(Path('public'))
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.11_3.11.2544.0_x64__qbz5n2kfra8p0\Lib\pathlib.py", line 730, in relative_to
    raise ValueError("{!r} is not in the subpath of {!r}"
ValueError: '..\\kazakh-learn-frontend\\public\\images\\words\\categories\\1\\3.png' is not in the subpath of 'public' OR one path is relative and the other is absolute.

2025-08-08 12:58:21,821 - DEBUG - close.started
2025-08-08 12:58:21,822 - DEBUG - close.complete
2025-08-08 16:07:25,132 - DEBUG - Using proactor: IocpProactor
2025-08-08 16:07:27,976 - INFO - Word Image Service initialized
2025-08-08 16:07:28,256 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=30.0 socket_options=None
2025-08-08 16:07:28,522 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000002249B6C3A50>
2025-08-08 16:07:28,522 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 16:07:28,523 - DEBUG - send_request_headers.complete
2025-08-08 16:07:28,523 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 16:07:28,523 - DEBUG - send_request_body.complete
2025-08-08 16:07:28,523 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 16:07:28,583 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 08 Aug 2025 11:07:28 GMT'), (b'server', b'uvicorn'), (b'content-length', b'9485'), (b'content-type', b'application/json')])
2025-08-08 16:07:28,583 - INFO - HTTP Request: GET http://localhost:8000/words/without-images "HTTP/1.1 200 OK"
2025-08-08 16:07:28,583 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 16:07:28,584 - DEBUG - receive_response_body.complete
2025-08-08 16:07:28,584 - DEBUG - response_closed.started
2025-08-08 16:07:28,584 - DEBUG - response_closed.complete
2025-08-08 16:07:28,585 - INFO - Found 50 words without images
2025-08-08 16:07:28,585 - INFO - Processing 1 words without images
2025-08-08 16:07:28,592 - INFO - Category ID missing for word 3, fetching full details...
2025-08-08 16:07:28,593 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 16:07:28,593 - DEBUG - send_request_headers.complete
2025-08-08 16:07:28,593 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 16:07:28,593 - DEBUG - send_request_body.complete
2025-08-08 16:07:28,593 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 16:07:28,659 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 08 Aug 2025 11:07:28 GMT'), (b'server', b'uvicorn'), (b'content-length', b'1305'), (b'content-type', b'application/json')])
2025-08-08 16:07:28,660 - INFO - HTTP Request: GET http://localhost:8000/words/3 "HTTP/1.1 200 OK"
2025-08-08 16:07:28,660 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 16:07:28,660 - DEBUG - receive_response_body.complete
2025-08-08 16:07:28,660 - DEBUG - response_closed.started
2025-08-08 16:07:28,660 - DEBUG - response_closed.complete
2025-08-08 16:07:28,664 - INFO - Updated word data - category_id: 1, category: animals, translation: horse
2025-08-08 16:07:29,313 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-08 16:07:29,313 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-08 16:07:29,462 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000002249BC90510>
2025-08-08 16:07:29,462 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000002249B5FB530> server_hostname='api.openai.com' timeout=5.0
2025-08-08 16:07:29,488 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000002249B80E0D0>
2025-08-08 16:07:29,489 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:07:29,489 - DEBUG - send_request_headers.complete
2025-08-08 16:07:29,489 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:07:29,489 - DEBUG - send_request_body.complete
2025-08-08 16:07:29,489 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:07:35,864 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 08 Aug 2025 11:07:36 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-gsctgi4tenlap3rmegivomgp'), (b'openai-processing-ms', b'5981'), (b'openai-project', b'proj_9NM8y20aOry0NJNndUcO4kJt'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'6108'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29733'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'534ms'), (b'x-request-id', b'req_4950af20c9874a2b869db4f550bbae0d'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=Lbmclf8OjpRFfNeU0TUu5TEFtO58mpJdsZwPnywOWxs-1754651256-1.0.1.1-GOlsBPhIB3G57jbugiyLhe6fDAkojtwG6PbgBsJCZhDS5qfp0tWnpA2tKNT5FlRKthBwfgNlzxFyqpg2TbP1dct6V5ek8AYwy8QRe7IFsXA; path=/; expires=Fri, 08-Aug-25 11:37:36 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=ijuglKS5bvlAh.UzTLSkU1bfAXBfgUW895ndmkbid6o-1754651256381-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'96be8ce8ae22e4c0-AKX'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-08 16:07:35,865 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-08 16:07:35,865 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:07:35,866 - DEBUG - receive_response_body.complete
2025-08-08 16:07:35,866 - DEBUG - response_closed.started
2025-08-08 16:07:35,866 - DEBUG - response_closed.complete
2025-08-08 16:07:35,866 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Fri, 08 Aug 2025 11:07:36 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-gsctgi4tenlap3rmegivomgp'), ('openai-processing-ms', '5981'), ('openai-project', 'proj_9NM8y20aOry0NJNndUcO4kJt'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '6108'), ('x-ratelimit-limit-requests', '500'), ('x-ratelimit-limit-tokens', '30000'), ('x-ratelimit-remaining-requests', '499'), ('x-ratelimit-remaining-tokens', '29733'), ('x-ratelimit-reset-requests', '120ms'), ('x-ratelimit-reset-tokens', '534ms'), ('x-request-id', 'req_4950af20c9874a2b869db4f550bbae0d'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=Lbmclf8OjpRFfNeU0TUu5TEFtO58mpJdsZwPnywOWxs-1754651256-1.0.1.1-GOlsBPhIB3G57jbugiyLhe6fDAkojtwG6PbgBsJCZhDS5qfp0tWnpA2tKNT5FlRKthBwfgNlzxFyqpg2TbP1dct6V5ek8AYwy8QRe7IFsXA; path=/; expires=Fri, 08-Aug-25 11:37:36 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=ijuglKS5bvlAh.UzTLSkU1bfAXBfgUW895ndmkbid6o-1754651256381-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '96be8ce8ae22e4c0-AKX'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-08-08 16:07:35,866 - DEBUG - request_id: req_4950af20c9874a2b869db4f550bbae0d
2025-08-08 16:07:35,875 - DEBUG - Request options: {'method': 'post', 'url': '/images/generations', 'files': None, 'json_data': {'prompt': "The image depicts a majestic horse standing on a vast, open steppe under a wide, clear sky. The horse has a rich chestnut coat, with a flowing black mane and tail. It is adorned with traditional Kazakh gear, including a decorative saddle blanket featuring intricate patterns and bright colors typical of Kazakh art. Behind the horse, the endless steppe stretches to the horizon, dotted with yurts and a few grazing sheep. In the distance, gentle hills or the outline of the Altai Mountains can be seen, adding to the sense of the vast, open landscapes of Kazakhstan. The horse's posture is lively and elegant, capturing the pride and significance of horses in Kazakh culture. The lighting is bright and natural, emphasizing the beauty and freedom of the animal in its natural habitat., digital art, clean educational illustration, square format, no text or words visible, bright and clear for language learning", 'model': 'dall-e-3', 'n': 1, 'quality': 'standard', 'size': '1024x1024'}, 'idempotency_key': 'stainless-python-retry-dd2e5ede-1896-4f50-b0a6-6fc348403038'}
2025-08-08 16:07:35,876 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/images/generations
2025-08-08 16:07:35,876 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:07:35,877 - DEBUG - send_request_headers.complete
2025-08-08 16:07:35,877 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:07:35,877 - DEBUG - send_request_body.complete
2025-08-08 16:07:35,877 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:08:03,180 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 08 Aug 2025 11:08:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-gsctgi4tenlap3rmegivomgp'), (b'openai-project', b'proj_9NM8y20aOry0NJNndUcO4kJt'), (b'x-request-id', b'req_2d0079241e910cd13e123ed77a006e32'), (b'openai-processing-ms', b'25942'), (b'x-envoy-upstream-service-time', b'25949'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'96be8d109f5ee4c0-AKX'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-08 16:08:03,180 - INFO - HTTP Request: POST https://api.openai.com/v1/images/generations "HTTP/1.1 200 OK"
2025-08-08 16:08:03,180 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:08:03,181 - DEBUG - receive_response_body.complete
2025-08-08 16:08:03,181 - DEBUG - response_closed.started
2025-08-08 16:08:03,181 - DEBUG - response_closed.complete
2025-08-08 16:08:03,181 - DEBUG - HTTP Response: POST https://api.openai.com/v1/images/generations "200 OK" Headers({'date': 'Fri, 08 Aug 2025 11:08:03 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'openai-version': '2020-10-01', 'openai-organization': 'user-gsctgi4tenlap3rmegivomgp', 'openai-project': 'proj_9NM8y20aOry0NJNndUcO4kJt', 'x-request-id': 'req_2d0079241e910cd13e123ed77a006e32', 'openai-processing-ms': '25942', 'x-envoy-upstream-service-time': '25949', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '96be8d109f5ee4c0-AKX', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-08 16:08:03,181 - DEBUG - request_id: req_2d0079241e910cd13e123ed77a006e32
2025-08-08 16:08:03,454 - DEBUG - connect_tcp.started host='oaidalleapiprodscus.blob.core.windows.net' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-08 16:08:03,852 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000002249BCFFF50>
2025-08-08 16:08:03,852 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000002249BC19250> server_hostname='oaidalleapiprodscus.blob.core.windows.net' timeout=5.0
2025-08-08 16:08:04,265 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000002249BC87C50>
2025-08-08 16:08:04,265 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 16:08:04,265 - DEBUG - send_request_headers.complete
2025-08-08 16:08:04,265 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 16:08:04,265 - DEBUG - send_request_body.complete
2025-08-08 16:08:04,265 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 16:08:04,880 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Content-Length', b'1625517'), (b'Content-Type', b'image/png'), (b'Content-MD5', b'VL47gtJGiPe2Sr2fBMMU+Q=='), (b'Last-Modified', b'Fri, 08 Aug 2025 11:08:03 GMT'), (b'Accept-Ranges', b'bytes'), (b'ETag', b'"0x8DDD66BD84E7D05"'), (b'Server', b'Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0'), (b'x-ms-request-id', b'5ded67f2-201e-000f-0354-08c941000000'), (b'x-ms-version', b'2024-08-04'), (b'x-ms-creation-time', b'Fri, 08 Aug 2025 11:08:03 GMT'), (b'x-ms-lease-status', b'unlocked'), (b'x-ms-lease-state', b'available'), (b'x-ms-blob-type', b'BlockBlob'), (b'Content-Disposition', b'inline'), (b'x-ms-server-encrypted', b'true'), (b'x-ms-last-access-time', b'Fri, 08 Aug 2025 11:08:03 GMT'), (b'Date', b'Fri, 08 Aug 2025 11:08:04 GMT')])
2025-08-08 16:08:04,880 - INFO - HTTP Request: GET https://oaidalleapiprodscus.blob.core.windows.net/private/org-QA1vw2bLx4mJJ3gO8vDB8703/user-GscTgi4teNlaP3rMEgIVoMgP/img-RSQMQ5mI9vB8T9gMazlaVS8q.png?st=2025-08-08T10%3A08%3A03Z&se=2025-08-08T12%3A08%3A03Z&sp=r&sv=2024-08-04&sr=b&rscd=inline&rsct=image/png&skoid=b1a0ae1f-618f-4548-84fd-8b16cacd5485&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2025-08-07T12%3A24%3A51Z&ske=2025-08-08T12%3A24%3A51Z&sks=b&skv=2024-08-04&sig=NpRoSTwsYBKaqdjyjZkv5o9uE2WDB8or2pMpDQsU60c%3D "HTTP/1.1 200 OK"
2025-08-08 16:08:04,880 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 16:08:06,699 - DEBUG - receive_response_body.complete
2025-08-08 16:08:06,699 - DEBUG - response_closed.started
2025-08-08 16:08:06,699 - DEBUG - response_closed.complete
2025-08-08 16:08:06,740 - DEBUG - STREAM b'IHDR' 16 13
2025-08-08 16:08:06,740 - DEBUG - STREAM b'caBX' 41 14086
2025-08-08 16:08:06,740 - DEBUG - b'caBX' 41 14086 (unknown)
2025-08-08 16:08:06,740 - DEBUG - STREAM b'IDAT' 14139 65536
2025-08-08 16:08:06,780 - DEBUG - close.started
2025-08-08 16:08:06,781 - DEBUG - close.complete
2025-08-08 16:08:06,785 - ERROR - Full traceback: Traceback (most recent call last):
  File "D:\python\myNew\services\word_image_service.py", line 392, in process_single_word
    success = await self.update_word_image_url(word_id, image_path)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\myNew\services\word_image_service.py", line 263, in update_word_image_url
    relative_path = image_path.relative_to(Path('public'))
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.11_3.11.2544.0_x64__qbz5n2kfra8p0\Lib\pathlib.py", line 730, in relative_to
    raise ValueError("{!r} is not in the subpath of {!r}"
ValueError: '..\\kazakh-learn-frontend\\public\\images\\words\\categories\\1\\3.png' is not in the subpath of 'public' OR one path is relative and the other is absolute.

2025-08-08 16:08:06,786 - INFO - 
Image Generation Complete!
Statistics:
   - Total words: 1
   - Processed: 1
   - Successful: 0
   - Failed: 1
   - Success rate: 0.0%
            
2025-08-08 16:08:06,786 - DEBUG - close.started
2025-08-08 16:08:06,786 - DEBUG - close.complete
2025-08-08 16:10:47,275 - DEBUG - Using proactor: IocpProactor
2025-08-08 16:10:48,750 - INFO - Word Image Service initialized
2025-08-08 16:10:49,032 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=30.0 socket_options=None
2025-08-08 16:10:49,300 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000025B3EEB22D0>
2025-08-08 16:10:49,300 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 16:10:49,301 - DEBUG - send_request_headers.complete
2025-08-08 16:10:49,301 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 16:10:49,301 - DEBUG - send_request_body.complete
2025-08-08 16:10:49,301 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 16:10:49,361 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 08 Aug 2025 11:10:48 GMT'), (b'server', b'uvicorn'), (b'content-length', b'9485'), (b'content-type', b'application/json')])
2025-08-08 16:10:49,361 - INFO - HTTP Request: GET http://localhost:8000/words/without-images "HTTP/1.1 200 OK"
2025-08-08 16:10:49,362 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 16:10:49,362 - DEBUG - receive_response_body.complete
2025-08-08 16:10:49,362 - DEBUG - response_closed.started
2025-08-08 16:10:49,362 - DEBUG - response_closed.complete
2025-08-08 16:10:49,362 - INFO - Found 50 words without images
2025-08-08 16:10:49,362 - INFO - Processing 1 words without images
2025-08-08 16:10:49,362 - INFO - [1/1] Processing: Р¶С‹Р»Т›С‹ (ID: 3)
2025-08-08 16:10:49,362 - INFO - Processing word 3: '?????'
2025-08-08 16:10:49,363 - INFO - Category ID missing for word 3, fetching full details...
2025-08-08 16:10:49,363 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 16:10:49,363 - DEBUG - send_request_headers.complete
2025-08-08 16:10:49,363 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 16:10:49,363 - DEBUG - send_request_body.complete
2025-08-08 16:10:49,363 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 16:10:49,382 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 08 Aug 2025 11:10:48 GMT'), (b'server', b'uvicorn'), (b'content-length', b'1305'), (b'content-type', b'application/json')])
2025-08-08 16:10:49,382 - INFO - HTTP Request: GET http://localhost:8000/words/3 "HTTP/1.1 200 OK"
2025-08-08 16:10:49,383 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 16:10:49,383 - DEBUG - receive_response_body.complete
2025-08-08 16:10:49,383 - DEBUG - response_closed.started
2025-08-08 16:10:49,383 - DEBUG - response_closed.complete
2025-08-08 16:10:49,383 - DEBUG - Retrieved word details for ID 3: {'id': 3, 'kazakh_word': 'Р¶С‹Р»Т›С‹', 'kazakh_cyrillic': 'Р¶С‹Р»Т›С‹', 'created_at': '2025-06-18T11:08:16.089719', 'word_type': {'type_name': 'noun', 'description': 'Noun - person, place, thing', 'is_active': True, 'id': 1, 'created_at': '2025-06-18T11:08:16.048383', 'translations': [{'id': 1, 'translated_name': 'Noun', 'translated_description': 'Person, place, thing, or idea', 'language_code': 'en'}]}, 'category': {'category_name': 'animals', 'description': 'Animals and wildlife', 'is_active': True, 'id': 1, 'created_at': '2025-06-18T11:08:16.025801', 'translations': [{'id': 1, 'translated_name': 'Animals', 'translated_description': 'Animals and wildlife', 'language_code': 'en'}]}, 'difficulty_level': {'level_number': 2, 'level_name': 'elementary', 'description': 'Elementary level words', 'is_active': True, 'id': 2, 'created_at': '2025-06-18T11:08:16.065453', 'translations': [{'id': 4, 'translated_name': 'Elementary', 'translated_description': 'Elementary level words', 'language_code': 'en'}]}, 'translations': [{'translation': 'horse', 'alternative_translations': None, 'id': 9, 'language_code': 'en', 'created_at': '2025-06-18T11:08:16.092953'}], 'pronunciations': [{'pronunciation': 'zhuh-LUH-kuh', 'pronunciation_system': 'IPA-simplified', 'audio_file_path': None, 'id': 3, 'language_code': 'en', 'created_at': '2025-06-18T11:08:16.092953'}], 'images': [], 'example_sentences': []}
2025-08-08 16:10:49,383 - INFO - Updated word data - category_id: 1, category: animals, translation: horse
2025-08-08 16:10:49,735 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert at creating visual image prompts for educational Kazakh language learning materials. \nCreate a detailed, culturally appropriate image description that will help learners associate the Kazakh word with its meaning.\n\nREQUIREMENTS:\n1. NO TEXT or letters should appear in the image\n2. Focus on visual representation only\n3. Use traditional Kazakh/Central Asian cultural elements when appropriate\n4. Style should be clean, educational, and suitable for language learning\n5. 300x300px square format\n6. Bright, clear, and easily recognizable imagery\n7. Incorporate Kazakh cultural aesthetics (traditional patterns, colors, landscapes) when relevant\n\nReturn only a concise image description prompt, no explanations.'}, {'role': 'user', 'content': 'Kazakh word: "Р¶С‹Р»Т›С‹"\nEnglish meaning: "horse"\nCategory: "animals"\n\nCreate a visual image prompt for this Kazakh word that shows its meaning without any text. Include Kazakh cultural elements where appropriate. If the meaning is unclear, create a generic educational illustration that could represent a Kazakh language concept.'}], 'model': 'gpt-4-turbo-preview', 'max_tokens': 200, 'temperature': 0.7}, 'idempotency_key': 'stainless-python-retry-7e5ae73a-b785-4acc-ab3d-b28e90bd1ae0'}
2025-08-08 16:10:49,736 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-08 16:10:49,736 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-08 16:10:49,823 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000025B3F028F50>
2025-08-08 16:10:49,824 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000025B3EDFB5C0> server_hostname='api.openai.com' timeout=5.0
2025-08-08 16:10:49,849 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000025B3F013E50>
2025-08-08 16:10:49,850 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:10:49,850 - DEBUG - send_request_headers.complete
2025-08-08 16:10:49,850 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:10:49,850 - DEBUG - send_request_body.complete
2025-08-08 16:10:49,850 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:10:56,207 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 08 Aug 2025 11:10:56 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-gsctgi4tenlap3rmegivomgp'), (b'openai-processing-ms', b'5996'), (b'openai-project', b'proj_9NM8y20aOry0NJNndUcO4kJt'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'6104'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29733'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'534ms'), (b'x-request-id', b'req_2341aad45ff24e80aac3691ee38eff89'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=e.shm1Sf5IfoADY5Noba.2mrL6ud3YNPsSW0UJO8Z7o-1754651456-1.0.1.1-CigaQSnMCcQs5mb4U1RcbzcVZ3joI1fsntDfewYTxF8KjLkq3R5yHzk_YasuFWSZqC4TTzfyk6QWWuWzigcevzXMYMrmTdHMY4sPPr_Qqic; path=/; expires=Fri, 08-Aug-25 11:40:56 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=A1IwqJ3v9ODDKqssRrSrRqtSQBRgXQALIsjZv8qF3dg-1754651456727-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'96be91cceb9ae4c9-AKX'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-08 16:10:56,208 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-08 16:10:56,208 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:10:56,212 - DEBUG - receive_response_body.complete
2025-08-08 16:10:56,212 - DEBUG - response_closed.started
2025-08-08 16:10:56,212 - DEBUG - response_closed.complete
2025-08-08 16:10:56,212 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Fri, 08 Aug 2025 11:10:56 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-gsctgi4tenlap3rmegivomgp'), ('openai-processing-ms', '5996'), ('openai-project', 'proj_9NM8y20aOry0NJNndUcO4kJt'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '6104'), ('x-ratelimit-limit-requests', '500'), ('x-ratelimit-limit-tokens', '30000'), ('x-ratelimit-remaining-requests', '499'), ('x-ratelimit-remaining-tokens', '29733'), ('x-ratelimit-reset-requests', '120ms'), ('x-ratelimit-reset-tokens', '534ms'), ('x-request-id', 'req_2341aad45ff24e80aac3691ee38eff89'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=e.shm1Sf5IfoADY5Noba.2mrL6ud3YNPsSW0UJO8Z7o-1754651456-1.0.1.1-CigaQSnMCcQs5mb4U1RcbzcVZ3joI1fsntDfewYTxF8KjLkq3R5yHzk_YasuFWSZqC4TTzfyk6QWWuWzigcevzXMYMrmTdHMY4sPPr_Qqic; path=/; expires=Fri, 08-Aug-25 11:40:56 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=A1IwqJ3v9ODDKqssRrSrRqtSQBRgXQALIsjZv8qF3dg-1754651456727-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '96be91cceb9ae4c9-AKX'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-08-08 16:10:56,212 - DEBUG - request_id: req_2341aad45ff24e80aac3691ee38eff89
2025-08-08 16:10:56,217 - DEBUG - Generated image prompt for 'Р¶С‹Р»Т›С‹': Image Description:

The image shows a majestic horse standing in the center on a lush, grassy steppe under a wide, clear sky. The horse is adorned with traditional Kazakh ornaments: colorful tassels hanging from its bridle and a beautifully embroidered saddle cloth showcasing intricate patterns common in Kazakh art. In the background, subtle silhouettes of yurts are visible, emphasizing the nomadic lifestyle of the Kazakh people. The horse's mane and tail are flowing gently in the breeze, adding a sense of freedom and natural beauty to the scene. The overall color scheme features earthy tones and vibrant accents provided by the horse's adornments, creating a visual link to the Kazakh cultural heritage and the significance of the horse in it.
2025-08-08 16:10:56,217 - DEBUG - Request options: {'method': 'post', 'url': '/images/generations', 'files': None, 'json_data': {'prompt': "Image Description:\n\nThe image shows a majestic horse standing in the center on a lush, grassy steppe under a wide, clear sky. The horse is adorned with traditional Kazakh ornaments: colorful tassels hanging from its bridle and a beautifully embroidered saddle cloth showcasing intricate patterns common in Kazakh art. In the background, subtle silhouettes of yurts are visible, emphasizing the nomadic lifestyle of the Kazakh people. The horse's mane and tail are flowing gently in the breeze, adding a sense of freedom and natural beauty to the scene. The overall color scheme features earthy tones and vibrant accents provided by the horse's adornments, creating a visual link to the Kazakh cultural heritage and the significance of the horse in it., digital art, clean educational illustration, square format, no text or words visible, bright and clear for language learning", 'model': 'dall-e-3', 'n': 1, 'quality': 'standard', 'size': '1024x1024'}, 'idempotency_key': 'stainless-python-retry-21f8f78b-ffca-47a8-986e-333de4c52752'}
2025-08-08 16:10:56,218 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/images/generations
2025-08-08 16:10:56,218 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:10:56,219 - DEBUG - send_request_headers.complete
2025-08-08 16:10:56,219 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:10:56,219 - DEBUG - send_request_body.complete
2025-08-08 16:10:56,219 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:11:14,730 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 08 Aug 2025 11:11:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-gsctgi4tenlap3rmegivomgp'), (b'openai-project', b'proj_9NM8y20aOry0NJNndUcO4kJt'), (b'x-request-id', b'req_ffc702d6f072aa26c455bda873587d8c'), (b'openai-processing-ms', b'18150'), (b'x-envoy-upstream-service-time', b'18154'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'96be91f4b88ae4c9-AKX'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-08 16:11:14,731 - INFO - HTTP Request: POST https://api.openai.com/v1/images/generations "HTTP/1.1 200 OK"
2025-08-08 16:11:14,731 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:11:14,731 - DEBUG - receive_response_body.complete
2025-08-08 16:11:14,731 - DEBUG - response_closed.started
2025-08-08 16:11:14,731 - DEBUG - response_closed.complete
2025-08-08 16:11:14,732 - DEBUG - HTTP Response: POST https://api.openai.com/v1/images/generations "200 OK" Headers({'date': 'Fri, 08 Aug 2025 11:11:15 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'openai-version': '2020-10-01', 'openai-organization': 'user-gsctgi4tenlap3rmegivomgp', 'openai-project': 'proj_9NM8y20aOry0NJNndUcO4kJt', 'x-request-id': 'req_ffc702d6f072aa26c455bda873587d8c', 'openai-processing-ms': '18150', 'x-envoy-upstream-service-time': '18154', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '96be91f4b88ae4c9-AKX', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-08 16:11:14,732 - DEBUG - request_id: req_ffc702d6f072aa26c455bda873587d8c
2025-08-08 16:11:14,733 - INFO - Generated image for 'Р¶С‹Р»Т›С‹': https://oaidalleapiprodscus.blob.core.windows.net/private/org-QA1vw2bLx4mJJ3gO8vDB8703/user-GscTgi4teNlaP3rMEgIVoMgP/img-ULMwCgEwG3BFYueKzpe1phH7.png?st=2025-08-08T10%3A11%3A15Z&se=2025-08-08T12%3A11%3A15Z&sp=r&sv=2024-08-04&sr=b&rscd=inline&rsct=image/png&skoid=8b33a531-2df9-46a3-bc02-d4b1430a422c&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2025-08-07T16%3A28%3A09Z&ske=2025-08-08T16%3A28%3A09Z&sks=b&skv=2024-08-04&sig=nbzgxnT9CMqrshw3I2NE69mX%2B6djoqQtfcniMjclPuY%3D
2025-08-08 16:11:15,004 - DEBUG - connect_tcp.started host='oaidalleapiprodscus.blob.core.windows.net' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-08 16:11:15,471 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000025B3F3FE9D0>
2025-08-08 16:11:15,472 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000025B3F34D880> server_hostname='oaidalleapiprodscus.blob.core.windows.net' timeout=5.0
2025-08-08 16:11:15,866 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000025B3F40F510>
2025-08-08 16:11:15,866 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 16:11:15,867 - DEBUG - send_request_headers.complete
2025-08-08 16:11:15,867 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 16:11:15,867 - DEBUG - send_request_body.complete
2025-08-08 16:11:15,867 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 16:11:16,458 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Content-Length', b'2003134'), (b'Content-Type', b'image/png'), (b'Content-MD5', b'uZrJUvSBB0n9vE0HfVPNVQ=='), (b'Last-Modified', b'Fri, 08 Aug 2025 11:11:15 GMT'), (b'Accept-Ranges', b'bytes'), (b'ETag', b'"0x8DDD66C4A7BEA0D"'), (b'Server', b'Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0'), (b'x-ms-request-id', b'e4ec3380-301e-00aa-0555-089f3b000000'), (b'x-ms-version', b'2024-08-04'), (b'x-ms-creation-time', b'Fri, 08 Aug 2025 11:11:15 GMT'), (b'x-ms-lease-status', b'unlocked'), (b'x-ms-lease-state', b'available'), (b'x-ms-blob-type', b'BlockBlob'), (b'Content-Disposition', b'inline'), (b'x-ms-server-encrypted', b'true'), (b'x-ms-last-access-time', b'Fri, 08 Aug 2025 11:11:15 GMT'), (b'Date', b'Fri, 08 Aug 2025 11:11:15 GMT')])
2025-08-08 16:11:16,458 - INFO - HTTP Request: GET https://oaidalleapiprodscus.blob.core.windows.net/private/org-QA1vw2bLx4mJJ3gO8vDB8703/user-GscTgi4teNlaP3rMEgIVoMgP/img-ULMwCgEwG3BFYueKzpe1phH7.png?st=2025-08-08T10%3A11%3A15Z&se=2025-08-08T12%3A11%3A15Z&sp=r&sv=2024-08-04&sr=b&rscd=inline&rsct=image/png&skoid=8b33a531-2df9-46a3-bc02-d4b1430a422c&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2025-08-07T16%3A28%3A09Z&ske=2025-08-08T16%3A28%3A09Z&sks=b&skv=2024-08-04&sig=nbzgxnT9CMqrshw3I2NE69mX%2B6djoqQtfcniMjclPuY%3D "HTTP/1.1 200 OK"
2025-08-08 16:11:16,458 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 16:11:18,013 - DEBUG - receive_response_body.complete
2025-08-08 16:11:18,013 - DEBUG - response_closed.started
2025-08-08 16:11:18,013 - DEBUG - response_closed.complete
2025-08-08 16:11:18,029 - DEBUG - STREAM b'IHDR' 16 13
2025-08-08 16:11:18,029 - DEBUG - STREAM b'caBX' 41 14086
2025-08-08 16:11:18,029 - DEBUG - b'caBX' 41 14086 (unknown)
2025-08-08 16:11:18,029 - DEBUG - STREAM b'IDAT' 14139 65536
2025-08-08 16:11:18,068 - INFO - Saved processed image for word 3 to public\images\words\categories\1\3.png
2025-08-08 16:11:18,069 - DEBUG - close.started
2025-08-08 16:11:18,069 - DEBUG - close.complete
2025-08-08 16:11:18,069 - INFO - Converted path public\images\words\categories\1\3.png to URL: /images/words/categories/1/3.png
2025-08-08 16:11:18,069 - DEBUG - close.started
2025-08-08 16:11:18,070 - DEBUG - close.complete
2025-08-08 16:11:18,070 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=30.0 socket_options=None
2025-08-08 16:11:18,335 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x0000025B3F4BAF90>
2025-08-08 16:11:18,335 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:11:18,335 - DEBUG - send_request_headers.complete
2025-08-08 16:11:18,335 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:11:18,336 - DEBUG - send_request_body.complete
2025-08-08 16:11:18,336 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:11:18,357 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 201, b'Created', [(b'date', b'Fri, 08 Aug 2025 11:11:17 GMT'), (b'server', b'uvicorn'), (b'content-length', b'245'), (b'content-type', b'application/json')])
2025-08-08 16:11:18,357 - INFO - HTTP Request: POST http://localhost:8000/word-images/ "HTTP/1.1 201 Created"
2025-08-08 16:11:18,357 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:11:18,358 - DEBUG - receive_response_body.complete
2025-08-08 16:11:18,358 - DEBUG - response_closed.started
2025-08-08 16:11:18,358 - DEBUG - response_closed.complete
2025-08-08 16:11:18,358 - INFO - Created image record for word 3: /images/words/categories/1/3.png
2025-08-08 16:11:18,358 - INFO - SUCCESS: Successfully processed word 3: '?????'
2025-08-08 16:11:18,358 - INFO - SUCCESS [1/1]: Р¶С‹Р»Т›С‹
2025-08-08 16:11:18,358 - INFO - 
Image Generation Complete!
Statistics:
   - Total words: 1
   - Processed: 1
   - Successful: 1
   - Failed: 0
   - Success rate: 100.0%
            
2025-08-08 16:11:18,358 - DEBUG - close.started
2025-08-08 16:11:18,358 - DEBUG - close.complete
2025-08-08 16:15:21,661 - DEBUG - Using proactor: IocpProactor
2025-08-08 16:15:23,121 - INFO - Word Image Service initialized
2025-08-08 16:15:23,419 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=30.0 socket_options=None
2025-08-08 16:15:23,678 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000002DA490B2190>
2025-08-08 16:15:23,678 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 16:15:23,678 - DEBUG - send_request_headers.complete
2025-08-08 16:15:23,678 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 16:15:23,679 - DEBUG - send_request_body.complete
2025-08-08 16:15:23,679 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 16:15:23,687 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 08 Aug 2025 11:15:22 GMT'), (b'server', b'uvicorn'), (b'content-length', b'9487'), (b'content-type', b'application/json')])
2025-08-08 16:15:23,687 - INFO - HTTP Request: GET http://localhost:8000/words/without-images "HTTP/1.1 200 OK"
2025-08-08 16:15:23,688 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 16:15:23,688 - DEBUG - receive_response_body.complete
2025-08-08 16:15:23,688 - DEBUG - response_closed.started
2025-08-08 16:15:23,688 - DEBUG - response_closed.complete
2025-08-08 16:15:23,688 - INFO - Found 50 words without images
2025-08-08 16:15:23,688 - INFO - Processing 1 words without images
2025-08-08 16:15:23,688 - INFO - [1/1] Processing: СЃРёС‹СЂ (ID: 4)
2025-08-08 16:15:23,688 - INFO - Processing word 4: '????'
2025-08-08 16:15:23,688 - INFO - Category ID missing for word 4, fetching full details...
2025-08-08 16:15:23,689 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 16:15:23,689 - DEBUG - send_request_headers.complete
2025-08-08 16:15:23,689 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 16:15:23,689 - DEBUG - send_request_body.complete
2025-08-08 16:15:23,689 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 16:15:23,702 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 08 Aug 2025 11:15:22 GMT'), (b'server', b'uvicorn'), (b'content-length', b'1297'), (b'content-type', b'application/json')])
2025-08-08 16:15:23,702 - INFO - HTTP Request: GET http://localhost:8000/words/4 "HTTP/1.1 200 OK"
2025-08-08 16:15:23,702 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 16:15:23,703 - DEBUG - receive_response_body.complete
2025-08-08 16:15:23,703 - DEBUG - response_closed.started
2025-08-08 16:15:23,703 - DEBUG - response_closed.complete
2025-08-08 16:15:23,703 - DEBUG - Retrieved word details for ID 4: {'id': 4, 'kazakh_word': 'СЃРёС‹СЂ', 'kazakh_cyrillic': 'СЃРёС‹СЂ', 'created_at': '2025-06-18T11:08:16.092953', 'word_type': {'type_name': 'noun', 'description': 'Noun - person, place, thing', 'is_active': True, 'id': 1, 'created_at': '2025-06-18T11:08:16.048383', 'translations': [{'id': 1, 'translated_name': 'Noun', 'translated_description': 'Person, place, thing, or idea', 'language_code': 'en'}]}, 'category': {'category_name': 'animals', 'description': 'Animals and wildlife', 'is_active': True, 'id': 1, 'created_at': '2025-06-18T11:08:16.025801', 'translations': [{'id': 1, 'translated_name': 'Animals', 'translated_description': 'Animals and wildlife', 'language_code': 'en'}]}, 'difficulty_level': {'level_number': 1, 'level_name': 'beginner', 'description': 'Basic words for beginners', 'is_active': True, 'id': 1, 'created_at': '2025-06-18T11:08:16.064455', 'translations': [{'id': 1, 'translated_name': 'Beginner', 'translated_description': 'Basic words for beginners', 'language_code': 'en'}]}, 'translations': [{'translation': 'cow', 'alternative_translations': None, 'id': 13, 'language_code': 'en', 'created_at': '2025-06-18T11:08:16.095953'}], 'pronunciations': [{'pronunciation': 'see-UHR', 'pronunciation_system': 'IPA-simplified', 'audio_file_path': None, 'id': 4, 'language_code': 'en', 'created_at': '2025-06-18T11:08:16.094953'}], 'images': [], 'example_sentences': []}
2025-08-08 16:15:23,703 - INFO - Updated word data - category_id: 1, category: animals, translation: cow
2025-08-08 16:15:24,036 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert at creating visual image prompts for educational Kazakh language learning materials. \nCreate a detailed, culturally appropriate image description that will help learners associate the Kazakh word with its meaning.\n\nREQUIREMENTS:\n1. NO TEXT or letters should appear in the image\n2. Focus on visual representation only\n3. Use traditional Kazakh/Central Asian cultural elements when appropriate\n4. Style should be clean, educational, and suitable for language learning\n5. 300x300px square format\n6. Bright, clear, and easily recognizable imagery\n7. Incorporate Kazakh cultural aesthetics (traditional patterns, colors, landscapes) when relevant\n\nReturn only a concise image description prompt, no explanations.'}, {'role': 'user', 'content': 'Kazakh word: "СЃРёС‹СЂ"\nEnglish meaning: "cow"\nCategory: "animals"\n\nCreate a visual image prompt for this Kazakh word that shows its meaning without any text. Include Kazakh cultural elements where appropriate. If the meaning is unclear, create a generic educational illustration that could represent a Kazakh language concept.'}], 'model': 'gpt-4-turbo-preview', 'max_tokens': 200, 'temperature': 0.7}, 'idempotency_key': 'stainless-python-retry-0a28afbf-8573-4145-b468-d74a86a31e7c'}
2025-08-08 16:15:24,037 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-08 16:15:24,037 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-08 16:15:24,125 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000002DA491B34D0>
2025-08-08 16:15:24,125 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000002DA48FFB5C0> server_hostname='api.openai.com' timeout=5.0
2025-08-08 16:15:24,150 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000002DA490F8E90>
2025-08-08 16:15:24,150 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:15:24,151 - DEBUG - send_request_headers.complete
2025-08-08 16:15:24,151 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:15:24,151 - DEBUG - send_request_body.complete
2025-08-08 16:15:24,151 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:15:30,546 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 08 Aug 2025 11:15:31 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-gsctgi4tenlap3rmegivomgp'), (b'openai-processing-ms', b'6001'), (b'openai-project', b'proj_9NM8y20aOry0NJNndUcO4kJt'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'6126'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29734'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'532ms'), (b'x-request-id', b'req_3c2b66fb9bac49f784ce2c10e23f3e16'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=vqHDlX1JLQ2LKgWEJhLCnPi.NPIL3F7Z4lQtOf.Wq5Q-1754651731-1.0.1.1-KeD2DcahzQtRD4fNOvz9IBnzDzil053HJcNneT_NjjiYAj.EZyj6_r7u_yyZdmB68_v7tLvn53iIpnNZ7jSGc1swIhwIFyQ.XjrkZy5iLN8; path=/; expires=Fri, 08-Aug-25 11:45:31 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=6Est31zuLITIADOrhEpHIyTEu6WxJvvueXhBkxAGFqs-1754651731070-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'96be987f5a04e4bd-AKX'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-08 16:15:30,547 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-08 16:15:30,547 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:15:30,556 - DEBUG - receive_response_body.complete
2025-08-08 16:15:30,557 - DEBUG - response_closed.started
2025-08-08 16:15:30,557 - DEBUG - response_closed.complete
2025-08-08 16:15:30,557 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Fri, 08 Aug 2025 11:15:31 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-gsctgi4tenlap3rmegivomgp'), ('openai-processing-ms', '6001'), ('openai-project', 'proj_9NM8y20aOry0NJNndUcO4kJt'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '6126'), ('x-ratelimit-limit-requests', '500'), ('x-ratelimit-limit-tokens', '30000'), ('x-ratelimit-remaining-requests', '499'), ('x-ratelimit-remaining-tokens', '29734'), ('x-ratelimit-reset-requests', '120ms'), ('x-ratelimit-reset-tokens', '532ms'), ('x-request-id', 'req_3c2b66fb9bac49f784ce2c10e23f3e16'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=vqHDlX1JLQ2LKgWEJhLCnPi.NPIL3F7Z4lQtOf.Wq5Q-1754651731-1.0.1.1-KeD2DcahzQtRD4fNOvz9IBnzDzil053HJcNneT_NjjiYAj.EZyj6_r7u_yyZdmB68_v7tLvn53iIpnNZ7jSGc1swIhwIFyQ.XjrkZy5iLN8; path=/; expires=Fri, 08-Aug-25 11:45:31 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=6Est31zuLITIADOrhEpHIyTEu6WxJvvueXhBkxAGFqs-1754651731070-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '96be987f5a04e4bd-AKX'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-08-08 16:15:30,557 - DEBUG - request_id: req_3c2b66fb9bac49f784ce2c10e23f3e16
2025-08-08 16:15:30,561 - DEBUG - Generated image prompt for 'СЃРёС‹СЂ': Visual Image Description:

The image features a large, gentle-looking cow standing in the forefront of a traditional Kazakh steppe landscape. The cow has a distinctive black and white pattern, typical of the breeds found in Kazakhstan. Behind the cow, the endless steppe stretches to the horizon, dotted with a few traditional yurts (Kazakh nomadic tents) and some apple trees, hinting at the natural wealth of Kazakhstan. The sky is a vibrant blue, typical of a clear day on the steppe. On the cowвЂ™s neck hangs a traditional Kazakh ornament, subtly incorporating cultural elements without overwhelming the main focus of the image. The overall color scheme reflects the natural colors of the Kazakh landscape: earthy tones with splashes of vibrant blues and greens.
2025-08-08 16:15:30,562 - DEBUG - Request options: {'method': 'post', 'url': '/images/generations', 'files': None, 'json_data': {'prompt': 'Visual Image Description:\n\nThe image features a large, gentle-looking cow standing in the forefront of a traditional Kazakh steppe landscape. The cow has a distinctive black and white pattern, typical of the breeds found in Kazakhstan. Behind the cow, the endless steppe stretches to the horizon, dotted with a few traditional yurts (Kazakh nomadic tents) and some apple trees, hinting at the natural wealth of Kazakhstan. The sky is a vibrant blue, typical of a clear day on the steppe. On the cowвЂ™s neck hangs a traditional Kazakh ornament, subtly incorporating cultural elements without overwhelming the main focus of the image. The overall color scheme reflects the natural colors of the Kazakh landscape: earthy tones with splashes of vibrant blues and greens., digital art, clean educational illustration, square format, no text or words visible, bright and clear for language learning', 'model': 'dall-e-3', 'n': 1, 'quality': 'standard', 'size': '1024x1024'}, 'idempotency_key': 'stainless-python-retry-98924c5d-99ae-4ef0-a5cb-3b6705a1b44c'}
2025-08-08 16:15:30,564 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/images/generations
2025-08-08 16:15:30,564 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:15:30,565 - DEBUG - send_request_headers.complete
2025-08-08 16:15:30,565 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:15:30,565 - DEBUG - send_request_body.complete
2025-08-08 16:15:30,565 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:15:44,516 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 08 Aug 2025 11:15:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-gsctgi4tenlap3rmegivomgp'), (b'openai-project', b'proj_9NM8y20aOry0NJNndUcO4kJt'), (b'x-request-id', b'req_045e914954c1d7e187b337ba921f5993'), (b'openai-processing-ms', b'13660'), (b'x-envoy-upstream-service-time', b'13714'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'96be98a76f68e4bd-AKX'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-08 16:15:44,516 - INFO - HTTP Request: POST https://api.openai.com/v1/images/generations "HTTP/1.1 200 OK"
2025-08-08 16:15:44,516 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:15:44,520 - DEBUG - receive_response_body.complete
2025-08-08 16:15:44,520 - DEBUG - response_closed.started
2025-08-08 16:15:44,520 - DEBUG - response_closed.complete
2025-08-08 16:15:44,520 - DEBUG - HTTP Response: POST https://api.openai.com/v1/images/generations "200 OK" Headers({'date': 'Fri, 08 Aug 2025 11:15:45 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'openai-version': '2020-10-01', 'openai-organization': 'user-gsctgi4tenlap3rmegivomgp', 'openai-project': 'proj_9NM8y20aOry0NJNndUcO4kJt', 'x-request-id': 'req_045e914954c1d7e187b337ba921f5993', 'openai-processing-ms': '13660', 'x-envoy-upstream-service-time': '13714', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '96be98a76f68e4bd-AKX', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-08 16:15:44,521 - DEBUG - request_id: req_045e914954c1d7e187b337ba921f5993
2025-08-08 16:15:44,522 - INFO - Generated image for 'СЃРёС‹СЂ': https://oaidalleapiprodscus.blob.core.windows.net/private/org-QA1vw2bLx4mJJ3gO8vDB8703/user-GscTgi4teNlaP3rMEgIVoMgP/img-Xd5CxICujLCIBKF5W4G2KdPM.png?st=2025-08-08T10%3A15%3A44Z&se=2025-08-08T12%3A15%3A44Z&sp=r&sv=2024-08-04&sr=b&rscd=inline&rsct=image/png&skoid=b1a0ae1f-618f-4548-84fd-8b16cacd5485&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2025-08-08T08%3A31%3A08Z&ske=2025-08-09T08%3A31%3A08Z&sks=b&skv=2024-08-04&sig=XRmzEwu9VmVsmWSRnOc0XVMFylJWWXef1oO8vOdotbo%3D
2025-08-08 16:15:44,793 - DEBUG - connect_tcp.started host='oaidalleapiprodscus.blob.core.windows.net' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-08 16:15:45,111 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000002DA48FEEFD0>
2025-08-08 16:15:45,111 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000002DA4954D880> server_hostname='oaidalleapiprodscus.blob.core.windows.net' timeout=5.0
2025-08-08 16:15:45,518 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000002DA495FF8D0>
2025-08-08 16:15:45,518 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 16:15:45,519 - DEBUG - send_request_headers.complete
2025-08-08 16:15:45,519 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 16:15:45,519 - DEBUG - send_request_body.complete
2025-08-08 16:15:45,519 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 16:15:46,127 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Content-Length', b'1913478'), (b'Content-Type', b'image/png'), (b'Content-MD5', b'E1CLND3ZzYY6lH5wCr5rcA=='), (b'Last-Modified', b'Fri, 08 Aug 2025 11:15:44 GMT'), (b'Accept-Ranges', b'bytes'), (b'ETag', b'"0x8DDD66CEB38949A"'), (b'Server', b'Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0'), (b'x-ms-request-id', b'3edef2a4-e01e-0096-0d55-08b6fc000000'), (b'x-ms-version', b'2024-08-04'), (b'x-ms-creation-time', b'Fri, 08 Aug 2025 11:15:44 GMT'), (b'x-ms-lease-status', b'unlocked'), (b'x-ms-lease-state', b'available'), (b'x-ms-blob-type', b'BlockBlob'), (b'Content-Disposition', b'inline'), (b'x-ms-server-encrypted', b'true'), (b'x-ms-last-access-time', b'Fri, 08 Aug 2025 11:15:44 GMT'), (b'Date', b'Fri, 08 Aug 2025 11:15:45 GMT')])
2025-08-08 16:15:46,127 - INFO - HTTP Request: GET https://oaidalleapiprodscus.blob.core.windows.net/private/org-QA1vw2bLx4mJJ3gO8vDB8703/user-GscTgi4teNlaP3rMEgIVoMgP/img-Xd5CxICujLCIBKF5W4G2KdPM.png?st=2025-08-08T10%3A15%3A44Z&se=2025-08-08T12%3A15%3A44Z&sp=r&sv=2024-08-04&sr=b&rscd=inline&rsct=image/png&skoid=b1a0ae1f-618f-4548-84fd-8b16cacd5485&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2025-08-08T08%3A31%3A08Z&ske=2025-08-09T08%3A31%3A08Z&sks=b&skv=2024-08-04&sig=XRmzEwu9VmVsmWSRnOc0XVMFylJWWXef1oO8vOdotbo%3D "HTTP/1.1 200 OK"
2025-08-08 16:15:46,127 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 16:15:48,137 - DEBUG - receive_response_body.complete
2025-08-08 16:15:48,137 - DEBUG - response_closed.started
2025-08-08 16:15:48,137 - DEBUG - response_closed.complete
2025-08-08 16:15:48,153 - DEBUG - STREAM b'IHDR' 16 13
2025-08-08 16:15:48,153 - DEBUG - STREAM b'caBX' 41 14086
2025-08-08 16:15:48,153 - DEBUG - b'caBX' 41 14086 (unknown)
2025-08-08 16:15:48,153 - DEBUG - STREAM b'IDAT' 14139 65536
2025-08-08 16:15:48,196 - INFO - Saved processed image for word 4 to ..\kazakh-learn-frontend\public\images\words\categories\1\4.png
2025-08-08 16:15:48,197 - DEBUG - close.started
2025-08-08 16:15:48,197 - DEBUG - close.complete
2025-08-08 16:15:48,197 - INFO - Converted path ..\kazakh-learn-frontend\public\images\words\categories\1\4.png to URL: /images/words/categories/1/4.png
2025-08-08 16:15:48,197 - DEBUG - close.started
2025-08-08 16:15:48,198 - DEBUG - close.complete
2025-08-08 16:15:48,198 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=30.0 socket_options=None
2025-08-08 16:15:48,460 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x000002DA496BAE10>
2025-08-08 16:15:48,460 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:15:48,460 - DEBUG - send_request_headers.complete
2025-08-08 16:15:48,460 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:15:48,460 - DEBUG - send_request_body.complete
2025-08-08 16:15:48,460 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:15:48,470 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 201, b'Created', [(b'date', b'Fri, 08 Aug 2025 11:15:47 GMT'), (b'server', b'uvicorn'), (b'content-length', b'245'), (b'content-type', b'application/json')])
2025-08-08 16:15:48,470 - INFO - HTTP Request: POST http://localhost:8000/word-images/ "HTTP/1.1 201 Created"
2025-08-08 16:15:48,470 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:15:48,470 - DEBUG - receive_response_body.complete
2025-08-08 16:15:48,470 - DEBUG - response_closed.started
2025-08-08 16:15:48,471 - DEBUG - response_closed.complete
2025-08-08 16:15:48,471 - INFO - Created image record for word 4: /images/words/categories/1/4.png
2025-08-08 16:15:48,471 - INFO - SUCCESS: Successfully processed word 4: '????'
2025-08-08 16:15:48,471 - INFO - SUCCESS [1/1]: СЃРёС‹СЂ
2025-08-08 16:15:48,471 - INFO - 
Image Generation Complete!
Statistics:
   - Total words: 1
   - Processed: 1
   - Successful: 1
   - Failed: 0
   - Success rate: 100.0%
            
2025-08-08 16:15:48,471 - DEBUG - close.started
2025-08-08 16:15:48,471 - DEBUG - close.complete
2025-08-08 16:16:53,849 - DEBUG - Using proactor: IocpProactor
2025-08-08 16:16:55,477 - INFO - Word Image Service initialized
2025-08-08 16:16:55,797 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=30.0 socket_options=None
2025-08-08 16:16:56,057 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C16B2590>
2025-08-08 16:16:56,057 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 16:16:56,057 - DEBUG - send_request_headers.complete
2025-08-08 16:16:56,057 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 16:16:56,057 - DEBUG - send_request_body.complete
2025-08-08 16:16:56,057 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 16:16:56,067 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 08 Aug 2025 11:16:55 GMT'), (b'server', b'uvicorn'), (b'content-length', b'9505'), (b'content-type', b'application/json')])
2025-08-08 16:16:56,067 - INFO - HTTP Request: GET http://localhost:8000/words/without-images "HTTP/1.1 200 OK"
2025-08-08 16:16:56,067 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 16:16:56,067 - DEBUG - receive_response_body.complete
2025-08-08 16:16:56,067 - DEBUG - response_closed.started
2025-08-08 16:16:56,067 - DEBUG - response_closed.complete
2025-08-08 16:16:56,067 - INFO - Found 50 words without images
2025-08-08 16:16:56,067 - INFO - Processing 10 words without images
2025-08-08 16:16:56,067 - INFO - [1/10] Processing: Т›С‹Р·С‹Р» (ID: 8)
2025-08-08 16:16:56,067 - INFO - Processing word 8: '?????'
2025-08-08 16:16:56,067 - INFO - Category ID missing for word 8, fetching full details...
2025-08-08 16:16:56,067 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 16:16:56,067 - DEBUG - send_request_headers.complete
2025-08-08 16:16:56,067 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 16:16:56,067 - DEBUG - send_request_body.complete
2025-08-08 16:16:56,067 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 16:16:56,077 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 08 Aug 2025 11:16:55 GMT'), (b'server', b'uvicorn'), (b'content-length', b'1304'), (b'content-type', b'application/json')])
2025-08-08 16:16:56,082 - INFO - HTTP Request: GET http://localhost:8000/words/8 "HTTP/1.1 200 OK"
2025-08-08 16:16:56,082 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 16:16:56,082 - DEBUG - receive_response_body.complete
2025-08-08 16:16:56,082 - DEBUG - response_closed.started
2025-08-08 16:16:56,082 - DEBUG - response_closed.complete
2025-08-08 16:16:56,082 - DEBUG - Retrieved word details for ID 8: {'id': 8, 'kazakh_word': 'Т›С‹Р·С‹Р»', 'kazakh_cyrillic': 'Т›С‹Р·С‹Р»', 'created_at': '2025-06-18T11:08:16.101019', 'word_type': {'type_name': 'adjective', 'description': 'Adjective - describing word', 'is_active': True, 'id': 3, 'created_at': '2025-06-18T11:08:16.053456', 'translations': [{'id': 7, 'translated_name': 'Adjective', 'translated_description': 'Describes nouns and pronouns', 'language_code': 'en'}]}, 'category': {'category_name': 'colors', 'description': 'Colors and shades', 'is_active': True, 'id': 4, 'created_at': '2025-06-18T11:08:16.033863', 'translations': [{'id': 10, 'translated_name': 'Colors', 'translated_description': 'Colors and shades', 'language_code': 'en'}]}, 'difficulty_level': {'level_number': 1, 'level_name': 'beginner', 'description': 'Basic words for beginners', 'is_active': True, 'id': 1, 'created_at': '2025-06-18T11:08:16.064455', 'translations': [{'id': 1, 'translated_name': 'Beginner', 'translated_description': 'Basic words for beginners', 'language_code': 'en'}]}, 'translations': [{'translation': 'red', 'alternative_translations': None, 'id': 29, 'language_code': 'en', 'created_at': '2025-06-18T11:08:16.105020'}], 'pronunciations': [{'pronunciation': 'kuh-ZUHL', 'pronunciation_system': 'IPA-simplified', 'audio_file_path': None, 'id': 8, 'language_code': 'en', 'created_at': '2025-06-18T11:08:16.104020'}], 'images': [], 'example_sentences': []}
2025-08-08 16:16:56,082 - INFO - Updated word data - category_id: 4, category: colors, translation: red
2025-08-08 16:16:56,412 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert at creating visual image prompts for educational Kazakh language learning materials. \nCreate a detailed, culturally appropriate image description that will help learners associate the Kazakh word with its meaning.\n\nREQUIREMENTS:\n1. NO TEXT or letters should appear in the image\n2. Focus on visual representation only\n3. Use traditional Kazakh/Central Asian cultural elements when appropriate\n4. Style should be clean, educational, and suitable for language learning\n5. 300x300px square format\n6. Bright, clear, and easily recognizable imagery\n7. Incorporate Kazakh cultural aesthetics (traditional patterns, colors, landscapes) when relevant\n\nReturn only a concise image description prompt, no explanations.'}, {'role': 'user', 'content': 'Kazakh word: "Т›С‹Р·С‹Р»"\nEnglish meaning: "red"\nCategory: "colors"\n\nCreate a visual image prompt for this Kazakh word that shows its meaning without any text. Include Kazakh cultural elements where appropriate. If the meaning is unclear, create a generic educational illustration that could represent a Kazakh language concept.'}], 'model': 'gpt-4-turbo-preview', 'max_tokens': 200, 'temperature': 0.7}, 'idempotency_key': 'stainless-python-retry-b7b64dd8-0427-44f3-b872-574b75140161'}
2025-08-08 16:16:56,412 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-08 16:16:56,417 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-08 16:16:56,503 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C183CE50>
2025-08-08 16:16:56,503 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000282C15FB5C0> server_hostname='api.openai.com' timeout=5.0
2025-08-08 16:16:56,532 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1721A50>
2025-08-08 16:16:56,532 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:16:56,532 - DEBUG - send_request_headers.complete
2025-08-08 16:16:56,532 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:16:56,532 - DEBUG - send_request_body.complete
2025-08-08 16:16:56,532 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:17:02,524 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 08 Aug 2025 11:17:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-gsctgi4tenlap3rmegivomgp'), (b'openai-processing-ms', b'5686'), (b'openai-project', b'proj_9NM8y20aOry0NJNndUcO4kJt'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'5752'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29733'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'534ms'), (b'x-request-id', b'req_bb6321bf7bff4c929756c3d85b1d1437'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=IGRUV5bXkMCQo7DJ0vkFFwaG6iPV9i3yZeoIt4KUHC0-1754651823-1.0.1.1-otifslVyjmXy4nS3AFssa8YyEFCmPeDARikLn28A5LI0HWO2fNEEwdY6TGUrLlpwFPNpfDRbwXSQsGb1IOFPMc_b2BBtltDqh5IuqA2mCfI; path=/; expires=Fri, 08-Aug-25 11:47:03 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=lq0jzi5PIoCYjH._Fq.n.dRtEZZPBRynN_iEcbo5Gkc-1754651823049-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'96be9ac0be23e4be-AKX'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-08 16:17:02,524 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-08 16:17:02,524 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:17:02,524 - DEBUG - receive_response_body.complete
2025-08-08 16:17:02,524 - DEBUG - response_closed.started
2025-08-08 16:17:02,524 - DEBUG - response_closed.complete
2025-08-08 16:17:02,524 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Fri, 08 Aug 2025 11:17:03 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-gsctgi4tenlap3rmegivomgp'), ('openai-processing-ms', '5686'), ('openai-project', 'proj_9NM8y20aOry0NJNndUcO4kJt'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '5752'), ('x-ratelimit-limit-requests', '500'), ('x-ratelimit-limit-tokens', '30000'), ('x-ratelimit-remaining-requests', '499'), ('x-ratelimit-remaining-tokens', '29733'), ('x-ratelimit-reset-requests', '120ms'), ('x-ratelimit-reset-tokens', '534ms'), ('x-request-id', 'req_bb6321bf7bff4c929756c3d85b1d1437'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=IGRUV5bXkMCQo7DJ0vkFFwaG6iPV9i3yZeoIt4KUHC0-1754651823-1.0.1.1-otifslVyjmXy4nS3AFssa8YyEFCmPeDARikLn28A5LI0HWO2fNEEwdY6TGUrLlpwFPNpfDRbwXSQsGb1IOFPMc_b2BBtltDqh5IuqA2mCfI; path=/; expires=Fri, 08-Aug-25 11:47:03 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=lq0jzi5PIoCYjH._Fq.n.dRtEZZPBRynN_iEcbo5Gkc-1754651823049-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '96be9ac0be23e4be-AKX'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-08-08 16:17:02,524 - DEBUG - request_id: req_bb6321bf7bff4c929756c3d85b1d1437
2025-08-08 16:17:02,528 - DEBUG - Generated image prompt for 'Т›С‹Р·С‹Р»': In the center of the image, a traditional Kazakh felt carpet, known as a "shyrdak," is displayed, featuring intricate patterns primarily in bright red, with accents of yellow and green for contrast. Surrounding the shyrdak, various objects symbolize Kazakh culture: a woman's headscarf with red floral patterns, a small dombyra (a traditional Kazakh string instrument) with red details on its body, and a bowl of shiny red apples, which are commonly grown in Kazakhstan. The background is a soft, neutral color to ensure the red items stand out, enhancing the connection to the word "Т›С‹Р·С‹Р»" without using text.
2025-08-08 16:17:02,538 - DEBUG - Request options: {'method': 'post', 'url': '/images/generations', 'files': None, 'json_data': {'prompt': 'In the center of the image, a traditional Kazakh felt carpet, known as a "shyrdak," is displayed, featuring intricate patterns primarily in bright red, with accents of yellow and green for contrast. Surrounding the shyrdak, various objects symbolize Kazakh culture: a woman\'s headscarf with red floral patterns, a small dombyra (a traditional Kazakh string instrument) with red details on its body, and a bowl of shiny red apples, which are commonly grown in Kazakhstan. The background is a soft, neutral color to ensure the red items stand out, enhancing the connection to the word "Т›С‹Р·С‹Р»" without using text., digital art, clean educational illustration, square format, no text or words visible, bright and clear for language learning', 'model': 'dall-e-3', 'n': 1, 'quality': 'standard', 'size': '1024x1024'}, 'idempotency_key': 'stainless-python-retry-ad2e645d-e198-4062-babd-c99f004af70a'}
2025-08-08 16:17:02,538 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/images/generations
2025-08-08 16:17:02,538 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:17:02,538 - DEBUG - send_request_headers.complete
2025-08-08 16:17:02,538 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:17:02,538 - DEBUG - send_request_body.complete
2025-08-08 16:17:02,538 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:17:23,730 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 08 Aug 2025 11:17:24 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-gsctgi4tenlap3rmegivomgp'), (b'openai-project', b'proj_9NM8y20aOry0NJNndUcO4kJt'), (b'x-request-id', b'req_b7214cd0265984992798fa203607f4bd'), (b'openai-processing-ms', b'20940'), (b'x-envoy-upstream-service-time', b'20946'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'96be9ae6488ce4be-AKX'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-08 16:17:23,730 - INFO - HTTP Request: POST https://api.openai.com/v1/images/generations "HTTP/1.1 200 OK"
2025-08-08 16:17:23,733 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:17:23,734 - DEBUG - receive_response_body.complete
2025-08-08 16:17:23,734 - DEBUG - response_closed.started
2025-08-08 16:17:23,734 - DEBUG - response_closed.complete
2025-08-08 16:17:23,734 - DEBUG - HTTP Response: POST https://api.openai.com/v1/images/generations "200 OK" Headers({'date': 'Fri, 08 Aug 2025 11:17:24 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'openai-version': '2020-10-01', 'openai-organization': 'user-gsctgi4tenlap3rmegivomgp', 'openai-project': 'proj_9NM8y20aOry0NJNndUcO4kJt', 'x-request-id': 'req_b7214cd0265984992798fa203607f4bd', 'openai-processing-ms': '20940', 'x-envoy-upstream-service-time': '20946', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '96be9ae6488ce4be-AKX', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-08 16:17:23,734 - DEBUG - request_id: req_b7214cd0265984992798fa203607f4bd
2025-08-08 16:17:23,735 - INFO - Generated image for 'Т›С‹Р·С‹Р»': https://oaidalleapiprodscus.blob.core.windows.net/private/org-QA1vw2bLx4mJJ3gO8vDB8703/user-GscTgi4teNlaP3rMEgIVoMgP/img-eRKgGBHzoOiy0T7kBcVInyf2.png?st=2025-08-08T10%3A17%3A24Z&se=2025-08-08T12%3A17%3A24Z&sp=r&sv=2024-08-04&sr=b&rscd=inline&rsct=image/png&skoid=8b33a531-2df9-46a3-bc02-d4b1430a422c&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2025-08-08T00%3A21%3A34Z&ske=2025-08-09T00%3A21%3A34Z&sks=b&skv=2024-08-04&sig=ybDJXOm6g4b6HRUM1u/D7DcbK4/IvpZIXq4miWyiMfo%3D
2025-08-08 16:17:24,014 - DEBUG - connect_tcp.started host='oaidalleapiprodscus.blob.core.windows.net' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-08 16:17:24,492 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1BFC890>
2025-08-08 16:17:24,492 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000282C1B4D880> server_hostname='oaidalleapiprodscus.blob.core.windows.net' timeout=5.0
2025-08-08 16:17:24,897 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C17B3950>
2025-08-08 16:17:24,897 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 16:17:24,897 - DEBUG - send_request_headers.complete
2025-08-08 16:17:24,897 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 16:17:24,897 - DEBUG - send_request_body.complete
2025-08-08 16:17:24,897 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 16:17:25,499 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Content-Length', b'2170874'), (b'Content-Type', b'image/png'), (b'Content-MD5', b'vSFwAFjeOP/nRSoTMJtrgA=='), (b'Last-Modified', b'Fri, 08 Aug 2025 11:17:24 GMT'), (b'Accept-Ranges', b'bytes'), (b'ETag', b'"0x8DDD66D2669EC83"'), (b'Server', b'Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0'), (b'x-ms-request-id', b'089e51bd-d01e-0034-6956-088ce5000000'), (b'x-ms-version', b'2024-08-04'), (b'x-ms-creation-time', b'Fri, 08 Aug 2025 11:17:24 GMT'), (b'x-ms-lease-status', b'unlocked'), (b'x-ms-lease-state', b'available'), (b'x-ms-blob-type', b'BlockBlob'), (b'Content-Disposition', b'inline'), (b'x-ms-server-encrypted', b'true'), (b'x-ms-last-access-time', b'Fri, 08 Aug 2025 11:17:24 GMT'), (b'Date', b'Fri, 08 Aug 2025 11:17:25 GMT')])
2025-08-08 16:17:25,499 - INFO - HTTP Request: GET https://oaidalleapiprodscus.blob.core.windows.net/private/org-QA1vw2bLx4mJJ3gO8vDB8703/user-GscTgi4teNlaP3rMEgIVoMgP/img-eRKgGBHzoOiy0T7kBcVInyf2.png?st=2025-08-08T10%3A17%3A24Z&se=2025-08-08T12%3A17%3A24Z&sp=r&sv=2024-08-04&sr=b&rscd=inline&rsct=image/png&skoid=8b33a531-2df9-46a3-bc02-d4b1430a422c&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2025-08-08T00%3A21%3A34Z&ske=2025-08-09T00%3A21%3A34Z&sks=b&skv=2024-08-04&sig=ybDJXOm6g4b6HRUM1u/D7DcbK4/IvpZIXq4miWyiMfo%3D "HTTP/1.1 200 OK"
2025-08-08 16:17:25,499 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 16:17:27,272 - DEBUG - receive_response_body.complete
2025-08-08 16:17:27,272 - DEBUG - response_closed.started
2025-08-08 16:17:27,272 - DEBUG - response_closed.complete
2025-08-08 16:17:27,292 - DEBUG - STREAM b'IHDR' 16 13
2025-08-08 16:17:27,292 - DEBUG - STREAM b'caBX' 41 14086
2025-08-08 16:17:27,292 - DEBUG - b'caBX' 41 14086 (unknown)
2025-08-08 16:17:27,292 - DEBUG - STREAM b'IDAT' 14139 65536
2025-08-08 16:17:27,357 - INFO - Saved processed image for word 8 to ..\kazakh-learn-frontend\public\images\words\categories\4\8.png
2025-08-08 16:17:27,357 - DEBUG - close.started
2025-08-08 16:17:27,357 - DEBUG - close.complete
2025-08-08 16:17:27,357 - INFO - Converted path ..\kazakh-learn-frontend\public\images\words\categories\4\8.png to URL: /images/words/categories/4/8.png
2025-08-08 16:17:27,357 - DEBUG - close.started
2025-08-08 16:17:27,357 - DEBUG - close.complete
2025-08-08 16:17:27,357 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=30.0 socket_options=None
2025-08-08 16:17:27,611 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CBF050>
2025-08-08 16:17:27,611 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:17:27,611 - DEBUG - send_request_headers.complete
2025-08-08 16:17:27,611 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:17:27,611 - DEBUG - send_request_body.complete
2025-08-08 16:17:27,611 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:17:27,622 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 201, b'Created', [(b'date', b'Fri, 08 Aug 2025 11:17:27 GMT'), (b'server', b'uvicorn'), (b'content-length', b'245'), (b'content-type', b'application/json')])
2025-08-08 16:17:27,622 - INFO - HTTP Request: POST http://localhost:8000/word-images/ "HTTP/1.1 201 Created"
2025-08-08 16:17:27,622 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:17:27,622 - DEBUG - receive_response_body.complete
2025-08-08 16:17:27,622 - DEBUG - response_closed.started
2025-08-08 16:17:27,622 - DEBUG - response_closed.complete
2025-08-08 16:17:27,622 - INFO - Created image record for word 8: /images/words/categories/4/8.png
2025-08-08 16:17:27,622 - INFO - SUCCESS: Successfully processed word 8: '?????'
2025-08-08 16:17:27,622 - INFO - SUCCESS [1/10]: Т›С‹Р·С‹Р»
2025-08-08 16:17:29,633 - INFO - [2/10] Processing: РєУ©Рє (ID: 9)
2025-08-08 16:17:29,633 - INFO - Processing word 9: '???'
2025-08-08 16:17:29,633 - INFO - Category ID missing for word 9, fetching full details...
2025-08-08 16:17:29,633 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 16:17:29,633 - DEBUG - send_request_headers.complete
2025-08-08 16:17:29,633 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 16:17:29,633 - DEBUG - send_request_body.complete
2025-08-08 16:17:29,633 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 16:17:29,647 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 08 Aug 2025 11:17:28 GMT'), (b'server', b'uvicorn'), (b'content-length', b'1293'), (b'content-type', b'application/json')])
2025-08-08 16:17:29,647 - INFO - HTTP Request: GET http://localhost:8000/words/9 "HTTP/1.1 200 OK"
2025-08-08 16:17:29,647 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 16:17:29,647 - DEBUG - receive_response_body.complete
2025-08-08 16:17:29,648 - DEBUG - response_closed.started
2025-08-08 16:17:29,648 - DEBUG - response_closed.complete
2025-08-08 16:17:29,648 - DEBUG - Retrieved word details for ID 9: {'id': 9, 'kazakh_word': 'РєУ©Рє', 'kazakh_cyrillic': 'РєУ©Рє', 'created_at': '2025-06-18T11:08:16.104020', 'word_type': {'type_name': 'adjective', 'description': 'Adjective - describing word', 'is_active': True, 'id': 3, 'created_at': '2025-06-18T11:08:16.053456', 'translations': [{'id': 7, 'translated_name': 'Adjective', 'translated_description': 'Describes nouns and pronouns', 'language_code': 'en'}]}, 'category': {'category_name': 'colors', 'description': 'Colors and shades', 'is_active': True, 'id': 4, 'created_at': '2025-06-18T11:08:16.033863', 'translations': [{'id': 10, 'translated_name': 'Colors', 'translated_description': 'Colors and shades', 'language_code': 'en'}]}, 'difficulty_level': {'level_number': 1, 'level_name': 'beginner', 'description': 'Basic words for beginners', 'is_active': True, 'id': 1, 'created_at': '2025-06-18T11:08:16.064455', 'translations': [{'id': 1, 'translated_name': 'Beginner', 'translated_description': 'Basic words for beginners', 'language_code': 'en'}]}, 'translations': [{'translation': 'blue', 'alternative_translations': None, 'id': 33, 'language_code': 'en', 'created_at': '2025-06-18T11:08:16.107020'}], 'pronunciations': [{'pronunciation': 'kuhk', 'pronunciation_system': 'IPA-simplified', 'audio_file_path': None, 'id': 9, 'language_code': 'en', 'created_at': '2025-06-18T11:08:16.106021'}], 'images': [], 'example_sentences': []}
2025-08-08 16:17:29,648 - INFO - Updated word data - category_id: 4, category: colors, translation: blue
2025-08-08 16:17:29,649 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert at creating visual image prompts for educational Kazakh language learning materials. \nCreate a detailed, culturally appropriate image description that will help learners associate the Kazakh word with its meaning.\n\nREQUIREMENTS:\n1. NO TEXT or letters should appear in the image\n2. Focus on visual representation only\n3. Use traditional Kazakh/Central Asian cultural elements when appropriate\n4. Style should be clean, educational, and suitable for language learning\n5. 300x300px square format\n6. Bright, clear, and easily recognizable imagery\n7. Incorporate Kazakh cultural aesthetics (traditional patterns, colors, landscapes) when relevant\n\nReturn only a concise image description prompt, no explanations.'}, {'role': 'user', 'content': 'Kazakh word: "РєУ©Рє"\nEnglish meaning: "blue"\nCategory: "colors"\n\nCreate a visual image prompt for this Kazakh word that shows its meaning without any text. Include Kazakh cultural elements where appropriate. If the meaning is unclear, create a generic educational illustration that could represent a Kazakh language concept.'}], 'model': 'gpt-4-turbo-preview', 'max_tokens': 200, 'temperature': 0.7}, 'idempotency_key': 'stainless-python-retry-d56186b2-1035-4f58-81dc-c136c8d8e735'}
2025-08-08 16:17:29,649 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-08 16:17:29,649 - DEBUG - close.started
2025-08-08 16:17:29,649 - DEBUG - close.complete
2025-08-08 16:17:29,649 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-08 16:17:29,667 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CCF290>
2025-08-08 16:17:29,667 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000282C15FB5C0> server_hostname='api.openai.com' timeout=5.0
2025-08-08 16:17:29,692 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CCF350>
2025-08-08 16:17:29,692 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:17:29,697 - DEBUG - send_request_headers.complete
2025-08-08 16:17:29,697 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:17:29,697 - DEBUG - send_request_body.complete
2025-08-08 16:17:29,697 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:17:35,577 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 08 Aug 2025 11:17:36 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-gsctgi4tenlap3rmegivomgp'), (b'openai-processing-ms', b'5530'), (b'openai-project', b'proj_9NM8y20aOry0NJNndUcO4kJt'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'5629'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29734'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'532ms'), (b'x-request-id', b'req_316bb2119b9b44f3b9fdc8b1f45f2078'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'96be9b900dede4c3-AKX'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-08 16:17:35,577 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-08 16:17:35,577 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:17:35,587 - DEBUG - receive_response_body.complete
2025-08-08 16:17:35,587 - DEBUG - response_closed.started
2025-08-08 16:17:35,587 - DEBUG - response_closed.complete
2025-08-08 16:17:35,587 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 08 Aug 2025 11:17:36 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-gsctgi4tenlap3rmegivomgp', 'openai-processing-ms': '5530', 'openai-project': 'proj_9NM8y20aOry0NJNndUcO4kJt', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '5629', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29734', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '532ms', 'x-request-id': 'req_316bb2119b9b44f3b9fdc8b1f45f2078', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '96be9b900dede4c3-AKX', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-08 16:17:35,587 - DEBUG - request_id: req_316bb2119b9b44f3b9fdc8b1f45f2078
2025-08-08 16:17:35,587 - DEBUG - Generated image prompt for 'РєУ©Рє': The image features a bright blue sky stretching across the top two-thirds of the composition, seamlessly transitioning into a traditional Kazakh pattern in various shades of blue at the bottom. This pattern includes elements like the shanyrak (roof of a yurt) and kerege (yurt wall segments), intricately designed with geometrical shapes common in Kazakh art. The transition from the sky to the pattern symbolizes the word "РєУ©Рє" (blue) in a culturally relevant manner, blending the natural color with traditional Kazakh designs. The clear, vibrant blue of the sky is unmistakable and easily associates the color with its Kazakh name, within a context that honors Kazakhstan's heritage.
2025-08-08 16:17:35,587 - DEBUG - Request options: {'method': 'post', 'url': '/images/generations', 'files': None, 'json_data': {'prompt': 'The image features a bright blue sky stretching across the top two-thirds of the composition, seamlessly transitioning into a traditional Kazakh pattern in various shades of blue at the bottom. This pattern includes elements like the shanyrak (roof of a yurt) and kerege (yurt wall segments), intricately designed with geometrical shapes common in Kazakh art. The transition from the sky to the pattern symbolizes the word "РєУ©Рє" (blue) in a culturally relevant manner, blending the natural color with traditional Kazakh designs. The clear, vibrant blue of the sky is unmistakable and easily associates the color with its Kazakh name, within a context that honors Kazakhstan\'s heritage., digital art, clean educational illustration, square format, no text or words visible, bright and clear for language learning', 'model': 'dall-e-3', 'n': 1, 'quality': 'standard', 'size': '1024x1024'}, 'idempotency_key': 'stainless-python-retry-81b42837-08f1-4b50-8a7b-3c0ef8dfb38d'}
2025-08-08 16:17:35,593 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/images/generations
2025-08-08 16:17:35,593 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:17:35,593 - DEBUG - send_request_headers.complete
2025-08-08 16:17:35,593 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:17:35,593 - DEBUG - send_request_body.complete
2025-08-08 16:17:35,593 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:17:55,677 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 08 Aug 2025 11:17:56 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-gsctgi4tenlap3rmegivomgp'), (b'openai-project', b'proj_9NM8y20aOry0NJNndUcO4kJt'), (b'x-request-id', b'req_b097b74786c069600a25567bc16d205b'), (b'openai-processing-ms', b'19839'), (b'x-envoy-upstream-service-time', b'19843'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'96be9bb4df1ce4c3-AKX'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-08 16:17:55,677 - INFO - HTTP Request: POST https://api.openai.com/v1/images/generations "HTTP/1.1 200 OK"
2025-08-08 16:17:55,677 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:17:55,677 - DEBUG - receive_response_body.complete
2025-08-08 16:17:55,677 - DEBUG - response_closed.started
2025-08-08 16:17:55,677 - DEBUG - response_closed.complete
2025-08-08 16:17:55,677 - DEBUG - HTTP Response: POST https://api.openai.com/v1/images/generations "200 OK" Headers({'date': 'Fri, 08 Aug 2025 11:17:56 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'openai-version': '2020-10-01', 'openai-organization': 'user-gsctgi4tenlap3rmegivomgp', 'openai-project': 'proj_9NM8y20aOry0NJNndUcO4kJt', 'x-request-id': 'req_b097b74786c069600a25567bc16d205b', 'openai-processing-ms': '19839', 'x-envoy-upstream-service-time': '19843', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '96be9bb4df1ce4c3-AKX', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-08 16:17:55,677 - DEBUG - request_id: req_b097b74786c069600a25567bc16d205b
2025-08-08 16:17:55,677 - INFO - Generated image for 'РєУ©Рє': https://oaidalleapiprodscus.blob.core.windows.net/private/org-QA1vw2bLx4mJJ3gO8vDB8703/user-GscTgi4teNlaP3rMEgIVoMgP/img-MBswv28VDscOoixYwdSwyLH1.png?st=2025-08-08T10%3A17%3A55Z&se=2025-08-08T12%3A17%3A55Z&sp=r&sv=2024-08-04&sr=b&rscd=inline&rsct=image/png&skoid=8b33a531-2df9-46a3-bc02-d4b1430a422c&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2025-08-08T11%3A17%3A55Z&ske=2025-08-09T11%3A17%3A55Z&sks=b&skv=2024-08-04&sig=LIBIscxtbiMRBl18cF4O0esxOGUthnbRTJpf4xn/%2BTU%3D
2025-08-08 16:17:55,957 - DEBUG - connect_tcp.started host='oaidalleapiprodscus.blob.core.windows.net' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-08 16:17:56,158 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1786690>
2025-08-08 16:17:56,158 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000282C1B4FDA0> server_hostname='oaidalleapiprodscus.blob.core.windows.net' timeout=5.0
2025-08-08 16:17:56,567 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CBF290>
2025-08-08 16:17:56,567 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 16:17:56,567 - DEBUG - send_request_headers.complete
2025-08-08 16:17:56,567 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 16:17:56,567 - DEBUG - send_request_body.complete
2025-08-08 16:17:56,567 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 16:17:57,182 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Content-Length', b'2195823'), (b'Content-Type', b'image/png'), (b'Content-MD5', b'vZYt0yELQrvRx5r+XAL9uQ=='), (b'Last-Modified', b'Fri, 08 Aug 2025 11:17:55 GMT'), (b'Accept-Ranges', b'bytes'), (b'ETag', b'"0x8DDD66D392353CD"'), (b'Server', b'Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0'), (b'x-ms-request-id', b'df4d773e-301e-0085-5c56-0892f0000000'), (b'x-ms-version', b'2024-08-04'), (b'x-ms-creation-time', b'Fri, 08 Aug 2025 11:17:55 GMT'), (b'x-ms-lease-status', b'unlocked'), (b'x-ms-lease-state', b'available'), (b'x-ms-blob-type', b'BlockBlob'), (b'Content-Disposition', b'inline'), (b'x-ms-server-encrypted', b'true'), (b'x-ms-last-access-time', b'Fri, 08 Aug 2025 11:17:55 GMT'), (b'Date', b'Fri, 08 Aug 2025 11:17:56 GMT')])
2025-08-08 16:17:57,182 - INFO - HTTP Request: GET https://oaidalleapiprodscus.blob.core.windows.net/private/org-QA1vw2bLx4mJJ3gO8vDB8703/user-GscTgi4teNlaP3rMEgIVoMgP/img-MBswv28VDscOoixYwdSwyLH1.png?st=2025-08-08T10%3A17%3A55Z&se=2025-08-08T12%3A17%3A55Z&sp=r&sv=2024-08-04&sr=b&rscd=inline&rsct=image/png&skoid=8b33a531-2df9-46a3-bc02-d4b1430a422c&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2025-08-08T11%3A17%3A55Z&ske=2025-08-09T11%3A17%3A55Z&sks=b&skv=2024-08-04&sig=LIBIscxtbiMRBl18cF4O0esxOGUthnbRTJpf4xn/%2BTU%3D "HTTP/1.1 200 OK"
2025-08-08 16:17:57,182 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 16:18:00,470 - DEBUG - receive_response_body.complete
2025-08-08 16:18:00,471 - DEBUG - response_closed.started
2025-08-08 16:18:00,471 - DEBUG - response_closed.complete
2025-08-08 16:18:00,472 - DEBUG - STREAM b'IHDR' 16 13
2025-08-08 16:18:00,472 - DEBUG - STREAM b'caBX' 41 14086
2025-08-08 16:18:00,472 - DEBUG - b'caBX' 41 14086 (unknown)
2025-08-08 16:18:00,472 - DEBUG - STREAM b'IDAT' 14139 65536
2025-08-08 16:18:00,550 - INFO - Saved processed image for word 9 to ..\kazakh-learn-frontend\public\images\words\categories\4\9.png
2025-08-08 16:18:00,550 - DEBUG - close.started
2025-08-08 16:18:00,551 - DEBUG - close.complete
2025-08-08 16:18:00,551 - INFO - Converted path ..\kazakh-learn-frontend\public\images\words\categories\4\9.png to URL: /images/words/categories/4/9.png
2025-08-08 16:18:00,552 - DEBUG - close.started
2025-08-08 16:18:00,552 - DEBUG - close.complete
2025-08-08 16:18:00,552 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=30.0 socket_options=None
2025-08-08 16:18:00,818 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CD4B90>
2025-08-08 16:18:00,818 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:18:00,818 - DEBUG - send_request_headers.complete
2025-08-08 16:18:00,818 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:18:00,818 - DEBUG - send_request_body.complete
2025-08-08 16:18:00,818 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:18:00,867 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 201, b'Created', [(b'date', b'Fri, 08 Aug 2025 11:18:00 GMT'), (b'server', b'uvicorn'), (b'content-length', b'245'), (b'content-type', b'application/json')])
2025-08-08 16:18:00,867 - INFO - HTTP Request: POST http://localhost:8000/word-images/ "HTTP/1.1 201 Created"
2025-08-08 16:18:00,867 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:18:00,867 - DEBUG - receive_response_body.complete
2025-08-08 16:18:00,867 - DEBUG - response_closed.started
2025-08-08 16:18:00,867 - DEBUG - response_closed.complete
2025-08-08 16:18:00,867 - INFO - Created image record for word 9: /images/words/categories/4/9.png
2025-08-08 16:18:00,867 - INFO - SUCCESS: Successfully processed word 9: '???'
2025-08-08 16:18:00,867 - INFO - SUCCESS [2/10]: РєУ©Рє
2025-08-08 16:18:02,869 - INFO - [3/10] Processing: Р¶Р°СЃС‹Р» (ID: 10)
2025-08-08 16:18:02,869 - INFO - Processing word 10: '?????'
2025-08-08 16:18:02,869 - INFO - Category ID missing for word 10, fetching full details...
2025-08-08 16:18:02,869 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 16:18:02,869 - DEBUG - send_request_headers.complete
2025-08-08 16:18:02,869 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 16:18:02,869 - DEBUG - send_request_body.complete
2025-08-08 16:18:02,869 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 16:18:02,883 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 08 Aug 2025 11:18:01 GMT'), (b'server', b'uvicorn'), (b'content-length', b'1309'), (b'content-type', b'application/json')])
2025-08-08 16:18:02,883 - INFO - HTTP Request: GET http://localhost:8000/words/10 "HTTP/1.1 200 OK"
2025-08-08 16:18:02,883 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 16:18:02,883 - DEBUG - receive_response_body.complete
2025-08-08 16:18:02,883 - DEBUG - response_closed.started
2025-08-08 16:18:02,883 - DEBUG - response_closed.complete
2025-08-08 16:18:02,883 - DEBUG - Retrieved word details for ID 10: {'id': 10, 'kazakh_word': 'Р¶Р°СЃС‹Р»', 'kazakh_cyrillic': 'Р¶Р°СЃС‹Р»', 'created_at': '2025-06-18T11:08:16.106021', 'word_type': {'type_name': 'adjective', 'description': 'Adjective - describing word', 'is_active': True, 'id': 3, 'created_at': '2025-06-18T11:08:16.053456', 'translations': [{'id': 7, 'translated_name': 'Adjective', 'translated_description': 'Describes nouns and pronouns', 'language_code': 'en'}]}, 'category': {'category_name': 'colors', 'description': 'Colors and shades', 'is_active': True, 'id': 4, 'created_at': '2025-06-18T11:08:16.033863', 'translations': [{'id': 10, 'translated_name': 'Colors', 'translated_description': 'Colors and shades', 'language_code': 'en'}]}, 'difficulty_level': {'level_number': 1, 'level_name': 'beginner', 'description': 'Basic words for beginners', 'is_active': True, 'id': 1, 'created_at': '2025-06-18T11:08:16.064455', 'translations': [{'id': 1, 'translated_name': 'Beginner', 'translated_description': 'Basic words for beginners', 'language_code': 'en'}]}, 'translations': [{'translation': 'green', 'alternative_translations': None, 'id': 37, 'language_code': 'en', 'created_at': '2025-06-18T11:08:16.109020'}], 'pronunciations': [{'pronunciation': 'zhah-SUHL', 'pronunciation_system': 'IPA-simplified', 'audio_file_path': None, 'id': 10, 'language_code': 'en', 'created_at': '2025-06-18T11:08:16.109020'}], 'images': [], 'example_sentences': []}
2025-08-08 16:18:02,883 - INFO - Updated word data - category_id: 4, category: colors, translation: green
2025-08-08 16:18:02,886 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert at creating visual image prompts for educational Kazakh language learning materials. \nCreate a detailed, culturally appropriate image description that will help learners associate the Kazakh word with its meaning.\n\nREQUIREMENTS:\n1. NO TEXT or letters should appear in the image\n2. Focus on visual representation only\n3. Use traditional Kazakh/Central Asian cultural elements when appropriate\n4. Style should be clean, educational, and suitable for language learning\n5. 300x300px square format\n6. Bright, clear, and easily recognizable imagery\n7. Incorporate Kazakh cultural aesthetics (traditional patterns, colors, landscapes) when relevant\n\nReturn only a concise image description prompt, no explanations.'}, {'role': 'user', 'content': 'Kazakh word: "Р¶Р°СЃС‹Р»"\nEnglish meaning: "green"\nCategory: "colors"\n\nCreate a visual image prompt for this Kazakh word that shows its meaning without any text. Include Kazakh cultural elements where appropriate. If the meaning is unclear, create a generic educational illustration that could represent a Kazakh language concept.'}], 'model': 'gpt-4-turbo-preview', 'max_tokens': 200, 'temperature': 0.7}, 'idempotency_key': 'stainless-python-retry-a67de4af-a678-46be-a7d0-c58a34b46d82'}
2025-08-08 16:18:02,886 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-08 16:18:02,886 - DEBUG - close.started
2025-08-08 16:18:02,887 - DEBUG - close.complete
2025-08-08 16:18:02,887 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-08 16:18:03,143 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CE0950>
2025-08-08 16:18:03,143 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000282C15FB5C0> server_hostname='api.openai.com' timeout=5.0
2025-08-08 16:18:03,169 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CE07D0>
2025-08-08 16:18:03,169 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:18:03,169 - DEBUG - send_request_headers.complete
2025-08-08 16:18:03,169 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:18:03,169 - DEBUG - send_request_body.complete
2025-08-08 16:18:03,169 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:18:09,477 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 08 Aug 2025 11:18:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-gsctgi4tenlap3rmegivomgp'), (b'openai-processing-ms', b'6024'), (b'openai-project', b'proj_9NM8y20aOry0NJNndUcO4kJt'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'6053'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29733'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'534ms'), (b'x-request-id', b'req_a6279b5e55ea4ec3b2146821c9816681'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'96be9c613e93e4c8-AKX'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-08 16:18:09,477 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-08 16:18:09,477 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:18:09,477 - DEBUG - receive_response_body.complete
2025-08-08 16:18:09,477 - DEBUG - response_closed.started
2025-08-08 16:18:09,477 - DEBUG - response_closed.complete
2025-08-08 16:18:09,477 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 08 Aug 2025 11:18:10 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-gsctgi4tenlap3rmegivomgp', 'openai-processing-ms': '6024', 'openai-project': 'proj_9NM8y20aOry0NJNndUcO4kJt', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '6053', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29733', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '534ms', 'x-request-id': 'req_a6279b5e55ea4ec3b2146821c9816681', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '96be9c613e93e4c8-AKX', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-08 16:18:09,477 - DEBUG - request_id: req_a6279b5e55ea4ec3b2146821c9816681
2025-08-08 16:18:09,477 - DEBUG - Generated image prompt for 'Р¶Р°СЃС‹Р»': In the 300x300px square image, the scene is set in a vibrant, lush steppe under a clear sky, which dominates the upper quarter of the image with a bright green color reflecting the word "Р¶Р°СЃС‹Р»" (green). The steppe is dotted with traditional Kazakh elements: a couple of yurts with their bright, ornate patterns in the middle ground, a few grazing horses to the left, and scattered patches of tulips, Kazakhstan's national flower, blooming vibrantly in the foreground. The rest of the steppe is illustrated with various shades of green, showcasing different plants native to Kazakhstan, to emphasize the diversity of the color green in nature. The overall style is clean, with a focus on making the green color stand out through its prevalence in the flora and the depiction of a traditional, culturally rich Kazakh landscape.
2025-08-08 16:18:09,477 - DEBUG - Request options: {'method': 'post', 'url': '/images/generations', 'files': None, 'json_data': {'prompt': 'In the 300x300px square image, the scene is set in a vibrant, lush steppe under a clear sky, which dominates the upper quarter of the image with a bright green color reflecting the word "Р¶Р°СЃС‹Р»" (green). The steppe is dotted with traditional Kazakh elements: a couple of yurts with their bright, ornate patterns in the middle ground, a few grazing horses to the left, and scattered patches of tulips, Kazakhstan\'s national flower, blooming vibrantly in the foreground. The rest of the steppe is illustrated with various shades of green, showcasing different plants native to Kazakhstan, to emphasize the diversity of the color green in nature. The overall style is clean, with a focus on making the green color stand out through its prevalence in the flora and the depiction of a traditional, culturally rich Kazakh landscape., digital art, clean educational illustration, square format, no text or words visible, bright and clear for language learning', 'model': 'dall-e-3', 'n': 1, 'quality': 'standard', 'size': '1024x1024'}, 'idempotency_key': 'stainless-python-retry-20f1489e-9696-4b3c-9bec-443019df76db'}
2025-08-08 16:18:09,491 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/images/generations
2025-08-08 16:18:09,491 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:18:09,491 - DEBUG - send_request_headers.complete
2025-08-08 16:18:09,491 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:18:09,491 - DEBUG - send_request_body.complete
2025-08-08 16:18:09,491 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:18:34,592 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 08 Aug 2025 11:18:35 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-gsctgi4tenlap3rmegivomgp'), (b'openai-project', b'proj_9NM8y20aOry0NJNndUcO4kJt'), (b'x-request-id', b'req_c727163a688c648fb9b92881b78b97d9'), (b'openai-processing-ms', b'24858'), (b'x-envoy-upstream-service-time', b'24867'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'96be9c88bb15e4c8-AKX'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-08 16:18:34,592 - INFO - HTTP Request: POST https://api.openai.com/v1/images/generations "HTTP/1.1 200 OK"
2025-08-08 16:18:34,592 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:18:34,594 - DEBUG - receive_response_body.complete
2025-08-08 16:18:34,594 - DEBUG - response_closed.started
2025-08-08 16:18:34,594 - DEBUG - response_closed.complete
2025-08-08 16:18:34,594 - DEBUG - HTTP Response: POST https://api.openai.com/v1/images/generations "200 OK" Headers({'date': 'Fri, 08 Aug 2025 11:18:35 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'openai-version': '2020-10-01', 'openai-organization': 'user-gsctgi4tenlap3rmegivomgp', 'openai-project': 'proj_9NM8y20aOry0NJNndUcO4kJt', 'x-request-id': 'req_c727163a688c648fb9b92881b78b97d9', 'openai-processing-ms': '24858', 'x-envoy-upstream-service-time': '24867', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '96be9c88bb15e4c8-AKX', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-08 16:18:34,594 - DEBUG - request_id: req_c727163a688c648fb9b92881b78b97d9
2025-08-08 16:18:34,594 - INFO - Generated image for 'Р¶Р°СЃС‹Р»': https://oaidalleapiprodscus.blob.core.windows.net/private/org-QA1vw2bLx4mJJ3gO8vDB8703/user-GscTgi4teNlaP3rMEgIVoMgP/img-v2MeGCs5fqGZ8iabk6vhcmrR.png?st=2025-08-08T10%3A18%3A34Z&se=2025-08-08T12%3A18%3A34Z&sp=r&sv=2024-08-04&sr=b&rscd=inline&rsct=image/png&skoid=b1a0ae1f-618f-4548-84fd-8b16cacd5485&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2025-08-07T14%3A00%3A01Z&ske=2025-08-08T14%3A00%3A01Z&sks=b&skv=2024-08-04&sig=sm/PMurxwDKl/kwwcxmSlyOCFt1CaYtmxVfUHIxAaOs%3D
2025-08-08 16:18:34,877 - DEBUG - connect_tcp.started host='oaidalleapiprodscus.blob.core.windows.net' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-08 16:18:35,177 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CE94D0>
2025-08-08 16:18:35,177 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000282C1CB0A70> server_hostname='oaidalleapiprodscus.blob.core.windows.net' timeout=5.0
2025-08-08 16:18:35,574 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CE9410>
2025-08-08 16:18:35,574 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 16:18:35,574 - DEBUG - send_request_headers.complete
2025-08-08 16:18:35,574 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 16:18:35,574 - DEBUG - send_request_body.complete
2025-08-08 16:18:35,574 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 16:18:36,157 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Content-Length', b'1704183'), (b'Content-Type', b'image/png'), (b'Content-MD5', b'SVjCUOz4dhEOhLkjOeI3hw=='), (b'Last-Modified', b'Fri, 08 Aug 2025 11:18:34 GMT'), (b'Accept-Ranges', b'bytes'), (b'ETag', b'"0x8DDD66D50A88B6E"'), (b'Server', b'Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0'), (b'x-ms-request-id', b'ad80f745-601e-0021-0356-089b56000000'), (b'x-ms-version', b'2024-08-04'), (b'x-ms-creation-time', b'Fri, 08 Aug 2025 11:18:34 GMT'), (b'x-ms-lease-status', b'unlocked'), (b'x-ms-lease-state', b'available'), (b'x-ms-blob-type', b'BlockBlob'), (b'Content-Disposition', b'inline'), (b'x-ms-server-encrypted', b'true'), (b'x-ms-last-access-time', b'Fri, 08 Aug 2025 11:18:34 GMT'), (b'Date', b'Fri, 08 Aug 2025 11:18:35 GMT')])
2025-08-08 16:18:36,157 - INFO - HTTP Request: GET https://oaidalleapiprodscus.blob.core.windows.net/private/org-QA1vw2bLx4mJJ3gO8vDB8703/user-GscTgi4teNlaP3rMEgIVoMgP/img-v2MeGCs5fqGZ8iabk6vhcmrR.png?st=2025-08-08T10%3A18%3A34Z&se=2025-08-08T12%3A18%3A34Z&sp=r&sv=2024-08-04&sr=b&rscd=inline&rsct=image/png&skoid=b1a0ae1f-618f-4548-84fd-8b16cacd5485&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2025-08-07T14%3A00%3A01Z&ske=2025-08-08T14%3A00%3A01Z&sks=b&skv=2024-08-04&sig=sm/PMurxwDKl/kwwcxmSlyOCFt1CaYtmxVfUHIxAaOs%3D "HTTP/1.1 200 OK"
2025-08-08 16:18:36,157 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 16:18:37,507 - DEBUG - receive_response_body.complete
2025-08-08 16:18:37,507 - DEBUG - response_closed.started
2025-08-08 16:18:37,507 - DEBUG - response_closed.complete
2025-08-08 16:18:37,507 - DEBUG - STREAM b'IHDR' 16 13
2025-08-08 16:18:37,512 - DEBUG - STREAM b'caBX' 41 14086
2025-08-08 16:18:37,512 - DEBUG - b'caBX' 41 14086 (unknown)
2025-08-08 16:18:37,512 - DEBUG - STREAM b'IDAT' 14139 65536
2025-08-08 16:18:37,580 - INFO - Saved processed image for word 10 to ..\kazakh-learn-frontend\public\images\words\categories\4\10.png
2025-08-08 16:18:37,580 - DEBUG - close.started
2025-08-08 16:18:37,580 - DEBUG - close.complete
2025-08-08 16:18:37,580 - INFO - Converted path ..\kazakh-learn-frontend\public\images\words\categories\4\10.png to URL: /images/words/categories/4/10.png
2025-08-08 16:18:37,580 - DEBUG - close.started
2025-08-08 16:18:37,580 - DEBUG - close.complete
2025-08-08 16:18:37,580 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=30.0 socket_options=None
2025-08-08 16:18:37,838 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CE2F50>
2025-08-08 16:18:37,838 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:18:37,838 - DEBUG - send_request_headers.complete
2025-08-08 16:18:37,838 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:18:37,840 - DEBUG - send_request_body.complete
2025-08-08 16:18:37,840 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:18:37,847 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 201, b'Created', [(b'date', b'Fri, 08 Aug 2025 11:18:37 GMT'), (b'server', b'uvicorn'), (b'content-length', b'248'), (b'content-type', b'application/json')])
2025-08-08 16:18:37,847 - INFO - HTTP Request: POST http://localhost:8000/word-images/ "HTTP/1.1 201 Created"
2025-08-08 16:18:37,847 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:18:37,847 - DEBUG - receive_response_body.complete
2025-08-08 16:18:37,847 - DEBUG - response_closed.started
2025-08-08 16:18:37,847 - DEBUG - response_closed.complete
2025-08-08 16:18:37,847 - INFO - Created image record for word 10: /images/words/categories/4/10.png
2025-08-08 16:18:37,847 - INFO - SUCCESS: Successfully processed word 10: '?????'
2025-08-08 16:18:37,847 - INFO - SUCCESS [3/10]: Р¶Р°СЃС‹Р»
2025-08-08 16:18:39,861 - INFO - [4/10] Processing: РµС‚ (ID: 16)
2025-08-08 16:18:39,861 - INFO - Processing word 16: '??'
2025-08-08 16:18:39,861 - INFO - Category ID missing for word 16, fetching full details...
2025-08-08 16:18:39,862 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 16:18:39,862 - DEBUG - send_request_headers.complete
2025-08-08 16:18:39,862 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 16:18:39,862 - DEBUG - send_request_body.complete
2025-08-08 16:18:39,862 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 16:18:39,876 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 08 Aug 2025 11:18:39 GMT'), (b'server', b'uvicorn'), (b'content-length', b'1284'), (b'content-type', b'application/json')])
2025-08-08 16:18:39,877 - INFO - HTTP Request: GET http://localhost:8000/words/16 "HTTP/1.1 200 OK"
2025-08-08 16:18:39,877 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 16:18:39,877 - DEBUG - receive_response_body.complete
2025-08-08 16:18:39,877 - DEBUG - response_closed.started
2025-08-08 16:18:39,877 - DEBUG - response_closed.complete
2025-08-08 16:18:39,878 - DEBUG - Retrieved word details for ID 16: {'id': 16, 'kazakh_word': 'РµС‚', 'kazakh_cyrillic': 'РµС‚', 'created_at': '2025-06-18T11:08:16.118687', 'word_type': {'type_name': 'noun', 'description': 'Noun - person, place, thing', 'is_active': True, 'id': 1, 'created_at': '2025-06-18T11:08:16.048383', 'translations': [{'id': 1, 'translated_name': 'Noun', 'translated_description': 'Person, place, thing, or idea', 'language_code': 'en'}]}, 'category': {'category_name': 'food', 'description': 'Food and drinks', 'is_active': True, 'id': 2, 'created_at': '2025-06-18T11:08:16.027797', 'translations': [{'id': 4, 'translated_name': 'Food & Drinks', 'translated_description': 'Food and beverages', 'language_code': 'en'}]}, 'difficulty_level': {'level_number': 1, 'level_name': 'beginner', 'description': 'Basic words for beginners', 'is_active': True, 'id': 1, 'created_at': '2025-06-18T11:08:16.064455', 'translations': [{'id': 1, 'translated_name': 'Beginner', 'translated_description': 'Basic words for beginners', 'language_code': 'en'}]}, 'translations': [{'translation': 'meat', 'alternative_translations': None, 'id': 61, 'language_code': 'en', 'created_at': '2025-06-18T11:08:16.123688'}], 'pronunciations': [{'pronunciation': 'eht', 'pronunciation_system': 'IPA-simplified', 'audio_file_path': None, 'id': 16, 'language_code': 'en', 'created_at': '2025-06-18T11:08:16.122689'}], 'images': [], 'example_sentences': []}
2025-08-08 16:18:39,878 - INFO - Updated word data - category_id: 2, category: food, translation: meat
2025-08-08 16:18:39,879 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert at creating visual image prompts for educational Kazakh language learning materials. \nCreate a detailed, culturally appropriate image description that will help learners associate the Kazakh word with its meaning.\n\nREQUIREMENTS:\n1. NO TEXT or letters should appear in the image\n2. Focus on visual representation only\n3. Use traditional Kazakh/Central Asian cultural elements when appropriate\n4. Style should be clean, educational, and suitable for language learning\n5. 300x300px square format\n6. Bright, clear, and easily recognizable imagery\n7. Incorporate Kazakh cultural aesthetics (traditional patterns, colors, landscapes) when relevant\n\nReturn only a concise image description prompt, no explanations.'}, {'role': 'user', 'content': 'Kazakh word: "РµС‚"\nEnglish meaning: "meat"\nCategory: "food"\n\nCreate a visual image prompt for this Kazakh word that shows its meaning without any text. Include Kazakh cultural elements where appropriate. If the meaning is unclear, create a generic educational illustration that could represent a Kazakh language concept.'}], 'model': 'gpt-4-turbo-preview', 'max_tokens': 200, 'temperature': 0.7}, 'idempotency_key': 'stainless-python-retry-5cb1de2b-118a-414a-b1de-144272bb3715'}
2025-08-08 16:18:39,879 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-08 16:18:39,879 - DEBUG - close.started
2025-08-08 16:18:39,879 - DEBUG - close.complete
2025-08-08 16:18:39,879 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-08 16:18:39,967 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CBED90>
2025-08-08 16:18:39,967 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000282C15FB5C0> server_hostname='api.openai.com' timeout=5.0
2025-08-08 16:18:39,993 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CBF850>
2025-08-08 16:18:39,993 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:18:39,993 - DEBUG - send_request_headers.complete
2025-08-08 16:18:39,993 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:18:39,993 - DEBUG - send_request_body.complete
2025-08-08 16:18:39,993 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:18:46,632 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 08 Aug 2025 11:18:47 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-gsctgi4tenlap3rmegivomgp'), (b'openai-processing-ms', b'5834'), (b'openai-project', b'proj_9NM8y20aOry0NJNndUcO4kJt'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'6124'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29735'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'530ms'), (b'x-request-id', b'req_d1a4b15f993c49f2b754ddb17ccc630a'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'96be9d476e93e4bd-AKX'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-08 16:18:46,636 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-08 16:18:46,636 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:18:46,636 - DEBUG - receive_response_body.complete
2025-08-08 16:18:46,636 - DEBUG - response_closed.started
2025-08-08 16:18:46,636 - DEBUG - response_closed.complete
2025-08-08 16:18:46,636 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 08 Aug 2025 11:18:47 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-gsctgi4tenlap3rmegivomgp', 'openai-processing-ms': '5834', 'openai-project': 'proj_9NM8y20aOry0NJNndUcO4kJt', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '6124', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29735', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '530ms', 'x-request-id': 'req_d1a4b15f993c49f2b754ddb17ccc630a', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '96be9d476e93e4bd-AKX', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-08 16:18:46,637 - DEBUG - request_id: req_d1a4b15f993c49f2b754ddb17ccc630a
2025-08-08 16:18:46,637 - DEBUG - Generated image prompt for 'РµС‚': The image depicts a traditional Kazakh scene with a dastarkhan (a low table) spread out with various types of meat dishes central to Kazakh cuisine. In the center, there's a large platter of beshbarmak - thinly sliced boiled meat served over flat noodles, garnished with parsley for a pop of color. Around the beshbarmak, smaller plates hold kazy (horse meat sausage), shuzhuk (horse meat cold cuts), and perhaps a bowl of kuyrdak (a dish made from fried meat, liver, kidneys, and other offal), showing the variety of meat-based dishes in Kazakh culture. The background subtly incorporates the patterns of a Kazakh ornamental rug, adding a touch of traditional aesthetic. The setting is outdoors, under a wide, blue sky, hinting at the nomadic lifestyle of the Kazakh people. Bright, clear colors make the dishes stand out, inviting learners to associate the vivid imagery with the
2025-08-08 16:18:46,637 - DEBUG - Request options: {'method': 'post', 'url': '/images/generations', 'files': None, 'json_data': {'prompt': "The image depicts a traditional Kazakh scene with a dastarkhan (a low table) spread out with various types of meat dishes central to Kazakh cuisine. In the center, there's a large platter of beshbarmak - thinly sliced boiled meat served over flat noodles, garnished with parsley for a pop of color. Around the beshbarmak, smaller plates hold kazy (horse meat sausage), shuzhuk (horse meat cold cuts), and perhaps a bowl of kuyrdak (a dish made from fried meat, liver, kidneys, and other offal), showing the variety of meat-based dishes in Kazakh culture. The background subtly incorporates the patterns of a Kazakh ornamental rug, adding a touch of traditional aesthetic. The setting is outdoors, under a wide, blue sky, hinting at the nomadic lifestyle of the Kazakh people. Bright, clear colors make the dishes stand out, inviting learners to associate the vivid imagery with the, digital art, clean educational illustration, square format, no text or words visible, bright and clear for language learning", 'model': 'dall-e-3', 'n': 1, 'quality': 'standard', 'size': '1024x1024'}, 'idempotency_key': 'stainless-python-retry-bd0730a8-9aa9-4afb-999b-660170679b36'}
2025-08-08 16:18:46,637 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/images/generations
2025-08-08 16:18:46,637 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:18:46,637 - DEBUG - send_request_headers.complete
2025-08-08 16:18:46,637 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:18:46,637 - DEBUG - send_request_body.complete
2025-08-08 16:18:46,637 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:19:15,926 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 08 Aug 2025 11:19:16 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-gsctgi4tenlap3rmegivomgp'), (b'openai-project', b'proj_9NM8y20aOry0NJNndUcO4kJt'), (b'x-request-id', b'req_6dd907423bba09415b6bf9398d02f1f2'), (b'openai-processing-ms', b'29047'), (b'x-envoy-upstream-service-time', b'29053'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'96be9d70e836e4bd-AKX'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-08 16:19:15,926 - INFO - HTTP Request: POST https://api.openai.com/v1/images/generations "HTTP/1.1 200 OK"
2025-08-08 16:19:15,926 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:19:15,926 - DEBUG - receive_response_body.complete
2025-08-08 16:19:15,926 - DEBUG - response_closed.started
2025-08-08 16:19:15,926 - DEBUG - response_closed.complete
2025-08-08 16:19:15,926 - DEBUG - HTTP Response: POST https://api.openai.com/v1/images/generations "200 OK" Headers({'date': 'Fri, 08 Aug 2025 11:19:16 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'openai-version': '2020-10-01', 'openai-organization': 'user-gsctgi4tenlap3rmegivomgp', 'openai-project': 'proj_9NM8y20aOry0NJNndUcO4kJt', 'x-request-id': 'req_6dd907423bba09415b6bf9398d02f1f2', 'openai-processing-ms': '29047', 'x-envoy-upstream-service-time': '29053', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '96be9d70e836e4bd-AKX', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-08 16:19:15,926 - DEBUG - request_id: req_6dd907423bba09415b6bf9398d02f1f2
2025-08-08 16:19:15,926 - INFO - Generated image for 'РµС‚': https://oaidalleapiprodscus.blob.core.windows.net/private/org-QA1vw2bLx4mJJ3gO8vDB8703/user-GscTgi4teNlaP3rMEgIVoMgP/img-OeUH3UJL7XAUkv9vhrKlq3yO.png?st=2025-08-08T10%3A19%3A16Z&se=2025-08-08T12%3A19%3A16Z&sp=r&sv=2024-08-04&sr=b&rscd=inline&rsct=image/png&skoid=b1a0ae1f-618f-4548-84fd-8b16cacd5485&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2025-08-08T01%3A07%3A49Z&ske=2025-08-09T01%3A07%3A49Z&sks=b&skv=2024-08-04&sig=kfnadJuGTTdiw7B8ZWNZempIOJxTQ0eMYq24ANeZRtg%3D
2025-08-08 16:19:16,205 - DEBUG - connect_tcp.started host='oaidalleapiprodscus.blob.core.windows.net' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-08 16:19:16,418 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CD4690>
2025-08-08 16:19:16,418 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000282C1CB1010> server_hostname='oaidalleapiprodscus.blob.core.windows.net' timeout=5.0
2025-08-08 16:19:16,837 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CD6BD0>
2025-08-08 16:19:16,837 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 16:19:16,837 - DEBUG - send_request_headers.complete
2025-08-08 16:19:16,837 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 16:19:16,837 - DEBUG - send_request_body.complete
2025-08-08 16:19:16,840 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 16:19:17,467 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Content-Length', b'2480692'), (b'Content-Type', b'image/png'), (b'Content-MD5', b'OvyGaY4NUf7IGYZdbK+/Wg=='), (b'Last-Modified', b'Fri, 08 Aug 2025 11:19:16 GMT'), (b'Accept-Ranges', b'bytes'), (b'ETag', b'"0x8DDD66D694C6D15"'), (b'Server', b'Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0'), (b'x-ms-request-id', b'81aee527-e01e-00a9-4a56-087e5f000000'), (b'x-ms-version', b'2024-08-04'), (b'x-ms-creation-time', b'Fri, 08 Aug 2025 11:19:16 GMT'), (b'x-ms-lease-status', b'unlocked'), (b'x-ms-lease-state', b'available'), (b'x-ms-blob-type', b'BlockBlob'), (b'Content-Disposition', b'inline'), (b'x-ms-server-encrypted', b'true'), (b'x-ms-last-access-time', b'Fri, 08 Aug 2025 11:19:16 GMT'), (b'Date', b'Fri, 08 Aug 2025 11:19:16 GMT')])
2025-08-08 16:19:17,467 - INFO - HTTP Request: GET https://oaidalleapiprodscus.blob.core.windows.net/private/org-QA1vw2bLx4mJJ3gO8vDB8703/user-GscTgi4teNlaP3rMEgIVoMgP/img-OeUH3UJL7XAUkv9vhrKlq3yO.png?st=2025-08-08T10%3A19%3A16Z&se=2025-08-08T12%3A19%3A16Z&sp=r&sv=2024-08-04&sr=b&rscd=inline&rsct=image/png&skoid=b1a0ae1f-618f-4548-84fd-8b16cacd5485&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2025-08-08T01%3A07%3A49Z&ske=2025-08-09T01%3A07%3A49Z&sks=b&skv=2024-08-04&sig=kfnadJuGTTdiw7B8ZWNZempIOJxTQ0eMYq24ANeZRtg%3D "HTTP/1.1 200 OK"
2025-08-08 16:19:17,467 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 16:19:19,537 - DEBUG - receive_response_body.complete
2025-08-08 16:19:19,537 - DEBUG - response_closed.started
2025-08-08 16:19:19,537 - DEBUG - response_closed.complete
2025-08-08 16:19:19,537 - DEBUG - STREAM b'IHDR' 16 13
2025-08-08 16:19:19,537 - DEBUG - STREAM b'caBX' 41 14086
2025-08-08 16:19:19,537 - DEBUG - b'caBX' 41 14086 (unknown)
2025-08-08 16:19:19,537 - DEBUG - STREAM b'IDAT' 14139 65536
2025-08-08 16:19:19,607 - INFO - Saved processed image for word 16 to ..\kazakh-learn-frontend\public\images\words\categories\2\16.png
2025-08-08 16:19:19,607 - DEBUG - close.started
2025-08-08 16:19:19,607 - DEBUG - close.complete
2025-08-08 16:19:19,607 - INFO - Converted path ..\kazakh-learn-frontend\public\images\words\categories\2\16.png to URL: /images/words/categories/2/16.png
2025-08-08 16:19:19,607 - DEBUG - close.started
2025-08-08 16:19:19,607 - DEBUG - close.complete
2025-08-08 16:19:19,607 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=30.0 socket_options=None
2025-08-08 16:19:19,872 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CD4390>
2025-08-08 16:19:19,872 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:19:19,872 - DEBUG - send_request_headers.complete
2025-08-08 16:19:19,872 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:19:19,872 - DEBUG - send_request_body.complete
2025-08-08 16:19:19,872 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:19:19,878 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 201, b'Created', [(b'date', b'Fri, 08 Aug 2025 11:19:19 GMT'), (b'server', b'uvicorn'), (b'content-length', b'248'), (b'content-type', b'application/json')])
2025-08-08 16:19:19,878 - INFO - HTTP Request: POST http://localhost:8000/word-images/ "HTTP/1.1 201 Created"
2025-08-08 16:19:19,878 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:19:19,878 - DEBUG - receive_response_body.complete
2025-08-08 16:19:19,878 - DEBUG - response_closed.started
2025-08-08 16:19:19,878 - DEBUG - response_closed.complete
2025-08-08 16:19:19,878 - INFO - Created image record for word 16: /images/words/categories/2/16.png
2025-08-08 16:19:19,878 - INFO - SUCCESS: Successfully processed word 16: '??'
2025-08-08 16:19:19,878 - INFO - SUCCESS [4/10]: РµС‚
2025-08-08 16:19:21,891 - INFO - [5/10] Processing: СЃСѓ (ID: 17)
2025-08-08 16:19:21,891 - INFO - Processing word 17: '??'
2025-08-08 16:19:21,891 - INFO - Category ID missing for word 17, fetching full details...
2025-08-08 16:19:21,891 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 16:19:21,891 - DEBUG - send_request_headers.complete
2025-08-08 16:19:21,891 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 16:19:21,891 - DEBUG - send_request_body.complete
2025-08-08 16:19:21,891 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 16:19:21,902 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 08 Aug 2025 11:19:20 GMT'), (b'server', b'uvicorn'), (b'content-length', b'1285'), (b'content-type', b'application/json')])
2025-08-08 16:19:21,902 - INFO - HTTP Request: GET http://localhost:8000/words/17 "HTTP/1.1 200 OK"
2025-08-08 16:19:21,902 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 16:19:21,902 - DEBUG - receive_response_body.complete
2025-08-08 16:19:21,902 - DEBUG - response_closed.started
2025-08-08 16:19:21,902 - DEBUG - response_closed.complete
2025-08-08 16:19:21,902 - DEBUG - Retrieved word details for ID 17: {'id': 17, 'kazakh_word': 'СЃСѓ', 'kazakh_cyrillic': 'СЃСѓ', 'created_at': '2025-06-18T11:08:16.122689', 'word_type': {'type_name': 'noun', 'description': 'Noun - person, place, thing', 'is_active': True, 'id': 1, 'created_at': '2025-06-18T11:08:16.048383', 'translations': [{'id': 1, 'translated_name': 'Noun', 'translated_description': 'Person, place, thing, or idea', 'language_code': 'en'}]}, 'category': {'category_name': 'food', 'description': 'Food and drinks', 'is_active': True, 'id': 2, 'created_at': '2025-06-18T11:08:16.027797', 'translations': [{'id': 4, 'translated_name': 'Food & Drinks', 'translated_description': 'Food and beverages', 'language_code': 'en'}]}, 'difficulty_level': {'level_number': 1, 'level_name': 'beginner', 'description': 'Basic words for beginners', 'is_active': True, 'id': 1, 'created_at': '2025-06-18T11:08:16.064455', 'translations': [{'id': 1, 'translated_name': 'Beginner', 'translated_description': 'Basic words for beginners', 'language_code': 'en'}]}, 'translations': [{'translation': 'water', 'alternative_translations': None, 'id': 65, 'language_code': 'en', 'created_at': '2025-06-18T11:08:16.125689'}], 'pronunciations': [{'pronunciation': 'soo', 'pronunciation_system': 'IPA-simplified', 'audio_file_path': None, 'id': 17, 'language_code': 'en', 'created_at': '2025-06-18T11:08:16.125689'}], 'images': [], 'example_sentences': []}
2025-08-08 16:19:21,902 - INFO - Updated word data - category_id: 2, category: food, translation: water
2025-08-08 16:19:21,902 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert at creating visual image prompts for educational Kazakh language learning materials. \nCreate a detailed, culturally appropriate image description that will help learners associate the Kazakh word with its meaning.\n\nREQUIREMENTS:\n1. NO TEXT or letters should appear in the image\n2. Focus on visual representation only\n3. Use traditional Kazakh/Central Asian cultural elements when appropriate\n4. Style should be clean, educational, and suitable for language learning\n5. 300x300px square format\n6. Bright, clear, and easily recognizable imagery\n7. Incorporate Kazakh cultural aesthetics (traditional patterns, colors, landscapes) when relevant\n\nReturn only a concise image description prompt, no explanations.'}, {'role': 'user', 'content': 'Kazakh word: "СЃСѓ"\nEnglish meaning: "water"\nCategory: "food"\n\nCreate a visual image prompt for this Kazakh word that shows its meaning without any text. Include Kazakh cultural elements where appropriate. If the meaning is unclear, create a generic educational illustration that could represent a Kazakh language concept.'}], 'model': 'gpt-4-turbo-preview', 'max_tokens': 200, 'temperature': 0.7}, 'idempotency_key': 'stainless-python-retry-5a87cef3-32eb-48c7-ba1c-95ec2fbae2d5'}
2025-08-08 16:19:21,907 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-08 16:19:21,907 - DEBUG - close.started
2025-08-08 16:19:21,907 - DEBUG - close.complete
2025-08-08 16:19:21,907 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-08 16:19:21,970 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CE8090>
2025-08-08 16:19:21,970 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000282C15FB5C0> server_hostname='api.openai.com' timeout=5.0
2025-08-08 16:19:21,992 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CE8790>
2025-08-08 16:19:21,997 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:19:21,997 - DEBUG - send_request_headers.complete
2025-08-08 16:19:21,997 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:19:21,997 - DEBUG - send_request_body.complete
2025-08-08 16:19:21,997 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:19:28,820 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 08 Aug 2025 11:19:29 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-gsctgi4tenlap3rmegivomgp'), (b'openai-processing-ms', b'6537'), (b'openai-project', b'proj_9NM8y20aOry0NJNndUcO4kJt'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'6570'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29735'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'530ms'), (b'x-request-id', b'req_d07049ecd3b645a3a098b231492a61d5'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'96be9e4deeaae4c9-AKX'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-08 16:19:28,821 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-08 16:19:28,821 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:19:28,832 - DEBUG - receive_response_body.complete
2025-08-08 16:19:28,832 - DEBUG - response_closed.started
2025-08-08 16:19:28,832 - DEBUG - response_closed.complete
2025-08-08 16:19:28,832 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 08 Aug 2025 11:19:29 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-gsctgi4tenlap3rmegivomgp', 'openai-processing-ms': '6537', 'openai-project': 'proj_9NM8y20aOry0NJNndUcO4kJt', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '6570', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29735', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '530ms', 'x-request-id': 'req_d07049ecd3b645a3a098b231492a61d5', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '96be9e4deeaae4c9-AKX', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-08 16:19:28,832 - DEBUG - request_id: req_d07049ecd3b645a3a098b231492a61d5
2025-08-08 16:19:28,832 - DEBUG - Generated image prompt for 'СЃСѓ': In the center of the image, there's a traditional Kazakh silver bowl (kese) overflowing with clear, sparkling water. The bowl is placed on a dastarkhan (a low tablecloth) adorned with vibrant, geometric Kazakh patterns in shades of blue, green, and gold, symbolizing the richness of Kazakh culture. Surrounding the bowl are small elements of the Kazakh landscape, such as a steppe grass under a bright, clear sky and a silhouette of a yurt at the distant horizon, establishing a connection to the natural sources of water in Kazakhstan. The overall color palette is cool and refreshing, dominated by blues and whites, evoking a sense of purity and the essential nature of water (СЃСѓ) in life.
2025-08-08 16:19:28,832 - DEBUG - Request options: {'method': 'post', 'url': '/images/generations', 'files': None, 'json_data': {'prompt': "In the center of the image, there's a traditional Kazakh silver bowl (kese) overflowing with clear, sparkling water. The bowl is placed on a dastarkhan (a low tablecloth) adorned with vibrant, geometric Kazakh patterns in shades of blue, green, and gold, symbolizing the richness of Kazakh culture. Surrounding the bowl are small elements of the Kazakh landscape, such as a steppe grass under a bright, clear sky and a silhouette of a yurt at the distant horizon, establishing a connection to the natural sources of water in Kazakhstan. The overall color palette is cool and refreshing, dominated by blues and whites, evoking a sense of purity and the essential nature of water (СЃСѓ) in life., digital art, clean educational illustration, square format, no text or words visible, bright and clear for language learning", 'model': 'dall-e-3', 'n': 1, 'quality': 'standard', 'size': '1024x1024'}, 'idempotency_key': 'stainless-python-retry-cc821d8a-2787-42ba-badf-1a2f2e4c88d2'}
2025-08-08 16:19:28,832 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/images/generations
2025-08-08 16:19:28,832 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:19:28,836 - DEBUG - send_request_headers.complete
2025-08-08 16:19:28,836 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:19:28,836 - DEBUG - send_request_body.complete
2025-08-08 16:19:28,836 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:19:53,709 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 08 Aug 2025 11:19:54 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-gsctgi4tenlap3rmegivomgp'), (b'openai-project', b'proj_9NM8y20aOry0NJNndUcO4kJt'), (b'x-request-id', b'req_937350d7dee6060334f59ecab444b644'), (b'openai-processing-ms', b'24358'), (b'x-envoy-upstream-service-time', b'24364'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'96be9e78adf0e4c9-AKX'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-08 16:19:53,709 - INFO - HTTP Request: POST https://api.openai.com/v1/images/generations "HTTP/1.1 200 OK"
2025-08-08 16:19:53,709 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:19:53,710 - DEBUG - receive_response_body.complete
2025-08-08 16:19:53,710 - DEBUG - response_closed.started
2025-08-08 16:19:53,710 - DEBUG - response_closed.complete
2025-08-08 16:19:53,710 - DEBUG - HTTP Response: POST https://api.openai.com/v1/images/generations "200 OK" Headers({'date': 'Fri, 08 Aug 2025 11:19:54 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'openai-version': '2020-10-01', 'openai-organization': 'user-gsctgi4tenlap3rmegivomgp', 'openai-project': 'proj_9NM8y20aOry0NJNndUcO4kJt', 'x-request-id': 'req_937350d7dee6060334f59ecab444b644', 'openai-processing-ms': '24358', 'x-envoy-upstream-service-time': '24364', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '96be9e78adf0e4c9-AKX', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-08 16:19:53,710 - DEBUG - request_id: req_937350d7dee6060334f59ecab444b644
2025-08-08 16:19:53,711 - INFO - Generated image for 'СЃСѓ': https://oaidalleapiprodscus.blob.core.windows.net/private/org-QA1vw2bLx4mJJ3gO8vDB8703/user-GscTgi4teNlaP3rMEgIVoMgP/img-oR3Ndbo77A7TAuF6xOPPWJQd.png?st=2025-08-08T10%3A19%3A54Z&se=2025-08-08T12%3A19%3A54Z&sp=r&sv=2024-08-04&sr=b&rscd=inline&rsct=image/png&skoid=cc612491-d948-4d2e-9821-2683df3719f5&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2025-08-07T11%3A49%3A49Z&ske=2025-08-08T11%3A49%3A49Z&sks=b&skv=2024-08-04&sig=gW0Wpm2SG8u9s7FJSOKPpZyeRx01rf1X2prvcNkj7kg%3D
2025-08-08 16:19:54,079 - DEBUG - connect_tcp.started host='oaidalleapiprodscus.blob.core.windows.net' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-08 16:19:54,903 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C182E790>
2025-08-08 16:19:54,903 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000282C1CB0B90> server_hostname='oaidalleapiprodscus.blob.core.windows.net' timeout=5.0
2025-08-08 16:19:55,320 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1BFFA10>
2025-08-08 16:19:55,320 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 16:19:55,320 - DEBUG - send_request_headers.complete
2025-08-08 16:19:55,320 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 16:19:55,321 - DEBUG - send_request_body.complete
2025-08-08 16:19:55,321 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 16:19:55,940 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Content-Length', b'1607701'), (b'Content-Type', b'image/png'), (b'Content-MD5', b'NMkc/Au9FCPjY70m4hdMYg=='), (b'Last-Modified', b'Fri, 08 Aug 2025 11:19:54 GMT'), (b'Accept-Ranges', b'bytes'), (b'ETag', b'"0x8DDD66D7FD05134"'), (b'Server', b'Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0'), (b'x-ms-request-id', b'8dcea534-901e-00a3-2b56-08dae8000000'), (b'x-ms-version', b'2024-08-04'), (b'x-ms-creation-time', b'Fri, 08 Aug 2025 11:19:54 GMT'), (b'x-ms-lease-status', b'unlocked'), (b'x-ms-lease-state', b'available'), (b'x-ms-blob-type', b'BlockBlob'), (b'Content-Disposition', b'inline'), (b'x-ms-server-encrypted', b'true'), (b'x-ms-last-access-time', b'Fri, 08 Aug 2025 11:19:54 GMT'), (b'Date', b'Fri, 08 Aug 2025 11:19:55 GMT')])
2025-08-08 16:19:55,941 - INFO - HTTP Request: GET https://oaidalleapiprodscus.blob.core.windows.net/private/org-QA1vw2bLx4mJJ3gO8vDB8703/user-GscTgi4teNlaP3rMEgIVoMgP/img-oR3Ndbo77A7TAuF6xOPPWJQd.png?st=2025-08-08T10%3A19%3A54Z&se=2025-08-08T12%3A19%3A54Z&sp=r&sv=2024-08-04&sr=b&rscd=inline&rsct=image/png&skoid=cc612491-d948-4d2e-9821-2683df3719f5&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2025-08-07T11%3A49%3A49Z&ske=2025-08-08T11%3A49%3A49Z&sks=b&skv=2024-08-04&sig=gW0Wpm2SG8u9s7FJSOKPpZyeRx01rf1X2prvcNkj7kg%3D "HTTP/1.1 200 OK"
2025-08-08 16:19:55,941 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 16:19:57,779 - DEBUG - receive_response_body.complete
2025-08-08 16:19:57,779 - DEBUG - response_closed.started
2025-08-08 16:19:57,779 - DEBUG - response_closed.complete
2025-08-08 16:19:57,780 - DEBUG - STREAM b'IHDR' 16 13
2025-08-08 16:19:57,780 - DEBUG - STREAM b'caBX' 41 14086
2025-08-08 16:19:57,780 - DEBUG - b'caBX' 41 14086 (unknown)
2025-08-08 16:19:57,780 - DEBUG - STREAM b'IDAT' 14139 65536
2025-08-08 16:19:57,846 - INFO - Saved processed image for word 17 to ..\kazakh-learn-frontend\public\images\words\categories\2\17.png
2025-08-08 16:19:57,846 - DEBUG - close.started
2025-08-08 16:19:57,846 - DEBUG - close.complete
2025-08-08 16:19:57,846 - INFO - Converted path ..\kazakh-learn-frontend\public\images\words\categories\2\17.png to URL: /images/words/categories/2/17.png
2025-08-08 16:19:57,847 - DEBUG - close.started
2025-08-08 16:19:57,847 - DEBUG - close.complete
2025-08-08 16:19:57,847 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=30.0 socket_options=None
2025-08-08 16:19:58,109 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CD45D0>
2025-08-08 16:19:58,109 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:19:58,110 - DEBUG - send_request_headers.complete
2025-08-08 16:19:58,110 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:19:58,110 - DEBUG - send_request_body.complete
2025-08-08 16:19:58,110 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:19:58,118 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 201, b'Created', [(b'date', b'Fri, 08 Aug 2025 11:19:57 GMT'), (b'server', b'uvicorn'), (b'content-length', b'248'), (b'content-type', b'application/json')])
2025-08-08 16:19:58,118 - INFO - HTTP Request: POST http://localhost:8000/word-images/ "HTTP/1.1 201 Created"
2025-08-08 16:19:58,119 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:19:58,119 - DEBUG - receive_response_body.complete
2025-08-08 16:19:58,119 - DEBUG - response_closed.started
2025-08-08 16:19:58,119 - DEBUG - response_closed.complete
2025-08-08 16:19:58,119 - INFO - Created image record for word 17: /images/words/categories/2/17.png
2025-08-08 16:19:58,119 - INFO - SUCCESS: Successfully processed word 17: '??'
2025-08-08 16:19:58,119 - INFO - SUCCESS [5/10]: СЃСѓ
2025-08-08 16:20:00,119 - INFO - [6/10] Processing: РєУ©Р· (ID: 19)
2025-08-08 16:20:00,119 - INFO - Processing word 19: '???'
2025-08-08 16:20:00,119 - INFO - Category ID missing for word 19, fetching full details...
2025-08-08 16:20:00,119 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 16:20:00,119 - DEBUG - send_request_headers.complete
2025-08-08 16:20:00,119 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 16:20:00,119 - DEBUG - send_request_body.complete
2025-08-08 16:20:00,119 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 16:20:00,135 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 08 Aug 2025 11:19:59 GMT'), (b'server', b'uvicorn'), (b'content-length', b'1286'), (b'content-type', b'application/json')])
2025-08-08 16:20:00,135 - INFO - HTTP Request: GET http://localhost:8000/words/19 "HTTP/1.1 200 OK"
2025-08-08 16:20:00,135 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 16:20:00,136 - DEBUG - receive_response_body.complete
2025-08-08 16:20:00,136 - DEBUG - response_closed.started
2025-08-08 16:20:00,136 - DEBUG - response_closed.complete
2025-08-08 16:20:00,136 - DEBUG - Retrieved word details for ID 19: {'id': 19, 'kazakh_word': 'РєУ©Р·', 'kazakh_cyrillic': 'РєУ©Р·', 'created_at': '2025-06-18T11:08:16.127691', 'word_type': {'type_name': 'noun', 'description': 'Noun - person, place, thing', 'is_active': True, 'id': 1, 'created_at': '2025-06-18T11:08:16.048383', 'translations': [{'id': 1, 'translated_name': 'Noun', 'translated_description': 'Person, place, thing, or idea', 'language_code': 'en'}]}, 'category': {'category_name': 'body', 'description': 'Body parts', 'is_active': True, 'id': 6, 'created_at': '2025-06-18T11:08:16.038378', 'translations': [{'id': 16, 'translated_name': 'Body Parts', 'translated_description': 'Parts of the human body', 'language_code': 'en'}]}, 'difficulty_level': {'level_number': 1, 'level_name': 'beginner', 'description': 'Basic words for beginners', 'is_active': True, 'id': 1, 'created_at': '2025-06-18T11:08:16.064455', 'translations': [{'id': 1, 'translated_name': 'Beginner', 'translated_description': 'Basic words for beginners', 'language_code': 'en'}]}, 'translations': [{'translation': 'eye', 'alternative_translations': None, 'id': 73, 'language_code': 'en', 'created_at': '2025-06-18T11:08:16.130691'}], 'pronunciations': [{'pronunciation': 'kuhz', 'pronunciation_system': 'IPA-simplified', 'audio_file_path': None, 'id': 19, 'language_code': 'en', 'created_at': '2025-06-18T11:08:16.130691'}], 'images': [], 'example_sentences': []}
2025-08-08 16:20:00,136 - INFO - Updated word data - category_id: 6, category: body, translation: eye
2025-08-08 16:20:00,137 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert at creating visual image prompts for educational Kazakh language learning materials. \nCreate a detailed, culturally appropriate image description that will help learners associate the Kazakh word with its meaning.\n\nREQUIREMENTS:\n1. NO TEXT or letters should appear in the image\n2. Focus on visual representation only\n3. Use traditional Kazakh/Central Asian cultural elements when appropriate\n4. Style should be clean, educational, and suitable for language learning\n5. 300x300px square format\n6. Bright, clear, and easily recognizable imagery\n7. Incorporate Kazakh cultural aesthetics (traditional patterns, colors, landscapes) when relevant\n\nReturn only a concise image description prompt, no explanations.'}, {'role': 'user', 'content': 'Kazakh word: "РєУ©Р·"\nEnglish meaning: "eye"\nCategory: "body"\n\nCreate a visual image prompt for this Kazakh word that shows its meaning without any text. Include Kazakh cultural elements where appropriate. If the meaning is unclear, create a generic educational illustration that could represent a Kazakh language concept.'}], 'model': 'gpt-4-turbo-preview', 'max_tokens': 200, 'temperature': 0.7}, 'idempotency_key': 'stainless-python-retry-0cb1d489-af0a-4609-abbe-103f077ed64f'}
2025-08-08 16:20:00,137 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-08 16:20:00,137 - DEBUG - close.started
2025-08-08 16:20:00,138 - DEBUG - close.complete
2025-08-08 16:20:00,138 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-08 16:20:00,201 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CCE6D0>
2025-08-08 16:20:00,201 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000282C15FB5C0> server_hostname='api.openai.com' timeout=5.0
2025-08-08 16:20:00,229 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CCE010>
2025-08-08 16:20:00,229 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:20:00,229 - DEBUG - send_request_headers.complete
2025-08-08 16:20:00,229 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:20:00,229 - DEBUG - send_request_body.complete
2025-08-08 16:20:00,229 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:20:04,911 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 08 Aug 2025 11:20:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-gsctgi4tenlap3rmegivomgp'), (b'openai-processing-ms', b'4387'), (b'openai-project', b'proj_9NM8y20aOry0NJNndUcO4kJt'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'4423'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29735'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'530ms'), (b'x-request-id', b'req_a9ede7a4950c4fc0bc1cc165429fde80'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'96be9f3cda52e4c8-AKX'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-08 16:20:04,912 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-08 16:20:04,912 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:20:04,918 - DEBUG - receive_response_body.complete
2025-08-08 16:20:04,918 - DEBUG - response_closed.started
2025-08-08 16:20:04,919 - DEBUG - response_closed.complete
2025-08-08 16:20:04,919 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 08 Aug 2025 11:20:05 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-gsctgi4tenlap3rmegivomgp', 'openai-processing-ms': '4387', 'openai-project': 'proj_9NM8y20aOry0NJNndUcO4kJt', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '4423', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29735', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '530ms', 'x-request-id': 'req_a9ede7a4950c4fc0bc1cc165429fde80', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '96be9f3cda52e4c8-AKX', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-08 16:20:04,919 - DEBUG - request_id: req_a9ede7a4950c4fc0bc1cc165429fde80
2025-08-08 16:20:04,919 - DEBUG - Generated image prompt for 'РєУ©Р·': The image depicts a close-up of a traditional Kazakh nomad's face, focusing on one eye. The eye is detailed and expressive, surrounded by elements of traditional Kazakh attire, such as a colorful, patterned headscarf. The background subtly incorporates the silhouette of the vast Kazakh steppe under a clear, blue sky, hinting at the expansive view one might see through their "РєУ©Р·" (eye). The overall color scheme is vibrant, reflecting the rich colors often found in Kazakh textiles and nature.
2025-08-08 16:20:04,920 - DEBUG - Request options: {'method': 'post', 'url': '/images/generations', 'files': None, 'json_data': {'prompt': 'The image depicts a close-up of a traditional Kazakh nomad\'s face, focusing on one eye. The eye is detailed and expressive, surrounded by elements of traditional Kazakh attire, such as a colorful, patterned headscarf. The background subtly incorporates the silhouette of the vast Kazakh steppe under a clear, blue sky, hinting at the expansive view one might see through their "РєУ©Р·" (eye). The overall color scheme is vibrant, reflecting the rich colors often found in Kazakh textiles and nature., digital art, clean educational illustration, square format, no text or words visible, bright and clear for language learning', 'model': 'dall-e-3', 'n': 1, 'quality': 'standard', 'size': '1024x1024'}, 'idempotency_key': 'stainless-python-retry-b58506b9-c009-4ff8-8987-44922dcbbe07'}
2025-08-08 16:20:04,920 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/images/generations
2025-08-08 16:20:04,920 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:20:04,921 - DEBUG - send_request_headers.complete
2025-08-08 16:20:04,921 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:20:04,921 - DEBUG - send_request_body.complete
2025-08-08 16:20:04,921 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:20:18,258 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 08 Aug 2025 11:20:18 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-gsctgi4tenlap3rmegivomgp'), (b'openai-project', b'proj_9NM8y20aOry0NJNndUcO4kJt'), (b'x-request-id', b'req_f0bcc13e65c8161a6498e66e38e4b24c'), (b'openai-processing-ms', b'13088'), (b'x-envoy-upstream-service-time', b'13096'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'96be9f5a2c3de4c8-AKX'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-08 16:20:18,258 - INFO - HTTP Request: POST https://api.openai.com/v1/images/generations "HTTP/1.1 200 OK"
2025-08-08 16:20:18,259 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:20:18,259 - DEBUG - receive_response_body.complete
2025-08-08 16:20:18,259 - DEBUG - response_closed.started
2025-08-08 16:20:18,259 - DEBUG - response_closed.complete
2025-08-08 16:20:18,259 - DEBUG - HTTP Response: POST https://api.openai.com/v1/images/generations "200 OK" Headers({'date': 'Fri, 08 Aug 2025 11:20:18 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'openai-version': '2020-10-01', 'openai-organization': 'user-gsctgi4tenlap3rmegivomgp', 'openai-project': 'proj_9NM8y20aOry0NJNndUcO4kJt', 'x-request-id': 'req_f0bcc13e65c8161a6498e66e38e4b24c', 'openai-processing-ms': '13088', 'x-envoy-upstream-service-time': '13096', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '96be9f5a2c3de4c8-AKX', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-08 16:20:18,259 - DEBUG - request_id: req_f0bcc13e65c8161a6498e66e38e4b24c
2025-08-08 16:20:18,260 - INFO - Generated image for 'РєУ©Р·': https://oaidalleapiprodscus.blob.core.windows.net/private/org-QA1vw2bLx4mJJ3gO8vDB8703/user-GscTgi4teNlaP3rMEgIVoMgP/img-vibTJ6lKHbA0pXPTu4iApNbf.png?st=2025-08-08T10%3A20%3A18Z&se=2025-08-08T12%3A20%3A18Z&sp=r&sv=2024-08-04&sr=b&rscd=inline&rsct=image/png&skoid=cc612491-d948-4d2e-9821-2683df3719f5&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2025-08-08T02%3A53%3A00Z&ske=2025-08-09T02%3A53%3A00Z&sks=b&skv=2024-08-04&sig=h2ItWwEZWAg2wkd2uaEiEP6tDDvthhahRafz4bAnFr4%3D
2025-08-08 16:20:18,548 - DEBUG - connect_tcp.started host='oaidalleapiprodscus.blob.core.windows.net' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-08 16:20:18,746 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CE2450>
2025-08-08 16:20:18,746 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000282C1CB0E60> server_hostname='oaidalleapiprodscus.blob.core.windows.net' timeout=5.0
2025-08-08 16:20:19,145 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CE2E10>
2025-08-08 16:20:19,145 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 16:20:19,145 - DEBUG - send_request_headers.complete
2025-08-08 16:20:19,145 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 16:20:19,146 - DEBUG - send_request_body.complete
2025-08-08 16:20:19,146 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 16:20:19,745 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Content-Length', b'2256699'), (b'Content-Type', b'image/png'), (b'Content-MD5', b'x6MffNPyzCmtddA5ziHkwA=='), (b'Last-Modified', b'Fri, 08 Aug 2025 11:20:18 GMT'), (b'Accept-Ranges', b'bytes'), (b'ETag', b'"0x8DDD66D8E73C706"'), (b'Server', b'Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0'), (b'x-ms-request-id', b'a219a03e-c01e-0028-3c56-08de85000000'), (b'x-ms-version', b'2024-08-04'), (b'x-ms-creation-time', b'Fri, 08 Aug 2025 11:20:18 GMT'), (b'x-ms-lease-status', b'unlocked'), (b'x-ms-lease-state', b'available'), (b'x-ms-blob-type', b'BlockBlob'), (b'Content-Disposition', b'inline'), (b'x-ms-server-encrypted', b'true'), (b'x-ms-last-access-time', b'Fri, 08 Aug 2025 11:20:18 GMT'), (b'Date', b'Fri, 08 Aug 2025 11:20:19 GMT')])
2025-08-08 16:20:19,745 - INFO - HTTP Request: GET https://oaidalleapiprodscus.blob.core.windows.net/private/org-QA1vw2bLx4mJJ3gO8vDB8703/user-GscTgi4teNlaP3rMEgIVoMgP/img-vibTJ6lKHbA0pXPTu4iApNbf.png?st=2025-08-08T10%3A20%3A18Z&se=2025-08-08T12%3A20%3A18Z&sp=r&sv=2024-08-04&sr=b&rscd=inline&rsct=image/png&skoid=cc612491-d948-4d2e-9821-2683df3719f5&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2025-08-08T02%3A53%3A00Z&ske=2025-08-09T02%3A53%3A00Z&sks=b&skv=2024-08-04&sig=h2ItWwEZWAg2wkd2uaEiEP6tDDvthhahRafz4bAnFr4%3D "HTTP/1.1 200 OK"
2025-08-08 16:20:19,745 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 16:20:21,520 - DEBUG - receive_response_body.complete
2025-08-08 16:20:21,520 - DEBUG - response_closed.started
2025-08-08 16:20:21,520 - DEBUG - response_closed.complete
2025-08-08 16:20:21,522 - DEBUG - STREAM b'IHDR' 16 13
2025-08-08 16:20:21,522 - DEBUG - STREAM b'caBX' 41 14086
2025-08-08 16:20:21,522 - DEBUG - b'caBX' 41 14086 (unknown)
2025-08-08 16:20:21,522 - DEBUG - STREAM b'IDAT' 14139 65536
2025-08-08 16:20:21,592 - INFO - Saved processed image for word 19 to ..\kazakh-learn-frontend\public\images\words\categories\6\19.png
2025-08-08 16:20:21,592 - DEBUG - close.started
2025-08-08 16:20:21,592 - DEBUG - close.complete
2025-08-08 16:20:21,593 - INFO - Converted path ..\kazakh-learn-frontend\public\images\words\categories\6\19.png to URL: /images/words/categories/6/19.png
2025-08-08 16:20:21,593 - DEBUG - close.started
2025-08-08 16:20:21,593 - DEBUG - close.complete
2025-08-08 16:20:21,593 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=30.0 socket_options=None
2025-08-08 16:20:21,859 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CE3AD0>
2025-08-08 16:20:21,859 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:20:21,859 - DEBUG - send_request_headers.complete
2025-08-08 16:20:21,859 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:20:21,859 - DEBUG - send_request_body.complete
2025-08-08 16:20:21,859 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:20:21,868 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 201, b'Created', [(b'date', b'Fri, 08 Aug 2025 11:20:21 GMT'), (b'server', b'uvicorn'), (b'content-length', b'248'), (b'content-type', b'application/json')])
2025-08-08 16:20:21,869 - INFO - HTTP Request: POST http://localhost:8000/word-images/ "HTTP/1.1 201 Created"
2025-08-08 16:20:21,869 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:20:21,869 - DEBUG - receive_response_body.complete
2025-08-08 16:20:21,869 - DEBUG - response_closed.started
2025-08-08 16:20:21,869 - DEBUG - response_closed.complete
2025-08-08 16:20:21,869 - INFO - Created image record for word 19: /images/words/categories/6/19.png
2025-08-08 16:20:21,869 - INFO - SUCCESS: Successfully processed word 19: '???'
2025-08-08 16:20:21,869 - INFO - SUCCESS [6/10]: РєУ©Р·
2025-08-08 16:20:23,872 - INFO - [7/10] Processing: СЃТ±СЂ (ID: 25)
2025-08-08 16:20:23,872 - INFO - Processing word 25: '???'
2025-08-08 16:20:23,872 - INFO - Category ID missing for word 25, fetching full details...
2025-08-08 16:20:23,873 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 16:20:23,873 - DEBUG - send_request_headers.complete
2025-08-08 16:20:23,873 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 16:20:23,873 - DEBUG - send_request_body.complete
2025-08-08 16:20:23,873 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 16:20:23,889 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 08 Aug 2025 11:20:23 GMT'), (b'server', b'uvicorn'), (b'content-length', b'1137'), (b'content-type', b'application/json')])
2025-08-08 16:20:23,889 - INFO - HTTP Request: GET http://localhost:8000/words/25 "HTTP/1.1 200 OK"
2025-08-08 16:20:23,889 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 16:20:23,889 - DEBUG - receive_response_body.complete
2025-08-08 16:20:23,889 - DEBUG - response_closed.started
2025-08-08 16:20:23,889 - DEBUG - response_closed.complete
2025-08-08 16:20:23,889 - DEBUG - Retrieved word details for ID 25: {'id': 25, 'kazakh_word': 'СЃТ±СЂ', 'kazakh_cyrillic': 'СЃТ±СЂ', 'created_at': '2025-06-18T11:08:16.101019', 'word_type': {'type_name': 'adjective', 'description': 'Adjective - describing word', 'is_active': True, 'id': 3, 'created_at': '2025-06-18T11:08:16.053456', 'translations': [{'id': 7, 'translated_name': 'Adjective', 'translated_description': 'Describes nouns and pronouns', 'language_code': 'en'}]}, 'category': {'category_name': 'colors', 'description': 'Colors and shades', 'is_active': True, 'id': 4, 'created_at': '2025-06-18T11:08:16.033863', 'translations': [{'id': 10, 'translated_name': 'Colors', 'translated_description': 'Colors and shades', 'language_code': 'en'}]}, 'difficulty_level': {'level_number': 1, 'level_name': 'beginner', 'description': 'Basic words for beginners', 'is_active': True, 'id': 1, 'created_at': '2025-06-18T11:08:16.064455', 'translations': [{'id': 1, 'translated_name': 'Beginner', 'translated_description': 'Basic words for beginners', 'language_code': 'en'}]}, 'translations': [{'translation': 'grey', 'alternative_translations': [], 'id': 1024, 'language_code': 'en', 'created_at': '2025-08-06T07:47:07.809007'}], 'pronunciations': [], 'images': [], 'example_sentences': []}
2025-08-08 16:20:23,890 - INFO - Updated word data - category_id: 4, category: colors, translation: grey
2025-08-08 16:20:23,891 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert at creating visual image prompts for educational Kazakh language learning materials. \nCreate a detailed, culturally appropriate image description that will help learners associate the Kazakh word with its meaning.\n\nREQUIREMENTS:\n1. NO TEXT or letters should appear in the image\n2. Focus on visual representation only\n3. Use traditional Kazakh/Central Asian cultural elements when appropriate\n4. Style should be clean, educational, and suitable for language learning\n5. 300x300px square format\n6. Bright, clear, and easily recognizable imagery\n7. Incorporate Kazakh cultural aesthetics (traditional patterns, colors, landscapes) when relevant\n\nReturn only a concise image description prompt, no explanations.'}, {'role': 'user', 'content': 'Kazakh word: "СЃТ±СЂ"\nEnglish meaning: "grey"\nCategory: "colors"\n\nCreate a visual image prompt for this Kazakh word that shows its meaning without any text. Include Kazakh cultural elements where appropriate. If the meaning is unclear, create a generic educational illustration that could represent a Kazakh language concept.'}], 'model': 'gpt-4-turbo-preview', 'max_tokens': 200, 'temperature': 0.7}, 'idempotency_key': 'stainless-python-retry-55b62c6d-a0b3-48b4-a269-993cee8cdddb'}
2025-08-08 16:20:23,891 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-08 16:20:23,891 - DEBUG - close.started
2025-08-08 16:20:23,892 - DEBUG - close.complete
2025-08-08 16:20:23,892 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-08 16:20:23,910 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CF0350>
2025-08-08 16:20:23,911 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000282C15FB5C0> server_hostname='api.openai.com' timeout=5.0
2025-08-08 16:20:23,935 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CF1590>
2025-08-08 16:20:23,935 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:20:23,935 - DEBUG - send_request_headers.complete
2025-08-08 16:20:23,935 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:20:23,936 - DEBUG - send_request_body.complete
2025-08-08 16:20:23,936 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:20:30,154 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 08 Aug 2025 11:20:30 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-gsctgi4tenlap3rmegivomgp'), (b'openai-processing-ms', b'5935'), (b'openai-project', b'proj_9NM8y20aOry0NJNndUcO4kJt'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'5974'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29734'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'532ms'), (b'x-request-id', b'req_a3f7715338534bf282f91a75bc6f3f04'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'96be9fd10a4de4c7-AKX'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-08 16:20:30,154 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-08 16:20:30,155 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:20:30,159 - DEBUG - receive_response_body.complete
2025-08-08 16:20:30,159 - DEBUG - response_closed.started
2025-08-08 16:20:30,159 - DEBUG - response_closed.complete
2025-08-08 16:20:30,159 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 08 Aug 2025 11:20:30 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-gsctgi4tenlap3rmegivomgp', 'openai-processing-ms': '5935', 'openai-project': 'proj_9NM8y20aOry0NJNndUcO4kJt', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '5974', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29734', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '532ms', 'x-request-id': 'req_a3f7715338534bf282f91a75bc6f3f04', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '96be9fd10a4de4c7-AKX', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-08 16:20:30,159 - DEBUG - request_id: req_a3f7715338534bf282f91a75bc6f3f04
2025-08-08 16:20:30,159 - DEBUG - Generated image prompt for 'СЃТ±СЂ': In the center of the image, depict a traditional Kazakh felt carpet (shyrdak) with intricate patterns, primarily in varying shades of grey, to illustrate the color concept. Surround the carpet with a few smaller, culturally significant objects such as a grey felt Kazakh hat (kalpak) and a small stack of grey stones reminiscent of those found in the vast Kazakh steppes, to reinforce the color theme. The background should be a simple, light color to ensure the grey items stand out clearly. This setup not only conveys the color grey but also immerses the learner in a distinctly Kazakh cultural context.
2025-08-08 16:20:30,160 - DEBUG - Request options: {'method': 'post', 'url': '/images/generations', 'files': None, 'json_data': {'prompt': 'In the center of the image, depict a traditional Kazakh felt carpet (shyrdak) with intricate patterns, primarily in varying shades of grey, to illustrate the color concept. Surround the carpet with a few smaller, culturally significant objects such as a grey felt Kazakh hat (kalpak) and a small stack of grey stones reminiscent of those found in the vast Kazakh steppes, to reinforce the color theme. The background should be a simple, light color to ensure the grey items stand out clearly. This setup not only conveys the color grey but also immerses the learner in a distinctly Kazakh cultural context., digital art, clean educational illustration, square format, no text or words visible, bright and clear for language learning', 'model': 'dall-e-3', 'n': 1, 'quality': 'standard', 'size': '1024x1024'}, 'idempotency_key': 'stainless-python-retry-764611b8-7916-41cd-8b7b-336e7e833430'}
2025-08-08 16:20:30,160 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/images/generations
2025-08-08 16:20:30,160 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:20:30,161 - DEBUG - send_request_headers.complete
2025-08-08 16:20:30,161 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:20:30,161 - DEBUG - send_request_body.complete
2025-08-08 16:20:30,161 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:20:48,404 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 08 Aug 2025 11:20:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-gsctgi4tenlap3rmegivomgp'), (b'openai-project', b'proj_9NM8y20aOry0NJNndUcO4kJt'), (b'x-request-id', b'req_658fd4d3f9925bedd37ed97f50cbc489'), (b'openai-processing-ms', b'17999'), (b'x-envoy-upstream-service-time', b'18005'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'96be9ff7ee87e4c7-AKX'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-08 16:20:48,405 - INFO - HTTP Request: POST https://api.openai.com/v1/images/generations "HTTP/1.1 200 OK"
2025-08-08 16:20:48,405 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:20:48,405 - DEBUG - receive_response_body.complete
2025-08-08 16:20:48,405 - DEBUG - response_closed.started
2025-08-08 16:20:48,405 - DEBUG - response_closed.complete
2025-08-08 16:20:48,405 - DEBUG - HTTP Response: POST https://api.openai.com/v1/images/generations "200 OK" Headers({'date': 'Fri, 08 Aug 2025 11:20:48 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'openai-version': '2020-10-01', 'openai-organization': 'user-gsctgi4tenlap3rmegivomgp', 'openai-project': 'proj_9NM8y20aOry0NJNndUcO4kJt', 'x-request-id': 'req_658fd4d3f9925bedd37ed97f50cbc489', 'openai-processing-ms': '17999', 'x-envoy-upstream-service-time': '18005', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '96be9ff7ee87e4c7-AKX', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-08 16:20:48,406 - DEBUG - request_id: req_658fd4d3f9925bedd37ed97f50cbc489
2025-08-08 16:20:48,406 - INFO - Generated image for 'СЃТ±СЂ': https://oaidalleapiprodscus.blob.core.windows.net/private/org-QA1vw2bLx4mJJ3gO8vDB8703/user-GscTgi4teNlaP3rMEgIVoMgP/img-XrFxxFi5UeYaqOzXWyNWgD4q.png?st=2025-08-08T10%3A20%3A48Z&se=2025-08-08T12%3A20%3A48Z&sp=r&sv=2024-08-04&sr=b&rscd=inline&rsct=image/png&skoid=cc612491-d948-4d2e-9821-2683df3719f5&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2025-08-08T10%3A06%3A23Z&ske=2025-08-09T10%3A06%3A23Z&sks=b&skv=2024-08-04&sig=lS55GsG0wzoFBlKJQxrEt/ELCTdbd97u1t4VYbE2MOo%3D
2025-08-08 16:20:48,679 - DEBUG - connect_tcp.started host='oaidalleapiprodscus.blob.core.windows.net' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-08 16:20:48,893 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CCC390>
2025-08-08 16:20:48,893 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000282C1CB1520> server_hostname='oaidalleapiprodscus.blob.core.windows.net' timeout=5.0
2025-08-08 16:20:49,303 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CCECD0>
2025-08-08 16:20:49,303 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 16:20:49,303 - DEBUG - send_request_headers.complete
2025-08-08 16:20:49,303 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 16:20:49,303 - DEBUG - send_request_body.complete
2025-08-08 16:20:49,303 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 16:20:49,915 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Content-Length', b'1904447'), (b'Content-Type', b'image/png'), (b'Content-MD5', b'3xJFg0sQMJ6IojG7m/e8Lg=='), (b'Last-Modified', b'Fri, 08 Aug 2025 11:20:48 GMT'), (b'Accept-Ranges', b'bytes'), (b'ETag', b'"0x8DDD66DA06BD477"'), (b'Server', b'Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0'), (b'x-ms-request-id', b'99e0214a-701e-0060-2356-08c3b2000000'), (b'x-ms-version', b'2024-08-04'), (b'x-ms-creation-time', b'Fri, 08 Aug 2025 11:20:48 GMT'), (b'x-ms-lease-status', b'unlocked'), (b'x-ms-lease-state', b'available'), (b'x-ms-blob-type', b'BlockBlob'), (b'Content-Disposition', b'inline'), (b'x-ms-server-encrypted', b'true'), (b'x-ms-last-access-time', b'Fri, 08 Aug 2025 11:20:48 GMT'), (b'Date', b'Fri, 08 Aug 2025 11:20:49 GMT')])
2025-08-08 16:20:49,916 - INFO - HTTP Request: GET https://oaidalleapiprodscus.blob.core.windows.net/private/org-QA1vw2bLx4mJJ3gO8vDB8703/user-GscTgi4teNlaP3rMEgIVoMgP/img-XrFxxFi5UeYaqOzXWyNWgD4q.png?st=2025-08-08T10%3A20%3A48Z&se=2025-08-08T12%3A20%3A48Z&sp=r&sv=2024-08-04&sr=b&rscd=inline&rsct=image/png&skoid=cc612491-d948-4d2e-9821-2683df3719f5&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2025-08-08T10%3A06%3A23Z&ske=2025-08-09T10%3A06%3A23Z&sks=b&skv=2024-08-04&sig=lS55GsG0wzoFBlKJQxrEt/ELCTdbd97u1t4VYbE2MOo%3D "HTTP/1.1 200 OK"
2025-08-08 16:20:49,916 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 16:20:51,519 - DEBUG - receive_response_body.complete
2025-08-08 16:20:51,519 - DEBUG - response_closed.started
2025-08-08 16:20:51,519 - DEBUG - response_closed.complete
2025-08-08 16:20:51,520 - DEBUG - STREAM b'IHDR' 16 13
2025-08-08 16:20:51,520 - DEBUG - STREAM b'caBX' 41 14086
2025-08-08 16:20:51,520 - DEBUG - b'caBX' 41 14086 (unknown)
2025-08-08 16:20:51,520 - DEBUG - STREAM b'IDAT' 14139 65536
2025-08-08 16:20:51,592 - INFO - Saved processed image for word 25 to ..\kazakh-learn-frontend\public\images\words\categories\4\25.png
2025-08-08 16:20:51,592 - DEBUG - close.started
2025-08-08 16:20:51,592 - DEBUG - close.complete
2025-08-08 16:20:51,593 - INFO - Converted path ..\kazakh-learn-frontend\public\images\words\categories\4\25.png to URL: /images/words/categories/4/25.png
2025-08-08 16:20:51,593 - DEBUG - close.started
2025-08-08 16:20:51,593 - DEBUG - close.complete
2025-08-08 16:20:51,593 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=30.0 socket_options=None
2025-08-08 16:20:51,848 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CCC4D0>
2025-08-08 16:20:51,848 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:20:51,848 - DEBUG - send_request_headers.complete
2025-08-08 16:20:51,848 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:20:51,848 - DEBUG - send_request_body.complete
2025-08-08 16:20:51,848 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:20:51,857 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 201, b'Created', [(b'date', b'Fri, 08 Aug 2025 11:20:51 GMT'), (b'server', b'uvicorn'), (b'content-length', b'248'), (b'content-type', b'application/json')])
2025-08-08 16:20:51,857 - INFO - HTTP Request: POST http://localhost:8000/word-images/ "HTTP/1.1 201 Created"
2025-08-08 16:20:51,857 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:20:51,857 - DEBUG - receive_response_body.complete
2025-08-08 16:20:51,857 - DEBUG - response_closed.started
2025-08-08 16:20:51,858 - DEBUG - response_closed.complete
2025-08-08 16:20:51,858 - INFO - Created image record for word 25: /images/words/categories/4/25.png
2025-08-08 16:20:51,858 - INFO - SUCCESS: Successfully processed word 25: '???'
2025-08-08 16:20:51,858 - INFO - SUCCESS [7/10]: СЃТ±СЂ
2025-08-08 16:20:53,863 - INFO - [8/10] Processing: Р°Т›С€С‹Р» (ID: 26)
2025-08-08 16:20:53,863 - INFO - Processing word 26: '?????'
2025-08-08 16:20:53,863 - INFO - Category ID missing for word 26, fetching full details...
2025-08-08 16:20:53,863 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 16:20:53,864 - DEBUG - send_request_headers.complete
2025-08-08 16:20:53,864 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 16:20:53,864 - DEBUG - send_request_body.complete
2025-08-08 16:20:53,864 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 16:20:53,964 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 08 Aug 2025 11:20:53 GMT'), (b'server', b'uvicorn'), (b'content-length', b'1150'), (b'content-type', b'application/json')])
2025-08-08 16:20:53,964 - INFO - HTTP Request: GET http://localhost:8000/words/26 "HTTP/1.1 200 OK"
2025-08-08 16:20:53,965 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 16:20:53,965 - DEBUG - receive_response_body.complete
2025-08-08 16:20:53,965 - DEBUG - response_closed.started
2025-08-08 16:20:53,965 - DEBUG - response_closed.complete
2025-08-08 16:20:53,965 - DEBUG - Retrieved word details for ID 26: {'id': 26, 'kazakh_word': 'Р°Т›С€С‹Р»', 'kazakh_cyrillic': 'Р°Т›С€С‹Р»', 'created_at': '2025-06-18T11:08:16.101019', 'word_type': {'type_name': 'adjective', 'description': 'Adjective - describing word', 'is_active': True, 'id': 3, 'created_at': '2025-06-18T11:08:16.053456', 'translations': [{'id': 7, 'translated_name': 'Adjective', 'translated_description': 'Describes nouns and pronouns', 'language_code': 'en'}]}, 'category': {'category_name': 'colors', 'description': 'Colors and shades', 'is_active': True, 'id': 4, 'created_at': '2025-06-18T11:08:16.033863', 'translations': [{'id': 10, 'translated_name': 'Colors', 'translated_description': 'Colors and shades', 'language_code': 'en'}]}, 'difficulty_level': {'level_number': 1, 'level_name': 'beginner', 'description': 'Basic words for beginners', 'is_active': True, 'id': 1, 'created_at': '2025-06-18T11:08:16.064455', 'translations': [{'id': 1, 'translated_name': 'Beginner', 'translated_description': 'Basic words for beginners', 'language_code': 'en'}]}, 'translations': [{'translation': 'light', 'alternative_translations': ['pale'], 'id': 91, 'language_code': 'en', 'created_at': '2025-07-04T11:14:31.763110'}], 'pronunciations': [], 'images': [], 'example_sentences': []}
2025-08-08 16:20:53,965 - INFO - Updated word data - category_id: 4, category: colors, translation: light
2025-08-08 16:20:53,966 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert at creating visual image prompts for educational Kazakh language learning materials. \nCreate a detailed, culturally appropriate image description that will help learners associate the Kazakh word with its meaning.\n\nREQUIREMENTS:\n1. NO TEXT or letters should appear in the image\n2. Focus on visual representation only\n3. Use traditional Kazakh/Central Asian cultural elements when appropriate\n4. Style should be clean, educational, and suitable for language learning\n5. 300x300px square format\n6. Bright, clear, and easily recognizable imagery\n7. Incorporate Kazakh cultural aesthetics (traditional patterns, colors, landscapes) when relevant\n\nReturn only a concise image description prompt, no explanations.'}, {'role': 'user', 'content': 'Kazakh word: "Р°Т›С€С‹Р»"\nEnglish meaning: "light"\nCategory: "colors"\n\nCreate a visual image prompt for this Kazakh word that shows its meaning without any text. Include Kazakh cultural elements where appropriate. If the meaning is unclear, create a generic educational illustration that could represent a Kazakh language concept.'}], 'model': 'gpt-4-turbo-preview', 'max_tokens': 200, 'temperature': 0.7}, 'idempotency_key': 'stainless-python-retry-8a1dbd12-5733-44c9-961f-d5c3c58b5c0f'}
2025-08-08 16:20:53,968 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-08 16:20:53,968 - DEBUG - close.started
2025-08-08 16:20:53,968 - DEBUG - close.complete
2025-08-08 16:20:53,968 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-08 16:20:53,987 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CF23D0>
2025-08-08 16:20:53,987 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000282C15FB5C0> server_hostname='api.openai.com' timeout=5.0
2025-08-08 16:20:54,011 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CF2390>
2025-08-08 16:20:54,011 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:20:54,012 - DEBUG - send_request_headers.complete
2025-08-08 16:20:54,012 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:20:54,012 - DEBUG - send_request_body.complete
2025-08-08 16:20:54,012 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:21:02,531 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 08 Aug 2025 11:21:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-gsctgi4tenlap3rmegivomgp'), (b'openai-processing-ms', b'8184'), (b'openai-project', b'proj_9NM8y20aOry0NJNndUcO4kJt'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'8245'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29733'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'534ms'), (b'x-request-id', b'req_e244ba1adf05440ebdc1d77640cb7762'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'96bea08cf8a4e4c7-AKX'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-08 16:21:02,531 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-08 16:21:02,531 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:21:02,532 - DEBUG - receive_response_body.complete
2025-08-08 16:21:02,532 - DEBUG - response_closed.started
2025-08-08 16:21:02,532 - DEBUG - response_closed.complete
2025-08-08 16:21:02,532 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 08 Aug 2025 11:21:03 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-gsctgi4tenlap3rmegivomgp', 'openai-processing-ms': '8184', 'openai-project': 'proj_9NM8y20aOry0NJNndUcO4kJt', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '8245', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29733', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '534ms', 'x-request-id': 'req_e244ba1adf05440ebdc1d77640cb7762', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '96bea08cf8a4e4c7-AKX', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-08 16:21:02,532 - DEBUG - request_id: req_e244ba1adf05440ebdc1d77640cb7762
2025-08-08 16:21:02,532 - DEBUG - Generated image prompt for 'Р°Т›С€С‹Р»': Visual Image Description:

The image is divided into two sections horizontally. The upper half showcases the vast, open Kazakh steppe under a bright, clear sky at midday, highlighting the lightness of the day. The landscape is dotted with traditional Kazakh patterns along the edges of the image, incorporating shades of white and light blue to emphasize the concept of "light" (Р°Т›С€С‹Р»). 

In the lower half, a series of traditional Kazakh objects are depicted, all painted in light shades of blue, white, and cream, symbolizing the variety of the color "light" in the Kazakh palette. These objects include a felt yurt (portable house), a dombra (traditional musical instrument), and a saukele (a traditional woman's headdress), all intricately designed with light, ethereal patterns that resonate with the Kazakh cultural aesthetic.

The entire image is framed by a border of traditional Kazakh motifs, further embedding the cultural context.
2025-08-08 16:21:02,533 - DEBUG - Request options: {'method': 'post', 'url': '/images/generations', 'files': None, 'json_data': {'prompt': 'Visual Image Description:\n\nThe image is divided into two sections horizontally. The upper half showcases the vast, open Kazakh steppe under a bright, clear sky at midday, highlighting the lightness of the day. The landscape is dotted with traditional Kazakh patterns along the edges of the image, incorporating shades of white and light blue to emphasize the concept of "light" (Р°Т›С€С‹Р»). \n\nIn the lower half, a series of traditional Kazakh objects are depicted, all painted in light shades of blue, white, and cream, symbolizing the variety of the color "light" in the Kazakh palette. These objects include a felt yurt (portable house), a dombra (traditional musical instrument), and a saukele (a traditional woman\'s headdress), all intricately designed with light, ethereal patterns that resonate with the Kazakh cultural aesthetic.\n\nThe entire image is framed by a border of traditional Kazakh motifs, further embedding the cultural context., digital art, clean educational illustration, square format, no text or words visible, bright and clear for language learning', 'model': 'dall-e-3', 'n': 1, 'quality': 'standard', 'size': '1024x1024'}, 'idempotency_key': 'stainless-python-retry-4b7c0e63-9bf4-4d3e-aede-666f7d6dc071'}
2025-08-08 16:21:02,533 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/images/generations
2025-08-08 16:21:02,533 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:21:02,534 - DEBUG - send_request_headers.complete
2025-08-08 16:21:02,534 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:21:02,534 - DEBUG - send_request_body.complete
2025-08-08 16:21:02,534 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:21:21,770 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 08 Aug 2025 11:21:22 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-gsctgi4tenlap3rmegivomgp'), (b'openai-project', b'proj_9NM8y20aOry0NJNndUcO4kJt'), (b'x-request-id', b'req_d27addea5187b2e748bb9f791d6cdcda'), (b'openai-processing-ms', b'18981'), (b'x-envoy-upstream-service-time', b'18994'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'96bea0c249d7e4c7-AKX'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-08 16:21:21,770 - INFO - HTTP Request: POST https://api.openai.com/v1/images/generations "HTTP/1.1 200 OK"
2025-08-08 16:21:21,771 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:21:21,771 - DEBUG - receive_response_body.complete
2025-08-08 16:21:21,771 - DEBUG - response_closed.started
2025-08-08 16:21:21,771 - DEBUG - response_closed.complete
2025-08-08 16:21:21,771 - DEBUG - HTTP Response: POST https://api.openai.com/v1/images/generations "200 OK" Headers({'date': 'Fri, 08 Aug 2025 11:21:22 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'openai-version': '2020-10-01', 'openai-organization': 'user-gsctgi4tenlap3rmegivomgp', 'openai-project': 'proj_9NM8y20aOry0NJNndUcO4kJt', 'x-request-id': 'req_d27addea5187b2e748bb9f791d6cdcda', 'openai-processing-ms': '18981', 'x-envoy-upstream-service-time': '18994', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '96bea0c249d7e4c7-AKX', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-08 16:21:21,772 - DEBUG - request_id: req_d27addea5187b2e748bb9f791d6cdcda
2025-08-08 16:21:21,772 - INFO - Generated image for 'Р°Т›С€С‹Р»': https://oaidalleapiprodscus.blob.core.windows.net/private/org-QA1vw2bLx4mJJ3gO8vDB8703/user-GscTgi4teNlaP3rMEgIVoMgP/img-uWV5CStEAVPZBa5PdkREx9Ww.png?st=2025-08-08T10%3A21%3A22Z&se=2025-08-08T12%3A21%3A22Z&sp=r&sv=2024-08-04&sr=b&rscd=inline&rsct=image/png&skoid=cc612491-d948-4d2e-9821-2683df3719f5&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2025-08-08T06%3A21%3A00Z&ske=2025-08-09T06%3A21%3A00Z&sks=b&skv=2024-08-04&sig=qOPZsxk1wWQgfhfu55FYwPBbMBPXQcvvmvawprVTd2Q%3D
2025-08-08 16:21:22,042 - DEBUG - connect_tcp.started host='oaidalleapiprodscus.blob.core.windows.net' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-08 16:21:22,768 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CE3710>
2025-08-08 16:21:22,768 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000282C1CB1400> server_hostname='oaidalleapiprodscus.blob.core.windows.net' timeout=5.0
2025-08-08 16:21:23,199 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CE0890>
2025-08-08 16:21:23,199 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 16:21:23,200 - DEBUG - send_request_headers.complete
2025-08-08 16:21:23,200 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 16:21:23,200 - DEBUG - send_request_body.complete
2025-08-08 16:21:23,200 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 16:21:23,822 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Content-Length', b'1918741'), (b'Content-Type', b'image/png'), (b'Content-MD5', b'/yREA9cTlsTVJAqZmz88Aw=='), (b'Last-Modified', b'Fri, 08 Aug 2025 11:21:22 GMT'), (b'Accept-Ranges', b'bytes'), (b'ETag', b'"0x8DDD66DB44B894B"'), (b'Server', b'Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0'), (b'x-ms-request-id', b'6ab3d551-901e-008c-2556-08d723000000'), (b'x-ms-version', b'2024-08-04'), (b'x-ms-creation-time', b'Fri, 08 Aug 2025 11:21:22 GMT'), (b'x-ms-lease-status', b'unlocked'), (b'x-ms-lease-state', b'available'), (b'x-ms-blob-type', b'BlockBlob'), (b'Content-Disposition', b'inline'), (b'x-ms-server-encrypted', b'true'), (b'x-ms-last-access-time', b'Fri, 08 Aug 2025 11:21:22 GMT'), (b'Date', b'Fri, 08 Aug 2025 11:21:23 GMT')])
2025-08-08 16:21:23,822 - INFO - HTTP Request: GET https://oaidalleapiprodscus.blob.core.windows.net/private/org-QA1vw2bLx4mJJ3gO8vDB8703/user-GscTgi4teNlaP3rMEgIVoMgP/img-uWV5CStEAVPZBa5PdkREx9Ww.png?st=2025-08-08T10%3A21%3A22Z&se=2025-08-08T12%3A21%3A22Z&sp=r&sv=2024-08-04&sr=b&rscd=inline&rsct=image/png&skoid=cc612491-d948-4d2e-9821-2683df3719f5&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2025-08-08T06%3A21%3A00Z&ske=2025-08-09T06%3A21%3A00Z&sks=b&skv=2024-08-04&sig=qOPZsxk1wWQgfhfu55FYwPBbMBPXQcvvmvawprVTd2Q%3D "HTTP/1.1 200 OK"
2025-08-08 16:21:23,822 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 16:21:25,452 - DEBUG - receive_response_body.complete
2025-08-08 16:21:25,452 - DEBUG - response_closed.started
2025-08-08 16:21:25,452 - DEBUG - response_closed.complete
2025-08-08 16:21:25,454 - DEBUG - STREAM b'IHDR' 16 13
2025-08-08 16:21:25,454 - DEBUG - STREAM b'caBX' 41 14086
2025-08-08 16:21:25,454 - DEBUG - b'caBX' 41 14086 (unknown)
2025-08-08 16:21:25,454 - DEBUG - STREAM b'IDAT' 14139 65536
2025-08-08 16:21:25,530 - INFO - Saved processed image for word 26 to ..\kazakh-learn-frontend\public\images\words\categories\4\26.png
2025-08-08 16:21:25,530 - DEBUG - close.started
2025-08-08 16:21:25,530 - DEBUG - close.complete
2025-08-08 16:21:25,530 - INFO - Converted path ..\kazakh-learn-frontend\public\images\words\categories\4\26.png to URL: /images/words/categories/4/26.png
2025-08-08 16:21:25,531 - DEBUG - close.started
2025-08-08 16:21:25,531 - DEBUG - close.complete
2025-08-08 16:21:25,531 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=30.0 socket_options=None
2025-08-08 16:21:25,795 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CE3110>
2025-08-08 16:21:25,795 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:21:25,795 - DEBUG - send_request_headers.complete
2025-08-08 16:21:25,795 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:21:25,795 - DEBUG - send_request_body.complete
2025-08-08 16:21:25,796 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:21:25,804 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 201, b'Created', [(b'date', b'Fri, 08 Aug 2025 11:21:25 GMT'), (b'server', b'uvicorn'), (b'content-length', b'248'), (b'content-type', b'application/json')])
2025-08-08 16:21:25,804 - INFO - HTTP Request: POST http://localhost:8000/word-images/ "HTTP/1.1 201 Created"
2025-08-08 16:21:25,804 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:21:25,804 - DEBUG - receive_response_body.complete
2025-08-08 16:21:25,805 - DEBUG - response_closed.started
2025-08-08 16:21:25,805 - DEBUG - response_closed.complete
2025-08-08 16:21:25,805 - INFO - Created image record for word 26: /images/words/categories/4/26.png
2025-08-08 16:21:25,805 - INFO - SUCCESS: Successfully processed word 26: '?????'
2025-08-08 16:21:25,805 - INFO - SUCCESS [8/10]: Р°Т›С€С‹Р»
2025-08-08 16:21:27,810 - INFO - [9/10] Processing: СЃР°СЂТ“С‹С€ (ID: 31)
2025-08-08 16:21:27,810 - INFO - Processing word 31: '??????'
2025-08-08 16:21:27,810 - INFO - Category ID missing for word 31, fetching full details...
2025-08-08 16:21:27,810 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 16:21:27,811 - DEBUG - send_request_headers.complete
2025-08-08 16:21:27,811 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 16:21:27,811 - DEBUG - send_request_body.complete
2025-08-08 16:21:27,811 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 16:21:27,824 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 08 Aug 2025 11:21:27 GMT'), (b'server', b'uvicorn'), (b'content-length', b'1154'), (b'content-type', b'application/json')])
2025-08-08 16:21:27,825 - INFO - HTTP Request: GET http://localhost:8000/words/31 "HTTP/1.1 200 OK"
2025-08-08 16:21:27,825 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 16:21:27,826 - DEBUG - receive_response_body.complete
2025-08-08 16:21:27,826 - DEBUG - response_closed.started
2025-08-08 16:21:27,826 - DEBUG - response_closed.complete
2025-08-08 16:21:27,826 - DEBUG - Retrieved word details for ID 31: {'id': 31, 'kazakh_word': 'СЃР°СЂТ“С‹С€', 'kazakh_cyrillic': 'СЃР°СЂТ“С‹С€', 'created_at': '2025-06-18T11:08:16.101019', 'word_type': {'type_name': 'adjective', 'description': 'Adjective - describing word', 'is_active': True, 'id': 3, 'created_at': '2025-06-18T11:08:16.053456', 'translations': [{'id': 7, 'translated_name': 'Adjective', 'translated_description': 'Describes nouns and pronouns', 'language_code': 'en'}]}, 'category': {'category_name': 'colors', 'description': 'Colors and shades', 'is_active': True, 'id': 4, 'created_at': '2025-06-18T11:08:16.033863', 'translations': [{'id': 10, 'translated_name': 'Colors', 'translated_description': 'Colors and shades', 'language_code': 'en'}]}, 'difficulty_level': {'level_number': 1, 'level_name': 'beginner', 'description': 'Basic words for beginners', 'is_active': True, 'id': 1, 'created_at': '2025-06-18T11:08:16.064455', 'translations': [{'id': 1, 'translated_name': 'Beginner', 'translated_description': 'Basic words for beginners', 'language_code': 'en'}]}, 'translations': [{'translation': 'yellowish', 'alternative_translations': [], 'id': 1066, 'language_code': 'en', 'created_at': '2025-08-06T07:54:34.148159'}], 'pronunciations': [], 'images': [], 'example_sentences': []}
2025-08-08 16:21:27,826 - INFO - Updated word data - category_id: 4, category: colors, translation: yellowish
2025-08-08 16:21:27,827 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert at creating visual image prompts for educational Kazakh language learning materials. \nCreate a detailed, culturally appropriate image description that will help learners associate the Kazakh word with its meaning.\n\nREQUIREMENTS:\n1. NO TEXT or letters should appear in the image\n2. Focus on visual representation only\n3. Use traditional Kazakh/Central Asian cultural elements when appropriate\n4. Style should be clean, educational, and suitable for language learning\n5. 300x300px square format\n6. Bright, clear, and easily recognizable imagery\n7. Incorporate Kazakh cultural aesthetics (traditional patterns, colors, landscapes) when relevant\n\nReturn only a concise image description prompt, no explanations.'}, {'role': 'user', 'content': 'Kazakh word: "СЃР°СЂТ“С‹С€"\nEnglish meaning: "yellowish"\nCategory: "colors"\n\nCreate a visual image prompt for this Kazakh word that shows its meaning without any text. Include Kazakh cultural elements where appropriate. If the meaning is unclear, create a generic educational illustration that could represent a Kazakh language concept.'}], 'model': 'gpt-4-turbo-preview', 'max_tokens': 200, 'temperature': 0.7}, 'idempotency_key': 'stainless-python-retry-4bbe99d2-5794-4988-9fee-4fbeac5d603a'}
2025-08-08 16:21:27,827 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-08 16:21:27,828 - DEBUG - close.started
2025-08-08 16:21:27,828 - DEBUG - close.complete
2025-08-08 16:21:27,828 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-08 16:21:27,890 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CE8E10>
2025-08-08 16:21:27,890 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000282C15FB5C0> server_hostname='api.openai.com' timeout=5.0
2025-08-08 16:21:27,917 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CE8D10>
2025-08-08 16:21:27,917 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:21:27,917 - DEBUG - send_request_headers.complete
2025-08-08 16:21:27,917 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:21:27,918 - DEBUG - send_request_body.complete
2025-08-08 16:21:27,918 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:21:36,289 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 08 Aug 2025 11:21:36 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-gsctgi4tenlap3rmegivomgp'), (b'openai-processing-ms', b'8080'), (b'openai-project', b'proj_9NM8y20aOry0NJNndUcO4kJt'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'8099'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29731'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'538ms'), (b'x-request-id', b'req_b2db9f21cfb24a81998ac307902e307d'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'96bea160ee40e4c2-AKX'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-08 16:21:36,289 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-08 16:21:36,289 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:21:36,291 - DEBUG - receive_response_body.complete
2025-08-08 16:21:36,291 - DEBUG - response_closed.started
2025-08-08 16:21:36,291 - DEBUG - response_closed.complete
2025-08-08 16:21:36,291 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 08 Aug 2025 11:21:36 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-gsctgi4tenlap3rmegivomgp', 'openai-processing-ms': '8080', 'openai-project': 'proj_9NM8y20aOry0NJNndUcO4kJt', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '8099', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29731', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '538ms', 'x-request-id': 'req_b2db9f21cfb24a81998ac307902e307d', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '96bea160ee40e4c2-AKX', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-08 16:21:36,291 - DEBUG - request_id: req_b2db9f21cfb24a81998ac307902e307d
2025-08-08 16:21:36,292 - DEBUG - Generated image prompt for 'СЃР°СЂТ“С‹С€': Image Description:

The image features a picturesque scene of the vast Kazakh steppe at sunset, with the sky painted in a soft, yellowish hue, embodying the word "СЃР°СЂТ“С‹С€." In the foreground, a traditional Kazakh yurt, its felt cover tinged with the same yellowish glow from the sunset, stands prominently. Around the yurt, a few camels and horses graze peacefully, their coats reflecting the warm, yellowish light, adding to the overall theme. The steppe is dotted with wildflowers and grasses that also carry hints of yellowish tones, seamlessly integrating the color into the natural landscape. The horizon is adorned with traditional Kazakh patterns, subtly woven into the sky's yellowish gradient, celebrating the rich cultural heritage. The entire scene is framed within a clean, 300x300px square, designed to be bright and clear, making the imagery easily recognizable and educational, with a focus on illustrating the meaning of "СЃР°СЂ
2025-08-08 16:21:36,292 - DEBUG - Request options: {'method': 'post', 'url': '/images/generations', 'files': None, 'json_data': {'prompt': 'Image Description:\n\nThe image features a picturesque scene of the vast Kazakh steppe at sunset, with the sky painted in a soft, yellowish hue, embodying the word "СЃР°СЂТ“С‹С€." In the foreground, a traditional Kazakh yurt, its felt cover tinged with the same yellowish glow from the sunset, stands prominently. Around the yurt, a few camels and horses graze peacefully, their coats reflecting the warm, yellowish light, adding to the overall theme. The steppe is dotted with wildflowers and grasses that also carry hints of yellowish tones, seamlessly integrating the color into the natural landscape. The horizon is adorned with traditional Kazakh patterns, subtly woven into the sky\'s yellowish gradient, celebrating the rich cultural heritage. The entire scene is framed within a clean, 300x300px square, designed to be bright and clear, making the imagery easily recognizable and educational, with a focus on illustrating the meaning of "СЃР°СЂ, digital art, clean educational illustration, square format, no text or words visible, bright and clear for language learning', 'model': 'dall-e-3', 'n': 1, 'quality': 'standard', 'size': '1024x1024'}, 'idempotency_key': 'stainless-python-retry-66210917-9395-40b8-8345-a40a0bce0dc9'}
2025-08-08 16:21:36,293 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/images/generations
2025-08-08 16:21:36,293 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:21:36,293 - DEBUG - send_request_headers.complete
2025-08-08 16:21:36,293 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:21:36,293 - DEBUG - send_request_body.complete
2025-08-08 16:21:36,293 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:22:00,841 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 08 Aug 2025 11:22:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-gsctgi4tenlap3rmegivomgp'), (b'openai-project', b'proj_9NM8y20aOry0NJNndUcO4kJt'), (b'x-request-id', b'req_a8f04f3789b9a0e4adff15cf4472e12d'), (b'openai-processing-ms', b'24296'), (b'x-envoy-upstream-service-time', b'24301'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'96bea1954983e4c2-AKX'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-08 16:22:00,842 - INFO - HTTP Request: POST https://api.openai.com/v1/images/generations "HTTP/1.1 200 OK"
2025-08-08 16:22:00,842 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:22:00,842 - DEBUG - receive_response_body.complete
2025-08-08 16:22:00,842 - DEBUG - response_closed.started
2025-08-08 16:22:00,842 - DEBUG - response_closed.complete
2025-08-08 16:22:00,842 - DEBUG - HTTP Response: POST https://api.openai.com/v1/images/generations "200 OK" Headers({'date': 'Fri, 08 Aug 2025 11:22:01 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'openai-version': '2020-10-01', 'openai-organization': 'user-gsctgi4tenlap3rmegivomgp', 'openai-project': 'proj_9NM8y20aOry0NJNndUcO4kJt', 'x-request-id': 'req_a8f04f3789b9a0e4adff15cf4472e12d', 'openai-processing-ms': '24296', 'x-envoy-upstream-service-time': '24301', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '96bea1954983e4c2-AKX', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-08 16:22:00,842 - DEBUG - request_id: req_a8f04f3789b9a0e4adff15cf4472e12d
2025-08-08 16:22:00,843 - INFO - Generated image for 'СЃР°СЂТ“С‹С€': https://oaidalleapiprodscus.blob.core.windows.net/private/org-QA1vw2bLx4mJJ3gO8vDB8703/user-GscTgi4teNlaP3rMEgIVoMgP/img-zVWpNDfuNG4LPCu8WDZg4RZJ.png?st=2025-08-08T10%3A22%3A00Z&se=2025-08-08T12%3A22%3A00Z&sp=r&sv=2024-08-04&sr=b&rscd=inline&rsct=image/png&skoid=8b33a531-2df9-46a3-bc02-d4b1430a422c&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2025-08-08T11%3A22%3A00Z&ske=2025-08-09T11%3A22%3A00Z&sks=b&skv=2024-08-04&sig=pA3Cfslxlo%2BEVdlfUtvIEtJsgzlKxXQ8Lr29wA2ACHM%3D
2025-08-08 16:22:01,130 - DEBUG - connect_tcp.started host='oaidalleapiprodscus.blob.core.windows.net' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-08 16:22:01,337 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C16B2390>
2025-08-08 16:22:01,338 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000282C1CB1130> server_hostname='oaidalleapiprodscus.blob.core.windows.net' timeout=5.0
2025-08-08 16:22:01,750 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C183C990>
2025-08-08 16:22:01,750 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 16:22:01,751 - DEBUG - send_request_headers.complete
2025-08-08 16:22:01,751 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 16:22:01,751 - DEBUG - send_request_body.complete
2025-08-08 16:22:01,751 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 16:22:02,377 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Content-Length', b'1934978'), (b'Content-Type', b'image/png'), (b'Content-MD5', b'exf+ODJNEgJP4mvqfRHm5w=='), (b'Last-Modified', b'Fri, 08 Aug 2025 11:22:00 GMT'), (b'Accept-Ranges', b'bytes'), (b'ETag', b'"0x8DDD66DCB667185"'), (b'Server', b'Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0'), (b'x-ms-request-id', b'77a1691a-401e-008f-1756-083647000000'), (b'x-ms-version', b'2024-08-04'), (b'x-ms-creation-time', b'Fri, 08 Aug 2025 11:22:00 GMT'), (b'x-ms-lease-status', b'unlocked'), (b'x-ms-lease-state', b'available'), (b'x-ms-blob-type', b'BlockBlob'), (b'Content-Disposition', b'inline'), (b'x-ms-server-encrypted', b'true'), (b'x-ms-last-access-time', b'Fri, 08 Aug 2025 11:22:00 GMT'), (b'Date', b'Fri, 08 Aug 2025 11:22:02 GMT')])
2025-08-08 16:22:02,378 - INFO - HTTP Request: GET https://oaidalleapiprodscus.blob.core.windows.net/private/org-QA1vw2bLx4mJJ3gO8vDB8703/user-GscTgi4teNlaP3rMEgIVoMgP/img-zVWpNDfuNG4LPCu8WDZg4RZJ.png?st=2025-08-08T10%3A22%3A00Z&se=2025-08-08T12%3A22%3A00Z&sp=r&sv=2024-08-04&sr=b&rscd=inline&rsct=image/png&skoid=8b33a531-2df9-46a3-bc02-d4b1430a422c&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2025-08-08T11%3A22%3A00Z&ske=2025-08-09T11%3A22%3A00Z&sks=b&skv=2024-08-04&sig=pA3Cfslxlo%2BEVdlfUtvIEtJsgzlKxXQ8Lr29wA2ACHM%3D "HTTP/1.1 200 OK"
2025-08-08 16:22:02,378 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 16:22:03,999 - DEBUG - receive_response_body.complete
2025-08-08 16:22:03,999 - DEBUG - response_closed.started
2025-08-08 16:22:04,000 - DEBUG - response_closed.complete
2025-08-08 16:22:04,000 - DEBUG - STREAM b'IHDR' 16 13
2025-08-08 16:22:04,000 - DEBUG - STREAM b'caBX' 41 14086
2025-08-08 16:22:04,001 - DEBUG - b'caBX' 41 14086 (unknown)
2025-08-08 16:22:04,001 - DEBUG - STREAM b'IDAT' 14139 65536
2025-08-08 16:22:04,067 - INFO - Saved processed image for word 31 to ..\kazakh-learn-frontend\public\images\words\categories\4\31.png
2025-08-08 16:22:04,067 - DEBUG - close.started
2025-08-08 16:22:04,068 - DEBUG - close.complete
2025-08-08 16:22:04,068 - INFO - Converted path ..\kazakh-learn-frontend\public\images\words\categories\4\31.png to URL: /images/words/categories/4/31.png
2025-08-08 16:22:04,068 - DEBUG - close.started
2025-08-08 16:22:04,068 - DEBUG - close.complete
2025-08-08 16:22:04,069 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=30.0 socket_options=None
2025-08-08 16:22:04,333 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1C46C10>
2025-08-08 16:22:04,333 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:22:04,333 - DEBUG - send_request_headers.complete
2025-08-08 16:22:04,333 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:22:04,334 - DEBUG - send_request_body.complete
2025-08-08 16:22:04,334 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:22:04,343 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 201, b'Created', [(b'date', b'Fri, 08 Aug 2025 11:22:04 GMT'), (b'server', b'uvicorn'), (b'content-length', b'248'), (b'content-type', b'application/json')])
2025-08-08 16:22:04,344 - INFO - HTTP Request: POST http://localhost:8000/word-images/ "HTTP/1.1 201 Created"
2025-08-08 16:22:04,344 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:22:04,344 - DEBUG - receive_response_body.complete
2025-08-08 16:22:04,344 - DEBUG - response_closed.started
2025-08-08 16:22:04,344 - DEBUG - response_closed.complete
2025-08-08 16:22:04,344 - INFO - Created image record for word 31: /images/words/categories/4/31.png
2025-08-08 16:22:04,344 - INFO - SUCCESS: Successfully processed word 31: '??????'
2025-08-08 16:22:04,344 - INFO - SUCCESS [9/10]: СЃР°СЂТ“С‹С€
2025-08-08 16:22:06,346 - INFO - [10/10] Processing: Т›РѕТЈС‹СЂР»Р°Сѓ (ID: 34)
2025-08-08 16:22:06,346 - INFO - Processing word 34: '????????'
2025-08-08 16:22:06,346 - INFO - Category ID missing for word 34, fetching full details...
2025-08-08 16:22:06,346 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 16:22:06,347 - DEBUG - send_request_headers.complete
2025-08-08 16:22:06,347 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 16:22:06,347 - DEBUG - send_request_body.complete
2025-08-08 16:22:06,347 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 16:22:06,364 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 08 Aug 2025 11:22:05 GMT'), (b'server', b'uvicorn'), (b'content-length', b'1167'), (b'content-type', b'application/json')])
2025-08-08 16:22:06,364 - INFO - HTTP Request: GET http://localhost:8000/words/34 "HTTP/1.1 200 OK"
2025-08-08 16:22:06,364 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 16:22:06,364 - DEBUG - receive_response_body.complete
2025-08-08 16:22:06,364 - DEBUG - response_closed.started
2025-08-08 16:22:06,364 - DEBUG - response_closed.complete
2025-08-08 16:22:06,364 - DEBUG - Retrieved word details for ID 34: {'id': 34, 'kazakh_word': 'Т›РѕТЈС‹СЂР»Р°Сѓ', 'kazakh_cyrillic': 'Т›РѕТЈС‹СЂР»Р°Сѓ', 'created_at': '2025-06-18T11:08:16.101019', 'word_type': {'type_name': 'adjective', 'description': 'Adjective - describing word', 'is_active': True, 'id': 3, 'created_at': '2025-06-18T11:08:16.053456', 'translations': [{'id': 7, 'translated_name': 'Adjective', 'translated_description': 'Describes nouns and pronouns', 'language_code': 'en'}]}, 'category': {'category_name': 'colors', 'description': 'Colors and shades', 'is_active': True, 'id': 4, 'created_at': '2025-06-18T11:08:16.033863', 'translations': [{'id': 10, 'translated_name': 'Colors', 'translated_description': 'Colors and shades', 'language_code': 'en'}]}, 'difficulty_level': {'level_number': 3, 'level_name': 'intermediate', 'description': 'Intermediate level words', 'is_active': True, 'id': 3, 'created_at': '2025-06-18T11:08:16.068525', 'translations': [{'id': 7, 'translated_name': 'Intermediate', 'translated_description': 'Intermediate level words', 'language_code': 'en'}]}, 'translations': [{'translation': 'brownish', 'alternative_translations': [], 'id': 1312, 'language_code': 'en', 'created_at': '2025-08-06T10:27:41.085303'}], 'pronunciations': [], 'images': [], 'example_sentences': []}
2025-08-08 16:22:06,365 - INFO - Updated word data - category_id: 4, category: colors, translation: brownish
2025-08-08 16:22:06,365 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert at creating visual image prompts for educational Kazakh language learning materials. \nCreate a detailed, culturally appropriate image description that will help learners associate the Kazakh word with its meaning.\n\nREQUIREMENTS:\n1. NO TEXT or letters should appear in the image\n2. Focus on visual representation only\n3. Use traditional Kazakh/Central Asian cultural elements when appropriate\n4. Style should be clean, educational, and suitable for language learning\n5. 300x300px square format\n6. Bright, clear, and easily recognizable imagery\n7. Incorporate Kazakh cultural aesthetics (traditional patterns, colors, landscapes) when relevant\n\nReturn only a concise image description prompt, no explanations.'}, {'role': 'user', 'content': 'Kazakh word: "Т›РѕТЈС‹СЂР»Р°Сѓ"\nEnglish meaning: "brownish"\nCategory: "colors"\n\nCreate a visual image prompt for this Kazakh word that shows its meaning without any text. Include Kazakh cultural elements where appropriate. If the meaning is unclear, create a generic educational illustration that could represent a Kazakh language concept.'}], 'model': 'gpt-4-turbo-preview', 'max_tokens': 200, 'temperature': 0.7}, 'idempotency_key': 'stainless-python-retry-525305d9-a61c-497a-b2ad-7cb3c03ddc5d'}
2025-08-08 16:22:06,366 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-08 16:22:06,366 - DEBUG - close.started
2025-08-08 16:22:06,366 - DEBUG - close.complete
2025-08-08 16:22:06,366 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-08 16:22:06,434 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CE1B50>
2025-08-08 16:22:06,434 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000282C15FB5C0> server_hostname='api.openai.com' timeout=5.0
2025-08-08 16:22:06,462 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CE3D90>
2025-08-08 16:22:06,463 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:22:06,463 - DEBUG - send_request_headers.complete
2025-08-08 16:22:06,463 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:22:06,463 - DEBUG - send_request_body.complete
2025-08-08 16:22:06,463 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:22:12,452 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 08 Aug 2025 11:22:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-gsctgi4tenlap3rmegivomgp'), (b'openai-processing-ms', b'5681'), (b'openai-project', b'proj_9NM8y20aOry0NJNndUcO4kJt'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'5735'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29731'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'538ms'), (b'x-request-id', b'req_af7062d2c1ef4e3d85ee5f8ea84a60d7'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'96bea251de1be4c8-AKX'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-08 16:22:12,453 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-08 16:22:12,453 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:22:12,453 - DEBUG - receive_response_body.complete
2025-08-08 16:22:12,453 - DEBUG - response_closed.started
2025-08-08 16:22:12,453 - DEBUG - response_closed.complete
2025-08-08 16:22:12,454 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 08 Aug 2025 11:22:12 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-gsctgi4tenlap3rmegivomgp', 'openai-processing-ms': '5681', 'openai-project': 'proj_9NM8y20aOry0NJNndUcO4kJt', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '5735', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29731', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '538ms', 'x-request-id': 'req_af7062d2c1ef4e3d85ee5f8ea84a60d7', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '96bea251de1be4c8-AKX', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-08 16:22:12,454 - DEBUG - request_id: req_af7062d2c1ef4e3d85ee5f8ea84a60d7
2025-08-08 16:22:12,454 - DEBUG - Generated image prompt for 'Т›РѕТЈС‹СЂР»Р°Сѓ': The image shows a traditional Kazakh scene with a steppe landscape in the background, under a clear, expansive sky. In the foreground, a majestic steppe eagle, with its distinctive brownish feathers, perches on a wooden post wrapped with a patterned cloth featuring geometric shapes in various shades of brown, hinting at the word "Т›РѕТЈС‹СЂР»Р°Сѓ" (brownish). The eagle's feathers beautifully transition from light to darker shades of brown, accurately depicting the word's meaning. Additionally, a few traditional Kazakh felt items, such as a 'shyrdak' (felt rug) and a 'tuskiiz' (wall hanging), both adorned with intricate patterns in brownish hues, are subtly placed around the scene, further emphasizing the color theme. The overall style is clean, with a focus on natural and cultural elements that are easily identifiable and culturally significant, making it suitable for educational purposes.
2025-08-08 16:22:12,455 - DEBUG - Request options: {'method': 'post', 'url': '/images/generations', 'files': None, 'json_data': {'prompt': 'The image shows a traditional Kazakh scene with a steppe landscape in the background, under a clear, expansive sky. In the foreground, a majestic steppe eagle, with its distinctive brownish feathers, perches on a wooden post wrapped with a patterned cloth featuring geometric shapes in various shades of brown, hinting at the word "Т›РѕТЈС‹СЂР»Р°Сѓ" (brownish). The eagle\'s feathers beautifully transition from light to darker shades of brown, accurately depicting the word\'s meaning. Additionally, a few traditional Kazakh felt items, such as a \'shyrdak\' (felt rug) and a \'tuskiiz\' (wall hanging), both adorned with intricate patterns in brownish hues, are subtly placed around the scene, further emphasizing the color theme. The overall style is clean, with a focus on natural and cultural elements that are easily identifiable and culturally significant, making it suitable for educational purposes., digital art, clean educational illustration, square format, no text or words visible, bright and clear for language learning', 'model': 'dall-e-3', 'n': 1, 'quality': 'standard', 'size': '1024x1024'}, 'idempotency_key': 'stainless-python-retry-37de2feb-3562-4635-8812-33428647c19d'}
2025-08-08 16:22:12,456 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/images/generations
2025-08-08 16:22:12,457 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:22:12,457 - DEBUG - send_request_headers.complete
2025-08-08 16:22:12,457 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:22:12,457 - DEBUG - send_request_body.complete
2025-08-08 16:22:12,457 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:22:42,519 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 08 Aug 2025 11:22:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'openai-organization', b'user-gsctgi4tenlap3rmegivomgp'), (b'openai-project', b'proj_9NM8y20aOry0NJNndUcO4kJt'), (b'x-request-id', b'req_66ca0f236c5b59da3f8b9e603ca0f984'), (b'openai-processing-ms', b'29820'), (b'x-envoy-upstream-service-time', b'29825'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'96bea2774e44e4c8-AKX'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-08 16:22:42,519 - INFO - HTTP Request: POST https://api.openai.com/v1/images/generations "HTTP/1.1 200 OK"
2025-08-08 16:22:42,519 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:22:42,519 - DEBUG - receive_response_body.complete
2025-08-08 16:22:42,519 - DEBUG - response_closed.started
2025-08-08 16:22:42,520 - DEBUG - response_closed.complete
2025-08-08 16:22:42,520 - DEBUG - HTTP Response: POST https://api.openai.com/v1/images/generations "200 OK" Headers({'date': 'Fri, 08 Aug 2025 11:22:43 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'openai-version': '2020-10-01', 'openai-organization': 'user-gsctgi4tenlap3rmegivomgp', 'openai-project': 'proj_9NM8y20aOry0NJNndUcO4kJt', 'x-request-id': 'req_66ca0f236c5b59da3f8b9e603ca0f984', 'openai-processing-ms': '29820', 'x-envoy-upstream-service-time': '29825', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '96bea2774e44e4c8-AKX', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-08 16:22:42,520 - DEBUG - request_id: req_66ca0f236c5b59da3f8b9e603ca0f984
2025-08-08 16:22:42,520 - INFO - Generated image for 'Т›РѕТЈС‹СЂР»Р°Сѓ': https://oaidalleapiprodscus.blob.core.windows.net/private/org-QA1vw2bLx4mJJ3gO8vDB8703/user-GscTgi4teNlaP3rMEgIVoMgP/img-QzmZpM9ggli5auZkqlVHbyB6.png?st=2025-08-08T10%3A22%3A42Z&se=2025-08-08T12%3A22%3A42Z&sp=r&sv=2024-08-04&sr=b&rscd=inline&rsct=image/png&skoid=8b33a531-2df9-46a3-bc02-d4b1430a422c&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2025-08-08T07%3A02%3A48Z&ske=2025-08-09T07%3A02%3A48Z&sks=b&skv=2024-08-04&sig=hZEi7i6Rv/MSe87qSslmDEsUfK2zr2RhGVZUvkaRtK4%3D
2025-08-08 16:22:42,788 - DEBUG - connect_tcp.started host='oaidalleapiprodscus.blob.core.windows.net' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-08 16:22:43,473 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CD4850>
2025-08-08 16:22:43,473 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000282C1CB0680> server_hostname='oaidalleapiprodscus.blob.core.windows.net' timeout=5.0
2025-08-08 16:22:43,886 - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CD75D0>
2025-08-08 16:22:43,886 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-08-08 16:22:43,886 - DEBUG - send_request_headers.complete
2025-08-08 16:22:43,886 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-08-08 16:22:43,886 - DEBUG - send_request_body.complete
2025-08-08 16:22:43,886 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-08-08 16:22:44,501 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Content-Length', b'1985576'), (b'Content-Type', b'image/png'), (b'Content-MD5', b'QXOiJKub36sLGoiP763gIQ=='), (b'Last-Modified', b'Fri, 08 Aug 2025 11:22:42 GMT'), (b'Accept-Ranges', b'bytes'), (b'ETag', b'"0x8DDD66DE47304C3"'), (b'Server', b'Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0'), (b'x-ms-request-id', b'9940c1d3-501e-0067-7756-08afd1000000'), (b'x-ms-version', b'2024-08-04'), (b'x-ms-creation-time', b'Fri, 08 Aug 2025 11:22:42 GMT'), (b'x-ms-lease-status', b'unlocked'), (b'x-ms-lease-state', b'available'), (b'x-ms-blob-type', b'BlockBlob'), (b'Content-Disposition', b'inline'), (b'x-ms-server-encrypted', b'true'), (b'x-ms-last-access-time', b'Fri, 08 Aug 2025 11:22:42 GMT'), (b'Date', b'Fri, 08 Aug 2025 11:22:43 GMT')])
2025-08-08 16:22:44,501 - INFO - HTTP Request: GET https://oaidalleapiprodscus.blob.core.windows.net/private/org-QA1vw2bLx4mJJ3gO8vDB8703/user-GscTgi4teNlaP3rMEgIVoMgP/img-QzmZpM9ggli5auZkqlVHbyB6.png?st=2025-08-08T10%3A22%3A42Z&se=2025-08-08T12%3A22%3A42Z&sp=r&sv=2024-08-04&sr=b&rscd=inline&rsct=image/png&skoid=8b33a531-2df9-46a3-bc02-d4b1430a422c&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2025-08-08T07%3A02%3A48Z&ske=2025-08-09T07%3A02%3A48Z&sks=b&skv=2024-08-04&sig=hZEi7i6Rv/MSe87qSslmDEsUfK2zr2RhGVZUvkaRtK4%3D "HTTP/1.1 200 OK"
2025-08-08 16:22:44,502 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-08-08 16:22:46,126 - DEBUG - receive_response_body.complete
2025-08-08 16:22:46,126 - DEBUG - response_closed.started
2025-08-08 16:22:46,126 - DEBUG - response_closed.complete
2025-08-08 16:22:46,127 - DEBUG - STREAM b'IHDR' 16 13
2025-08-08 16:22:46,127 - DEBUG - STREAM b'caBX' 41 14086
2025-08-08 16:22:46,127 - DEBUG - b'caBX' 41 14086 (unknown)
2025-08-08 16:22:46,127 - DEBUG - STREAM b'IDAT' 14139 65536
2025-08-08 16:22:46,200 - INFO - Saved processed image for word 34 to ..\kazakh-learn-frontend\public\images\words\categories\4\34.png
2025-08-08 16:22:46,200 - DEBUG - close.started
2025-08-08 16:22:46,200 - DEBUG - close.complete
2025-08-08 16:22:46,200 - INFO - Converted path ..\kazakh-learn-frontend\public\images\words\categories\4\34.png to URL: /images/words/categories/4/34.png
2025-08-08 16:22:46,201 - DEBUG - close.started
2025-08-08 16:22:46,201 - DEBUG - close.complete
2025-08-08 16:22:46,201 - DEBUG - connect_tcp.started host='localhost' port=8000 local_address=None timeout=30.0 socket_options=None
2025-08-08 16:22:46,455 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x00000282C1CF3FD0>
2025-08-08 16:22:46,455 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-08 16:22:46,455 - DEBUG - send_request_headers.complete
2025-08-08 16:22:46,455 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-08 16:22:46,455 - DEBUG - send_request_body.complete
2025-08-08 16:22:46,455 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-08 16:22:46,465 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 201, b'Created', [(b'date', b'Fri, 08 Aug 2025 11:22:45 GMT'), (b'server', b'uvicorn'), (b'content-length', b'248'), (b'content-type', b'application/json')])
2025-08-08 16:22:46,465 - INFO - HTTP Request: POST http://localhost:8000/word-images/ "HTTP/1.1 201 Created"
2025-08-08 16:22:46,465 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-08 16:22:46,465 - DEBUG - receive_response_body.complete
2025-08-08 16:22:46,465 - DEBUG - response_closed.started
2025-08-08 16:22:46,466 - DEBUG - response_closed.complete
2025-08-08 16:22:46,466 - INFO - Created image record for word 34: /images/words/categories/4/34.png
2025-08-08 16:22:46,466 - INFO - SUCCESS: Successfully processed word 34: '????????'
2025-08-08 16:22:46,466 - INFO - SUCCESS [10/10]: Т›РѕТЈС‹СЂР»Р°Сѓ
2025-08-08 16:22:46,466 - INFO - 
Image Generation Complete!
Statistics:
   - Total words: 10
   - Processed: 10
   - Successful: 10
   - Failed: 0
   - Success rate: 100.0%
            
2025-08-08 16:22:46,466 - DEBUG - close.started
2025-08-08 16:22:46,466 - DEBUG - close.complete
2025-08-08 16:33:32,435 - ERROR - Error generating image prompt for 'Р±Р°Р¶Р°': Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-08-08 16:33:32,819 - ERROR - Error generating image for 'Р±Р°Р¶Р°': Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:33:32,820 - ERROR - ERROR: Error processing word 62 ('????'): Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:33:32,835 - ERROR - Full traceback: Traceback (most recent call last):
  File "D:\python\myNew\services\word_image_service.py", line 436, in process_single_word
    image_url = await self.generate_word_image(word_data, image_prompt)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\myNew\services\word_image_service.py", line 178, in generate_word_image
    response = await self.openai_client.images.generate(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\resources\images.py", line 670, in generate
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1784, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1584, in request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}

2025-08-08 16:33:32,835 - ERROR - FAILED [1/30]: Failed to process word 62: Р±Р°Р¶Р°
2025-08-08 16:33:37,340 - ERROR - Error generating image prompt for 'РЅР°Т“Р°С€С‹': Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-08-08 16:33:37,660 - ERROR - Error generating image for 'РЅР°Т“Р°С€С‹': Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:33:37,660 - ERROR - ERROR: Error processing word 64 ('??????'): Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:33:37,661 - ERROR - Full traceback: Traceback (most recent call last):
  File "D:\python\myNew\services\word_image_service.py", line 436, in process_single_word
    image_url = await self.generate_word_image(word_data, image_prompt)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\myNew\services\word_image_service.py", line 178, in generate_word_image
    response = await self.openai_client.images.generate(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\resources\images.py", line 670, in generate
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1784, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1584, in request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}

2025-08-08 16:33:37,661 - ERROR - FAILED [2/30]: Failed to process word 64: РЅР°Т“Р°С€С‹
2025-08-08 16:33:42,084 - ERROR - Error generating image prompt for 'У©Р· Р¶Т±СЂС‚С‹': Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-08-08 16:33:42,811 - ERROR - Error generating image for 'У©Р· Р¶Т±СЂС‚С‹': Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:33:42,811 - ERROR - ERROR: Error processing word 65 ('?? ?????'): Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:33:42,812 - ERROR - Full traceback: Traceback (most recent call last):
  File "D:\python\myNew\services\word_image_service.py", line 436, in process_single_word
    image_url = await self.generate_word_image(word_data, image_prompt)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\myNew\services\word_image_service.py", line 178, in generate_word_image
    response = await self.openai_client.images.generate(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\resources\images.py", line 670, in generate
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1784, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1584, in request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}

2025-08-08 16:33:42,812 - ERROR - FAILED [3/30]: Failed to process word 65: У©Р· Р¶Т±СЂС‚С‹
2025-08-08 16:33:47,282 - ERROR - Error generating image prompt for 'Т›Р°Р№С‹РЅ Р¶Т±СЂС‚': Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-08-08 16:33:47,646 - ERROR - Error generating image for 'Т›Р°Р№С‹РЅ Р¶Т±СЂС‚': Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:33:47,646 - ERROR - ERROR: Error processing word 66 ('????? ????'): Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:33:47,647 - ERROR - Full traceback: Traceback (most recent call last):
  File "D:\python\myNew\services\word_image_service.py", line 436, in process_single_word
    image_url = await self.generate_word_image(word_data, image_prompt)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\myNew\services\word_image_service.py", line 178, in generate_word_image
    response = await self.openai_client.images.generate(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\resources\images.py", line 670, in generate
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1784, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1584, in request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}

2025-08-08 16:33:47,647 - ERROR - FAILED [4/30]: Failed to process word 66: Т›Р°Р№С‹РЅ Р¶Т±СЂС‚
2025-08-08 16:33:52,062 - ERROR - Error generating image prompt for 'Т›Т±РґР°': Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-08-08 16:33:52,422 - ERROR - Error generating image for 'Т›Т±РґР°': Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:33:52,422 - ERROR - ERROR: Error processing word 67 ('????'): Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:33:52,423 - ERROR - Full traceback: Traceback (most recent call last):
  File "D:\python\myNew\services\word_image_service.py", line 436, in process_single_word
    image_url = await self.generate_word_image(word_data, image_prompt)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\myNew\services\word_image_service.py", line 178, in generate_word_image
    response = await self.openai_client.images.generate(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\resources\images.py", line 670, in generate
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1784, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1584, in request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}

2025-08-08 16:33:52,423 - ERROR - FAILED [5/30]: Failed to process word 67: Т›Т±РґР°
2025-08-08 16:33:56,538 - ERROR - Error generating image prompt for 'Т›Т±РґР°Т“Рё': Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-08-08 16:33:56,870 - ERROR - Error generating image for 'Т›Т±РґР°Т“Рё': Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:33:56,870 - ERROR - ERROR: Error processing word 68 ('??????'): Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:33:56,871 - ERROR - Full traceback: Traceback (most recent call last):
  File "D:\python\myNew\services\word_image_service.py", line 436, in process_single_word
    image_url = await self.generate_word_image(word_data, image_prompt)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\myNew\services\word_image_service.py", line 178, in generate_word_image
    response = await self.openai_client.images.generate(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\resources\images.py", line 670, in generate
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1784, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1584, in request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}

2025-08-08 16:33:56,871 - ERROR - FAILED [6/30]: Failed to process word 68: Т›Т±РґР°Т“Рё
2025-08-08 16:34:01,152 - ERROR - Error generating image prompt for 'РєРµР»С–РЅ': Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-08-08 16:34:01,464 - ERROR - Error generating image for 'РєРµР»С–РЅ': Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:34:01,464 - ERROR - ERROR: Error processing word 69 ('?????'): Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:34:01,465 - ERROR - Full traceback: Traceback (most recent call last):
  File "D:\python\myNew\services\word_image_service.py", line 436, in process_single_word
    image_url = await self.generate_word_image(word_data, image_prompt)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\myNew\services\word_image_service.py", line 178, in generate_word_image
    response = await self.openai_client.images.generate(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\resources\images.py", line 670, in generate
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1784, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1584, in request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}

2025-08-08 16:34:01,465 - ERROR - FAILED [7/30]: Failed to process word 69: РєРµР»С–РЅ
2025-08-08 16:34:05,659 - ERROR - Error generating image prompt for 'РєТЇР№РµСѓР±Р°Р»Р°': Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-08-08 16:34:06,049 - ERROR - Error generating image for 'РєТЇР№РµСѓР±Р°Р»Р°': Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:34:06,049 - ERROR - ERROR: Error processing word 70 ('?????????'): Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:34:06,050 - ERROR - Full traceback: Traceback (most recent call last):
  File "D:\python\myNew\services\word_image_service.py", line 436, in process_single_word
    image_url = await self.generate_word_image(word_data, image_prompt)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\myNew\services\word_image_service.py", line 178, in generate_word_image
    response = await self.openai_client.images.generate(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\resources\images.py", line 670, in generate
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1784, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1584, in request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}

2025-08-08 16:34:06,050 - ERROR - FAILED [8/30]: Failed to process word 70: РєТЇР№РµСѓР±Р°Р»Р°
2025-08-08 16:34:10,111 - ERROR - Error generating image prompt for 'Р¶Р°РЅСѓР°СЂР»Р°СЂ': Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-08-08 16:34:10,487 - ERROR - Error generating image for 'Р¶Р°РЅСѓР°СЂР»Р°СЂ': Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:34:10,487 - ERROR - ERROR: Error processing word 72 ('?????????'): Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:34:10,487 - ERROR - Full traceback: Traceback (most recent call last):
  File "D:\python\myNew\services\word_image_service.py", line 436, in process_single_word
    image_url = await self.generate_word_image(word_data, image_prompt)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\myNew\services\word_image_service.py", line 178, in generate_word_image
    response = await self.openai_client.images.generate(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\resources\images.py", line 670, in generate
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1784, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1584, in request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}

2025-08-08 16:34:10,488 - ERROR - FAILED [9/30]: Failed to process word 72: Р¶Р°РЅСѓР°СЂР»Р°СЂ
2025-08-08 16:34:14,643 - ERROR - Error generating image prompt for 'С‚С‹С€Т›Р°РЅ': Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-08-08 16:34:14,993 - ERROR - Error generating image for 'С‚С‹С€Т›Р°РЅ': Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:34:14,993 - ERROR - ERROR: Error processing word 73 ('??????'): Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:34:14,994 - ERROR - Full traceback: Traceback (most recent call last):
  File "D:\python\myNew\services\word_image_service.py", line 436, in process_single_word
    image_url = await self.generate_word_image(word_data, image_prompt)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\myNew\services\word_image_service.py", line 178, in generate_word_image
    response = await self.openai_client.images.generate(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\resources\images.py", line 670, in generate
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1784, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1584, in request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}

2025-08-08 16:34:14,994 - ERROR - FAILED [10/30]: Failed to process word 73: С‚С‹С€Т›Р°РЅ
2025-08-08 16:34:19,302 - ERROR - Error generating image prompt for 'С€РѕС€Т›Р°': Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-08-08 16:34:19,681 - ERROR - Error generating image for 'С€РѕС€Т›Р°': Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:34:19,681 - ERROR - ERROR: Error processing word 76 ('?????'): Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:34:19,682 - ERROR - Full traceback: Traceback (most recent call last):
  File "D:\python\myNew\services\word_image_service.py", line 436, in process_single_word
    image_url = await self.generate_word_image(word_data, image_prompt)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\myNew\services\word_image_service.py", line 178, in generate_word_image
    response = await self.openai_client.images.generate(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\resources\images.py", line 670, in generate
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1784, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1584, in request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}

2025-08-08 16:34:19,682 - ERROR - FAILED [11/30]: Failed to process word 76: С€РѕС€Т›Р°
2025-08-08 16:34:23,899 - ERROR - Error generating image prompt for 'Р±РѕСЂР°РЅ': Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-08-08 16:34:24,653 - ERROR - Error generating image for 'Р±РѕСЂР°РЅ': Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:34:24,653 - ERROR - ERROR: Error processing word 77 ('?????'): Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:34:24,653 - ERROR - Full traceback: Traceback (most recent call last):
  File "D:\python\myNew\services\word_image_service.py", line 436, in process_single_word
    image_url = await self.generate_word_image(word_data, image_prompt)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\myNew\services\word_image_service.py", line 178, in generate_word_image
    response = await self.openai_client.images.generate(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\resources\images.py", line 670, in generate
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1784, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1584, in request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}

2025-08-08 16:34:24,654 - ERROR - FAILED [12/30]: Failed to process word 77: Р±РѕСЂР°РЅ
2025-08-08 16:34:28,996 - ERROR - Error generating image prompt for 'Р¶РѕР»Р±Р°СЂС‹СЃ': Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-08-08 16:34:29,627 - ERROR - Error generating image for 'Р¶РѕР»Р±Р°СЂС‹СЃ': Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:34:29,627 - ERROR - ERROR: Error processing word 79 ('????????'): Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:34:29,627 - ERROR - Full traceback: Traceback (most recent call last):
  File "D:\python\myNew\services\word_image_service.py", line 436, in process_single_word
    image_url = await self.generate_word_image(word_data, image_prompt)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\myNew\services\word_image_service.py", line 178, in generate_word_image
    response = await self.openai_client.images.generate(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\resources\images.py", line 670, in generate
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1784, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1584, in request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}

2025-08-08 16:34:29,628 - ERROR - FAILED [13/30]: Failed to process word 79: Р¶РѕР»Р±Р°СЂС‹СЃ
2025-08-08 16:34:33,689 - ERROR - Error generating image prompt for 'Р¶С‹Р»Р°РЅ': Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-08-08 16:34:34,130 - ERROR - Error generating image for 'Р¶С‹Р»Р°РЅ': Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:34:34,130 - ERROR - ERROR: Error processing word 80 ('?????'): Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:34:34,131 - ERROR - Full traceback: Traceback (most recent call last):
  File "D:\python\myNew\services\word_image_service.py", line 436, in process_single_word
    image_url = await self.generate_word_image(word_data, image_prompt)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\myNew\services\word_image_service.py", line 178, in generate_word_image
    response = await self.openai_client.images.generate(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\resources\images.py", line 670, in generate
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1784, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1584, in request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}

2025-08-08 16:34:34,131 - ERROR - FAILED [14/30]: Failed to process word 80: Р¶С‹Р»Р°РЅ
2025-08-08 16:34:38,243 - ERROR - Error generating image prompt for 'Т›РѕР»С‚С‹СЂР°СѓС‹РЅ': Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-08-08 16:34:38,725 - ERROR - Error generating image for 'Т›РѕР»С‚С‹СЂР°СѓС‹РЅ': Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:34:38,725 - ERROR - ERROR: Error processing word 82 ('??????????'): Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:34:38,726 - ERROR - Full traceback: Traceback (most recent call last):
  File "D:\python\myNew\services\word_image_service.py", line 436, in process_single_word
    image_url = await self.generate_word_image(word_data, image_prompt)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\myNew\services\word_image_service.py", line 178, in generate_word_image
    response = await self.openai_client.images.generate(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\resources\images.py", line 670, in generate
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1784, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1584, in request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}

2025-08-08 16:34:38,726 - ERROR - FAILED [15/30]: Failed to process word 82: Т›РѕР»С‚С‹СЂР°СѓС‹РЅ
2025-08-08 16:34:42,815 - ERROR - Error generating image prompt for 'РєРµСЂС–Рє': Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-08-08 16:34:43,161 - ERROR - Error generating image for 'РєРµСЂС–Рє': Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:34:43,161 - ERROR - ERROR: Error processing word 83 ('?????'): Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:34:43,162 - ERROR - Full traceback: Traceback (most recent call last):
  File "D:\python\myNew\services\word_image_service.py", line 436, in process_single_word
    image_url = await self.generate_word_image(word_data, image_prompt)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\myNew\services\word_image_service.py", line 178, in generate_word_image
    response = await self.openai_client.images.generate(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\resources\images.py", line 670, in generate
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1784, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1584, in request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}

2025-08-08 16:34:43,162 - ERROR - FAILED [16/30]: Failed to process word 83: РєРµСЂС–Рє
2025-08-08 16:34:47,330 - ERROR - Error generating image prompt for 'РєРµРЅРіСѓСЂСѓ': Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-08-08 16:34:47,715 - ERROR - Error generating image for 'РєРµРЅРіСѓСЂСѓ': Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:34:47,715 - ERROR - ERROR: Error processing word 89 ('???????'): Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:34:47,716 - ERROR - Full traceback: Traceback (most recent call last):
  File "D:\python\myNew\services\word_image_service.py", line 436, in process_single_word
    image_url = await self.generate_word_image(word_data, image_prompt)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\myNew\services\word_image_service.py", line 178, in generate_word_image
    response = await self.openai_client.images.generate(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\resources\images.py", line 670, in generate
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1784, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1584, in request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}

2025-08-08 16:34:47,716 - ERROR - FAILED [17/30]: Failed to process word 89: РєРµРЅРіСѓСЂСѓ
2025-08-08 16:34:52,070 - ERROR - Error generating image prompt for 'СЃТЇС‚ Т›РѕСЂРµРєС‚С–': Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-08-08 16:34:52,456 - ERROR - Error generating image for 'СЃТЇС‚ Т›РѕСЂРµРєС‚С–': Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:34:52,456 - ERROR - ERROR: Error processing word 90 ('??? ???????'): Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:34:52,457 - ERROR - Full traceback: Traceback (most recent call last):
  File "D:\python\myNew\services\word_image_service.py", line 436, in process_single_word
    image_url = await self.generate_word_image(word_data, image_prompt)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\myNew\services\word_image_service.py", line 178, in generate_word_image
    response = await self.openai_client.images.generate(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\resources\images.py", line 670, in generate
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1784, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1584, in request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}

2025-08-08 16:34:52,457 - ERROR - FAILED [18/30]: Failed to process word 90: СЃТЇС‚ Т›РѕСЂРµРєС‚С–
2025-08-08 16:34:56,603 - ERROR - Error generating image prompt for 'Т›Р°Р±Р°РЅ': Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-08-08 16:34:56,944 - ERROR - Error generating image for 'Т›Р°Р±Р°РЅ': Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:34:56,944 - ERROR - ERROR: Error processing word 105 ('?????'): Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:34:56,944 - ERROR - Full traceback: Traceback (most recent call last):
  File "D:\python\myNew\services\word_image_service.py", line 436, in process_single_word
    image_url = await self.generate_word_image(word_data, image_prompt)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\myNew\services\word_image_service.py", line 178, in generate_word_image
    response = await self.openai_client.images.generate(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\resources\images.py", line 670, in generate
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1784, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1584, in request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}

2025-08-08 16:34:56,944 - ERROR - FAILED [19/30]: Failed to process word 105: Т›Р°Р±Р°РЅ
2025-08-08 16:35:00,971 - ERROR - Error generating image prompt for 'РµРіРµСѓТ›Т±Р№СЂС‹Т›': Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-08-08 16:35:01,315 - ERROR - Error generating image for 'РµРіРµСѓТ›Т±Р№СЂС‹Т›': Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:35:01,315 - ERROR - ERROR: Error processing word 106 ('??????????'): Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:35:01,315 - ERROR - Full traceback: Traceback (most recent call last):
  File "D:\python\myNew\services\word_image_service.py", line 436, in process_single_word
    image_url = await self.generate_word_image(word_data, image_prompt)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\myNew\services\word_image_service.py", line 178, in generate_word_image
    response = await self.openai_client.images.generate(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\resources\images.py", line 670, in generate
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1784, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1584, in request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}

2025-08-08 16:35:01,316 - ERROR - FAILED [20/30]: Failed to process word 106: РµРіРµСѓТ›Т±Р№СЂС‹Т›
2025-08-08 16:35:05,568 - ERROR - Error generating image prompt for 'РµР»С–Рє': Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-08-08 16:35:05,908 - ERROR - Error generating image for 'РµР»С–Рє': Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:35:05,908 - ERROR - ERROR: Error processing word 107 ('????'): Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:35:05,909 - ERROR - Full traceback: Traceback (most recent call last):
  File "D:\python\myNew\services\word_image_service.py", line 436, in process_single_word
    image_url = await self.generate_word_image(word_data, image_prompt)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\myNew\services\word_image_service.py", line 178, in generate_word_image
    response = await self.openai_client.images.generate(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\resources\images.py", line 670, in generate
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1784, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1584, in request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}

2025-08-08 16:35:05,909 - ERROR - FAILED [21/30]: Failed to process word 107: РµР»С–Рє
2025-08-08 16:35:10,139 - ERROR - Error generating image prompt for 'РµС€РєС–': Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-08-08 16:35:10,472 - ERROR - Error generating image for 'РµС€РєС–': Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:35:10,472 - ERROR - ERROR: Error processing word 108 ('????'): Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:35:10,473 - ERROR - Full traceback: Traceback (most recent call last):
  File "D:\python\myNew\services\word_image_service.py", line 436, in process_single_word
    image_url = await self.generate_word_image(word_data, image_prompt)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\myNew\services\word_image_service.py", line 178, in generate_word_image
    response = await self.openai_client.images.generate(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\resources\images.py", line 670, in generate
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1784, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1584, in request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}

2025-08-08 16:35:10,474 - ERROR - FAILED [22/30]: Failed to process word 108: РµС€РєС–
2025-08-08 16:35:14,702 - ERROR - Error generating image prompt for 'Р¶Р°Р±Р°Р№С‹ Р°ТЈРґР°СЂ': Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-08-08 16:35:15,055 - ERROR - Error generating image for 'Р¶Р°Р±Р°Р№С‹ Р°ТЈРґР°СЂ': Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:35:15,055 - ERROR - ERROR: Error processing word 109 ('?????? ?????'): Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:35:15,056 - ERROR - Full traceback: Traceback (most recent call last):
  File "D:\python\myNew\services\word_image_service.py", line 436, in process_single_word
    image_url = await self.generate_word_image(word_data, image_prompt)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\myNew\services\word_image_service.py", line 178, in generate_word_image
    response = await self.openai_client.images.generate(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\resources\images.py", line 670, in generate
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1784, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1584, in request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}

2025-08-08 16:35:15,056 - ERROR - FAILED [23/30]: Failed to process word 109: Р¶Р°Р±Р°Р№С‹ Р°ТЈРґР°СЂ
2025-08-08 16:35:19,296 - ERROR - Error generating image prompt for 'Р¶Р°Р№СЂР°': Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-08-08 16:35:19,658 - ERROR - Error generating image for 'Р¶Р°Р№СЂР°': Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:35:19,658 - ERROR - ERROR: Error processing word 110 ('?????'): Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:35:19,658 - ERROR - Full traceback: Traceback (most recent call last):
  File "D:\python\myNew\services\word_image_service.py", line 436, in process_single_word
    image_url = await self.generate_word_image(word_data, image_prompt)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\myNew\services\word_image_service.py", line 178, in generate_word_image
    response = await self.openai_client.images.generate(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\resources\images.py", line 670, in generate
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1784, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1584, in request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}

2025-08-08 16:35:19,658 - ERROR - FAILED [24/30]: Failed to process word 110: Р¶Р°Р№СЂР°
2025-08-08 16:35:23,797 - ERROR - Error generating image prompt for 'Р¶Р°СЂТ“Р°РЅР°С‚': Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-08-08 16:35:24,194 - ERROR - Error generating image for 'Р¶Р°СЂТ“Р°РЅР°С‚': Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:35:24,194 - ERROR - ERROR: Error processing word 111 ('????????'): Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:35:24,195 - ERROR - Full traceback: Traceback (most recent call last):
  File "D:\python\myNew\services\word_image_service.py", line 436, in process_single_word
    image_url = await self.generate_word_image(word_data, image_prompt)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\myNew\services\word_image_service.py", line 178, in generate_word_image
    response = await self.openai_client.images.generate(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\resources\images.py", line 670, in generate
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1784, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1584, in request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}

2025-08-08 16:35:24,195 - ERROR - FAILED [25/30]: Failed to process word 111: Р¶Р°СЂТ“Р°РЅР°С‚
2025-08-08 16:35:28,474 - ERROR - Error generating image prompt for 'Р·РµР±СЂР°': Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-08-08 16:35:28,807 - ERROR - Error generating image for 'Р·РµР±СЂР°': Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:35:28,808 - ERROR - ERROR: Error processing word 112 ('?????'): Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:35:28,808 - ERROR - Full traceback: Traceback (most recent call last):
  File "D:\python\myNew\services\word_image_service.py", line 436, in process_single_word
    image_url = await self.generate_word_image(word_data, image_prompt)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\myNew\services\word_image_service.py", line 178, in generate_word_image
    response = await self.openai_client.images.generate(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\resources\images.py", line 670, in generate
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1784, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1584, in request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}

2025-08-08 16:35:28,808 - ERROR - FAILED [26/30]: Failed to process word 112: Р·РµР±СЂР°
2025-08-08 16:35:32,847 - ERROR - Error generating image prompt for 'РёС‚Р±Р°Р»С‹Т›': Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-08-08 16:35:34,432 - ERROR - Error generating image for 'РёС‚Р±Р°Р»С‹Т›': Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:35:34,432 - ERROR - ERROR: Error processing word 113 ('???????'): Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:35:34,432 - ERROR - Full traceback: Traceback (most recent call last):
  File "D:\python\myNew\services\word_image_service.py", line 436, in process_single_word
    image_url = await self.generate_word_image(word_data, image_prompt)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\myNew\services\word_image_service.py", line 178, in generate_word_image
    response = await self.openai_client.images.generate(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\resources\images.py", line 670, in generate
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1784, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1584, in request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}

2025-08-08 16:35:34,432 - ERROR - FAILED [27/30]: Failed to process word 113: РёС‚Р±Р°Р»С‹Т›
2025-08-08 16:35:38,844 - ERROR - Error generating image prompt for 'РєУ™РјС€Р°С‚': Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-08-08 16:35:39,226 - ERROR - Error generating image for 'РєУ™РјС€Р°С‚': Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:35:39,226 - ERROR - ERROR: Error processing word 114 ('??????'): Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:35:39,227 - ERROR - Full traceback: Traceback (most recent call last):
  File "D:\python\myNew\services\word_image_service.py", line 436, in process_single_word
    image_url = await self.generate_word_image(word_data, image_prompt)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\myNew\services\word_image_service.py", line 178, in generate_word_image
    response = await self.openai_client.images.generate(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\resources\images.py", line 670, in generate
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1784, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1584, in request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}

2025-08-08 16:35:39,227 - ERROR - FAILED [28/30]: Failed to process word 114: РєУ™РјС€Р°С‚
2025-08-08 16:35:43,458 - ERROR - Error generating image prompt for 'РєРµР»РµСЃ': Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-08-08 16:35:44,433 - ERROR - Error generating image for 'РєРµР»РµСЃ': Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:35:44,434 - ERROR - ERROR: Error processing word 115 ('?????'): Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:35:44,434 - ERROR - Full traceback: Traceback (most recent call last):
  File "D:\python\myNew\services\word_image_service.py", line 436, in process_single_word
    image_url = await self.generate_word_image(word_data, image_prompt)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\myNew\services\word_image_service.py", line 178, in generate_word_image
    response = await self.openai_client.images.generate(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\resources\images.py", line 670, in generate
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1784, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1584, in request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}

2025-08-08 16:35:44,434 - ERROR - FAILED [29/30]: Failed to process word 115: РєРµР»РµСЃ
2025-08-08 16:35:48,947 - ERROR - Error generating image prompt for 'РєРµСЃС–СЂС‚РєРµ': Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-08-08 16:35:49,342 - ERROR - Error generating image for 'РєРµСЃС–СЂС‚РєРµ': Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:35:49,342 - ERROR - ERROR: Error processing word 116 ('????????'): Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}
2025-08-08 16:35:49,343 - ERROR - Full traceback: Traceback (most recent call last):
  File "D:\python\myNew\services\word_image_service.py", line 436, in process_single_word
    image_url = await self.generate_word_image(word_data, image_prompt)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\myNew\services\word_image_service.py", line 178, in generate_word_image
    response = await self.openai_client.images.generate(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\resources\images.py", line 670, in generate
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1784, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\python\KazakhLearn\.venv\Lib\site-packages\openai\_base_client.py", line 1584, in request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': 'Billing hard limit has been reached', 'type': 'image_generation_user_error', 'param': None, 'code': 'billing_hard_limit_reached'}}

2025-08-08 16:35:49,343 - ERROR - FAILED [30/30]: Failed to process word 116: РєРµСЃС–СЂС‚РєРµ
